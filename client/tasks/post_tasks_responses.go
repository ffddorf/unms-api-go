// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostTasksReader is a Reader for the PostTasks structure.
type PostTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTasksOK creates a PostTasksOK with default headers values
func NewPostTasksOK() *PostTasksOK {
	return &PostTasksOK{}
}

/*PostTasksOK handles this case with default header values.

Successful
*/
type PostTasksOK struct {
	Payload *models.Status
}

func (o *PostTasksOK) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksOK  %+v", 200, o.Payload)
}

func (o *PostTasksOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksBadRequest creates a PostTasksBadRequest with default headers values
func NewPostTasksBadRequest() *PostTasksBadRequest {
	return &PostTasksBadRequest{}
}

/*PostTasksBadRequest handles this case with default header values.

Bad Request
*/
type PostTasksBadRequest struct {
	Payload *models.Error
}

func (o *PostTasksBadRequest) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksBadRequest  %+v", 400, o.Payload)
}

func (o *PostTasksBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksUnauthorized creates a PostTasksUnauthorized with default headers values
func NewPostTasksUnauthorized() *PostTasksUnauthorized {
	return &PostTasksUnauthorized{}
}

/*PostTasksUnauthorized handles this case with default header values.

Unauthorized
*/
type PostTasksUnauthorized struct {
	Payload *models.Error
}

func (o *PostTasksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTasksUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksForbidden creates a PostTasksForbidden with default headers values
func NewPostTasksForbidden() *PostTasksForbidden {
	return &PostTasksForbidden{}
}

/*PostTasksForbidden handles this case with default header values.

Forbidden
*/
type PostTasksForbidden struct {
	Payload *models.Error
}

func (o *PostTasksForbidden) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksForbidden  %+v", 403, o.Payload)
}

func (o *PostTasksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksNotFound creates a PostTasksNotFound with default headers values
func NewPostTasksNotFound() *PostTasksNotFound {
	return &PostTasksNotFound{}
}

/*PostTasksNotFound handles this case with default header values.

Not Found
*/
type PostTasksNotFound struct {
	Payload *models.Error
}

func (o *PostTasksNotFound) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksNotFound  %+v", 404, o.Payload)
}

func (o *PostTasksNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksInternalServerError creates a PostTasksInternalServerError with default headers values
func NewPostTasksInternalServerError() *PostTasksInternalServerError {
	return &PostTasksInternalServerError{}
}

/*PostTasksInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostTasksInternalServerError struct {
	Payload *models.Error
}

func (o *PostTasksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTasksInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
