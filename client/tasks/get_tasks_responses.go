// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetTasksReader is a Reader for the GetTasks structure.
type GetTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTasksOK creates a GetTasksOK with default headers values
func NewGetTasksOK() *GetTasksOK {
	return &GetTasksOK{}
}

/*GetTasksOK handles this case with default header values.

Successful
*/
type GetTasksOK struct {
	Payload *models.Task
}

func (o *GetTasksOK) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] getTasksOK  %+v", 200, o.Payload)
}

func (o *GetTasksOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *GetTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksUnauthorized creates a GetTasksUnauthorized with default headers values
func NewGetTasksUnauthorized() *GetTasksUnauthorized {
	return &GetTasksUnauthorized{}
}

/*GetTasksUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTasksUnauthorized struct {
	Payload *models.Error
}

func (o *GetTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] getTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTasksUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksForbidden creates a GetTasksForbidden with default headers values
func NewGetTasksForbidden() *GetTasksForbidden {
	return &GetTasksForbidden{}
}

/*GetTasksForbidden handles this case with default header values.

Forbidden
*/
type GetTasksForbidden struct {
	Payload *models.Error
}

func (o *GetTasksForbidden) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] getTasksForbidden  %+v", 403, o.Payload)
}

func (o *GetTasksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksInternalServerError creates a GetTasksInternalServerError with default headers values
func NewGetTasksInternalServerError() *GetTasksInternalServerError {
	return &GetTasksInternalServerError{}
}

/*GetTasksInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetTasksInternalServerError struct {
	Payload *models.Error
}

func (o *GetTasksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] getTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTasksInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
