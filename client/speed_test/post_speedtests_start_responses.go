// Code generated by go-swagger; DO NOT EDIT.

package speed_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostSpeedtestsStartReader is a Reader for the PostSpeedtestsStart structure.
type PostSpeedtestsStartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpeedtestsStartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpeedtestsStartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSpeedtestsStartBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSpeedtestsStartUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSpeedtestsStartForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpeedtestsStartInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSpeedtestsStartOK creates a PostSpeedtestsStartOK with default headers values
func NewPostSpeedtestsStartOK() *PostSpeedtestsStartOK {
	return &PostSpeedtestsStartOK{}
}

/*PostSpeedtestsStartOK handles this case with default header values.

Successful
*/
type PostSpeedtestsStartOK struct {
	Payload *models.SpeedTestStart
}

func (o *PostSpeedtestsStartOK) Error() string {
	return fmt.Sprintf("[POST /speed-tests/start][%d] postSpeedtestsStartOK  %+v", 200, o.Payload)
}

func (o *PostSpeedtestsStartOK) GetPayload() *models.SpeedTestStart {
	return o.Payload
}

func (o *PostSpeedtestsStartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SpeedTestStart)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeedtestsStartBadRequest creates a PostSpeedtestsStartBadRequest with default headers values
func NewPostSpeedtestsStartBadRequest() *PostSpeedtestsStartBadRequest {
	return &PostSpeedtestsStartBadRequest{}
}

/*PostSpeedtestsStartBadRequest handles this case with default header values.

Bad Request
*/
type PostSpeedtestsStartBadRequest struct {
	Payload *models.Error
}

func (o *PostSpeedtestsStartBadRequest) Error() string {
	return fmt.Sprintf("[POST /speed-tests/start][%d] postSpeedtestsStartBadRequest  %+v", 400, o.Payload)
}

func (o *PostSpeedtestsStartBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSpeedtestsStartBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeedtestsStartUnauthorized creates a PostSpeedtestsStartUnauthorized with default headers values
func NewPostSpeedtestsStartUnauthorized() *PostSpeedtestsStartUnauthorized {
	return &PostSpeedtestsStartUnauthorized{}
}

/*PostSpeedtestsStartUnauthorized handles this case with default header values.

Unauthorized
*/
type PostSpeedtestsStartUnauthorized struct {
	Payload *models.Error
}

func (o *PostSpeedtestsStartUnauthorized) Error() string {
	return fmt.Sprintf("[POST /speed-tests/start][%d] postSpeedtestsStartUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSpeedtestsStartUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSpeedtestsStartUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeedtestsStartForbidden creates a PostSpeedtestsStartForbidden with default headers values
func NewPostSpeedtestsStartForbidden() *PostSpeedtestsStartForbidden {
	return &PostSpeedtestsStartForbidden{}
}

/*PostSpeedtestsStartForbidden handles this case with default header values.

Forbidden
*/
type PostSpeedtestsStartForbidden struct {
	Payload *models.Error
}

func (o *PostSpeedtestsStartForbidden) Error() string {
	return fmt.Sprintf("[POST /speed-tests/start][%d] postSpeedtestsStartForbidden  %+v", 403, o.Payload)
}

func (o *PostSpeedtestsStartForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSpeedtestsStartForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpeedtestsStartInternalServerError creates a PostSpeedtestsStartInternalServerError with default headers values
func NewPostSpeedtestsStartInternalServerError() *PostSpeedtestsStartInternalServerError {
	return &PostSpeedtestsStartInternalServerError{}
}

/*PostSpeedtestsStartInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostSpeedtestsStartInternalServerError struct {
	Payload *models.Error
}

func (o *PostSpeedtestsStartInternalServerError) Error() string {
	return fmt.Sprintf("[POST /speed-tests/start][%d] postSpeedtestsStartInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSpeedtestsStartInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSpeedtestsStartInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
