// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutNmsRefreshcertificateReader is a Reader for the PutNmsRefreshcertificate structure.
type PutNmsRefreshcertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutNmsRefreshcertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutNmsRefreshcertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutNmsRefreshcertificateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutNmsRefreshcertificateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutNmsRefreshcertificateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutNmsRefreshcertificateOK creates a PutNmsRefreshcertificateOK with default headers values
func NewPutNmsRefreshcertificateOK() *PutNmsRefreshcertificateOK {
	return &PutNmsRefreshcertificateOK{}
}

/*PutNmsRefreshcertificateOK handles this case with default header values.

Successful
*/
type PutNmsRefreshcertificateOK struct {
	Payload *models.Status
}

func (o *PutNmsRefreshcertificateOK) Error() string {
	return fmt.Sprintf("[PUT /nms/refresh-certificate][%d] putNmsRefreshcertificateOK  %+v", 200, o.Payload)
}

func (o *PutNmsRefreshcertificateOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutNmsRefreshcertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNmsRefreshcertificateUnauthorized creates a PutNmsRefreshcertificateUnauthorized with default headers values
func NewPutNmsRefreshcertificateUnauthorized() *PutNmsRefreshcertificateUnauthorized {
	return &PutNmsRefreshcertificateUnauthorized{}
}

/*PutNmsRefreshcertificateUnauthorized handles this case with default header values.

Unauthorized
*/
type PutNmsRefreshcertificateUnauthorized struct {
	Payload *models.Error
}

func (o *PutNmsRefreshcertificateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /nms/refresh-certificate][%d] putNmsRefreshcertificateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutNmsRefreshcertificateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutNmsRefreshcertificateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNmsRefreshcertificateForbidden creates a PutNmsRefreshcertificateForbidden with default headers values
func NewPutNmsRefreshcertificateForbidden() *PutNmsRefreshcertificateForbidden {
	return &PutNmsRefreshcertificateForbidden{}
}

/*PutNmsRefreshcertificateForbidden handles this case with default header values.

Forbidden
*/
type PutNmsRefreshcertificateForbidden struct {
	Payload *models.Error
}

func (o *PutNmsRefreshcertificateForbidden) Error() string {
	return fmt.Sprintf("[PUT /nms/refresh-certificate][%d] putNmsRefreshcertificateForbidden  %+v", 403, o.Payload)
}

func (o *PutNmsRefreshcertificateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutNmsRefreshcertificateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutNmsRefreshcertificateInternalServerError creates a PutNmsRefreshcertificateInternalServerError with default headers values
func NewPutNmsRefreshcertificateInternalServerError() *PutNmsRefreshcertificateInternalServerError {
	return &PutNmsRefreshcertificateInternalServerError{}
}

/*PutNmsRefreshcertificateInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutNmsRefreshcertificateInternalServerError struct {
	Payload *models.Error
}

func (o *PutNmsRefreshcertificateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /nms/refresh-certificate][%d] putNmsRefreshcertificateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutNmsRefreshcertificateInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutNmsRefreshcertificateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
