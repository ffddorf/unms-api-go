// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostNmsBlogPostsPostidReadReader is a Reader for the PostNmsBlogPostsPostidRead structure.
type PostNmsBlogPostsPostidReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNmsBlogPostsPostidReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostNmsBlogPostsPostidReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostNmsBlogPostsPostidReadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostNmsBlogPostsPostidReadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostNmsBlogPostsPostidReadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostNmsBlogPostsPostidReadConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostNmsBlogPostsPostidReadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostNmsBlogPostsPostidReadOK creates a PostNmsBlogPostsPostidReadOK with default headers values
func NewPostNmsBlogPostsPostidReadOK() *PostNmsBlogPostsPostidReadOK {
	return &PostNmsBlogPostsPostidReadOK{}
}

/*PostNmsBlogPostsPostidReadOK handles this case with default header values.

Successful
*/
type PostNmsBlogPostsPostidReadOK struct {
	Payload *models.Status
}

func (o *PostNmsBlogPostsPostidReadOK) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadOK  %+v", 200, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNmsBlogPostsPostidReadBadRequest creates a PostNmsBlogPostsPostidReadBadRequest with default headers values
func NewPostNmsBlogPostsPostidReadBadRequest() *PostNmsBlogPostsPostidReadBadRequest {
	return &PostNmsBlogPostsPostidReadBadRequest{}
}

/*PostNmsBlogPostsPostidReadBadRequest handles this case with default header values.

Bad Request
*/
type PostNmsBlogPostsPostidReadBadRequest struct {
	Payload *models.Error
}

func (o *PostNmsBlogPostsPostidReadBadRequest) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadBadRequest  %+v", 400, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNmsBlogPostsPostidReadUnauthorized creates a PostNmsBlogPostsPostidReadUnauthorized with default headers values
func NewPostNmsBlogPostsPostidReadUnauthorized() *PostNmsBlogPostsPostidReadUnauthorized {
	return &PostNmsBlogPostsPostidReadUnauthorized{}
}

/*PostNmsBlogPostsPostidReadUnauthorized handles this case with default header values.

Unauthorized
*/
type PostNmsBlogPostsPostidReadUnauthorized struct {
	Payload *models.Error
}

func (o *PostNmsBlogPostsPostidReadUnauthorized) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadUnauthorized  %+v", 401, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNmsBlogPostsPostidReadForbidden creates a PostNmsBlogPostsPostidReadForbidden with default headers values
func NewPostNmsBlogPostsPostidReadForbidden() *PostNmsBlogPostsPostidReadForbidden {
	return &PostNmsBlogPostsPostidReadForbidden{}
}

/*PostNmsBlogPostsPostidReadForbidden handles this case with default header values.

Forbidden
*/
type PostNmsBlogPostsPostidReadForbidden struct {
	Payload *models.Error
}

func (o *PostNmsBlogPostsPostidReadForbidden) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadForbidden  %+v", 403, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNmsBlogPostsPostidReadConflict creates a PostNmsBlogPostsPostidReadConflict with default headers values
func NewPostNmsBlogPostsPostidReadConflict() *PostNmsBlogPostsPostidReadConflict {
	return &PostNmsBlogPostsPostidReadConflict{}
}

/*PostNmsBlogPostsPostidReadConflict handles this case with default header values.

Conflict
*/
type PostNmsBlogPostsPostidReadConflict struct {
	Payload *models.Error
}

func (o *PostNmsBlogPostsPostidReadConflict) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadConflict  %+v", 409, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNmsBlogPostsPostidReadInternalServerError creates a PostNmsBlogPostsPostidReadInternalServerError with default headers values
func NewPostNmsBlogPostsPostidReadInternalServerError() *PostNmsBlogPostsPostidReadInternalServerError {
	return &PostNmsBlogPostsPostidReadInternalServerError{}
}

/*PostNmsBlogPostsPostidReadInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostNmsBlogPostsPostidReadInternalServerError struct {
	Payload *models.Error
}

func (o *PostNmsBlogPostsPostidReadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /nms/blog/posts/{postId}/read][%d] postNmsBlogPostsPostidReadInternalServerError  %+v", 500, o.Payload)
}

func (o *PostNmsBlogPostsPostidReadInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostNmsBlogPostsPostidReadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
