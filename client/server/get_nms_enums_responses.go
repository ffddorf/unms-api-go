// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsEnumsReader is a Reader for the GetNmsEnums structure.
type GetNmsEnumsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsEnumsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsEnumsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNmsEnumsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNmsEnumsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsEnumsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsEnumsOK creates a GetNmsEnumsOK with default headers values
func NewGetNmsEnumsOK() *GetNmsEnumsOK {
	return &GetNmsEnumsOK{}
}

/*GetNmsEnumsOK handles this case with default header values.

Enumerations object
*/
type GetNmsEnumsOK struct {
	Payload string
}

func (o *GetNmsEnumsOK) Error() string {
	return fmt.Sprintf("[GET /nms/enums][%d] getNmsEnumsOK  %+v", 200, o.Payload)
}

func (o *GetNmsEnumsOK) GetPayload() string {
	return o.Payload
}

func (o *GetNmsEnumsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsEnumsUnauthorized creates a GetNmsEnumsUnauthorized with default headers values
func NewGetNmsEnumsUnauthorized() *GetNmsEnumsUnauthorized {
	return &GetNmsEnumsUnauthorized{}
}

/*GetNmsEnumsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNmsEnumsUnauthorized struct {
	Payload *models.Error
}

func (o *GetNmsEnumsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nms/enums][%d] getNmsEnumsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNmsEnumsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsEnumsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsEnumsForbidden creates a GetNmsEnumsForbidden with default headers values
func NewGetNmsEnumsForbidden() *GetNmsEnumsForbidden {
	return &GetNmsEnumsForbidden{}
}

/*GetNmsEnumsForbidden handles this case with default header values.

Forbidden
*/
type GetNmsEnumsForbidden struct {
	Payload *models.Error
}

func (o *GetNmsEnumsForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/enums][%d] getNmsEnumsForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsEnumsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsEnumsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsEnumsInternalServerError creates a GetNmsEnumsInternalServerError with default headers values
func NewGetNmsEnumsInternalServerError() *GetNmsEnumsInternalServerError {
	return &GetNmsEnumsInternalServerError{}
}

/*GetNmsEnumsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsEnumsInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsEnumsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/enums][%d] getNmsEnumsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsEnumsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsEnumsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
