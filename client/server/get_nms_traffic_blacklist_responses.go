// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsTrafficBlacklistReader is a Reader for the GetNmsTrafficBlacklist structure.
type GetNmsTrafficBlacklistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsTrafficBlacklistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsTrafficBlacklistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNmsTrafficBlacklistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNmsTrafficBlacklistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsTrafficBlacklistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsTrafficBlacklistOK creates a GetNmsTrafficBlacklistOK with default headers values
func NewGetNmsTrafficBlacklistOK() *GetNmsTrafficBlacklistOK {
	return &GetNmsTrafficBlacklistOK{}
}

/*GetNmsTrafficBlacklistOK handles this case with default header values.

Successful
*/
type GetNmsTrafficBlacklistOK struct {
	Payload models.BlacklistSchema
}

func (o *GetNmsTrafficBlacklistOK) Error() string {
	return fmt.Sprintf("[GET /nms/traffic/blacklist][%d] getNmsTrafficBlacklistOK  %+v", 200, o.Payload)
}

func (o *GetNmsTrafficBlacklistOK) GetPayload() models.BlacklistSchema {
	return o.Payload
}

func (o *GetNmsTrafficBlacklistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficBlacklistUnauthorized creates a GetNmsTrafficBlacklistUnauthorized with default headers values
func NewGetNmsTrafficBlacklistUnauthorized() *GetNmsTrafficBlacklistUnauthorized {
	return &GetNmsTrafficBlacklistUnauthorized{}
}

/*GetNmsTrafficBlacklistUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNmsTrafficBlacklistUnauthorized struct {
	Payload *models.Error
}

func (o *GetNmsTrafficBlacklistUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nms/traffic/blacklist][%d] getNmsTrafficBlacklistUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNmsTrafficBlacklistUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficBlacklistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficBlacklistForbidden creates a GetNmsTrafficBlacklistForbidden with default headers values
func NewGetNmsTrafficBlacklistForbidden() *GetNmsTrafficBlacklistForbidden {
	return &GetNmsTrafficBlacklistForbidden{}
}

/*GetNmsTrafficBlacklistForbidden handles this case with default header values.

Forbidden
*/
type GetNmsTrafficBlacklistForbidden struct {
	Payload *models.Error
}

func (o *GetNmsTrafficBlacklistForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/traffic/blacklist][%d] getNmsTrafficBlacklistForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsTrafficBlacklistForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficBlacklistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficBlacklistInternalServerError creates a GetNmsTrafficBlacklistInternalServerError with default headers values
func NewGetNmsTrafficBlacklistInternalServerError() *GetNmsTrafficBlacklistInternalServerError {
	return &GetNmsTrafficBlacklistInternalServerError{}
}

/*GetNmsTrafficBlacklistInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsTrafficBlacklistInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsTrafficBlacklistInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/traffic/blacklist][%d] getNmsTrafficBlacklistInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsTrafficBlacklistInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficBlacklistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
