// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsVersionLatestReader is a Reader for the GetNmsVersionLatest structure.
type GetNmsVersionLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsVersionLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsVersionLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNmsVersionLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsVersionLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsVersionLatestOK creates a GetNmsVersionLatestOK with default headers values
func NewGetNmsVersionLatestOK() *GetNmsVersionLatestOK {
	return &GetNmsVersionLatestOK{}
}

/*GetNmsVersionLatestOK handles this case with default header values.

Successful
*/
type GetNmsVersionLatestOK struct {
	Payload string
}

func (o *GetNmsVersionLatestOK) Error() string {
	return fmt.Sprintf("[GET /nms/version/latest][%d] getNmsVersionLatestOK  %+v", 200, o.Payload)
}

func (o *GetNmsVersionLatestOK) GetPayload() string {
	return o.Payload
}

func (o *GetNmsVersionLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsVersionLatestForbidden creates a GetNmsVersionLatestForbidden with default headers values
func NewGetNmsVersionLatestForbidden() *GetNmsVersionLatestForbidden {
	return &GetNmsVersionLatestForbidden{}
}

/*GetNmsVersionLatestForbidden handles this case with default header values.

Forbidden
*/
type GetNmsVersionLatestForbidden struct {
	Payload *models.Error
}

func (o *GetNmsVersionLatestForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/version/latest][%d] getNmsVersionLatestForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsVersionLatestForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsVersionLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsVersionLatestInternalServerError creates a GetNmsVersionLatestInternalServerError with default headers values
func NewGetNmsVersionLatestInternalServerError() *GetNmsVersionLatestInternalServerError {
	return &GetNmsVersionLatestInternalServerError{}
}

/*GetNmsVersionLatestInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsVersionLatestInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsVersionLatestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/version/latest][%d] getNmsVersionLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsVersionLatestInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsVersionLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
