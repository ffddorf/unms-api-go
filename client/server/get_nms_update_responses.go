// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsUpdateReader is a Reader for the GetNmsUpdate structure.
type GetNmsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNmsUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNmsUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetNmsUpdateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsUpdateOK creates a GetNmsUpdateOK with default headers values
func NewGetNmsUpdateOK() *GetNmsUpdateOK {
	return &GetNmsUpdateOK{}
}

/*GetNmsUpdateOK handles this case with default header values.

Successful
*/
type GetNmsUpdateOK struct {
	Payload *models.NmsUpdateStatus
}

func (o *GetNmsUpdateOK) Error() string {
	return fmt.Sprintf("[GET /nms/update][%d] getNmsUpdateOK  %+v", 200, o.Payload)
}

func (o *GetNmsUpdateOK) GetPayload() *models.NmsUpdateStatus {
	return o.Payload
}

func (o *GetNmsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NmsUpdateStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsUpdateUnauthorized creates a GetNmsUpdateUnauthorized with default headers values
func NewGetNmsUpdateUnauthorized() *GetNmsUpdateUnauthorized {
	return &GetNmsUpdateUnauthorized{}
}

/*GetNmsUpdateUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNmsUpdateUnauthorized struct {
	Payload *models.Error
}

func (o *GetNmsUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nms/update][%d] getNmsUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNmsUpdateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsUpdateForbidden creates a GetNmsUpdateForbidden with default headers values
func NewGetNmsUpdateForbidden() *GetNmsUpdateForbidden {
	return &GetNmsUpdateForbidden{}
}

/*GetNmsUpdateForbidden handles this case with default header values.

Forbidden
*/
type GetNmsUpdateForbidden struct {
	Payload *models.Error
}

func (o *GetNmsUpdateForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/update][%d] getNmsUpdateForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsUpdateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsUpdateInternalServerError creates a GetNmsUpdateInternalServerError with default headers values
func NewGetNmsUpdateInternalServerError() *GetNmsUpdateInternalServerError {
	return &GetNmsUpdateInternalServerError{}
}

/*GetNmsUpdateInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsUpdateInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/update][%d] getNmsUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsUpdateInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsUpdateServiceUnavailable creates a GetNmsUpdateServiceUnavailable with default headers values
func NewGetNmsUpdateServiceUnavailable() *GetNmsUpdateServiceUnavailable {
	return &GetNmsUpdateServiceUnavailable{}
}

/*GetNmsUpdateServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type GetNmsUpdateServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetNmsUpdateServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /nms/update][%d] getNmsUpdateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetNmsUpdateServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsUpdateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
