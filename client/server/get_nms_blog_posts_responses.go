// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsBlogPostsReader is a Reader for the GetNmsBlogPosts structure.
type GetNmsBlogPostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsBlogPostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsBlogPostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNmsBlogPostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetNmsBlogPostsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNmsBlogPostsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsBlogPostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsBlogPostsOK creates a GetNmsBlogPostsOK with default headers values
func NewGetNmsBlogPostsOK() *GetNmsBlogPostsOK {
	return &GetNmsBlogPostsOK{}
}

/*GetNmsBlogPostsOK handles this case with default header values.

Successful
*/
type GetNmsBlogPostsOK struct {
	Payload *models.BlogPosts
}

func (o *GetNmsBlogPostsOK) Error() string {
	return fmt.Sprintf("[GET /nms/blog/posts][%d] getNmsBlogPostsOK  %+v", 200, o.Payload)
}

func (o *GetNmsBlogPostsOK) GetPayload() *models.BlogPosts {
	return o.Payload
}

func (o *GetNmsBlogPostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlogPosts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsBlogPostsBadRequest creates a GetNmsBlogPostsBadRequest with default headers values
func NewGetNmsBlogPostsBadRequest() *GetNmsBlogPostsBadRequest {
	return &GetNmsBlogPostsBadRequest{}
}

/*GetNmsBlogPostsBadRequest handles this case with default header values.

Bad Request
*/
type GetNmsBlogPostsBadRequest struct {
	Payload *models.Error
}

func (o *GetNmsBlogPostsBadRequest) Error() string {
	return fmt.Sprintf("[GET /nms/blog/posts][%d] getNmsBlogPostsBadRequest  %+v", 400, o.Payload)
}

func (o *GetNmsBlogPostsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsBlogPostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsBlogPostsUnauthorized creates a GetNmsBlogPostsUnauthorized with default headers values
func NewGetNmsBlogPostsUnauthorized() *GetNmsBlogPostsUnauthorized {
	return &GetNmsBlogPostsUnauthorized{}
}

/*GetNmsBlogPostsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNmsBlogPostsUnauthorized struct {
	Payload *models.Error
}

func (o *GetNmsBlogPostsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nms/blog/posts][%d] getNmsBlogPostsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNmsBlogPostsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsBlogPostsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsBlogPostsForbidden creates a GetNmsBlogPostsForbidden with default headers values
func NewGetNmsBlogPostsForbidden() *GetNmsBlogPostsForbidden {
	return &GetNmsBlogPostsForbidden{}
}

/*GetNmsBlogPostsForbidden handles this case with default header values.

Forbidden
*/
type GetNmsBlogPostsForbidden struct {
	Payload *models.Error
}

func (o *GetNmsBlogPostsForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/blog/posts][%d] getNmsBlogPostsForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsBlogPostsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsBlogPostsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsBlogPostsInternalServerError creates a GetNmsBlogPostsInternalServerError with default headers values
func NewGetNmsBlogPostsInternalServerError() *GetNmsBlogPostsInternalServerError {
	return &GetNmsBlogPostsInternalServerError{}
}

/*GetNmsBlogPostsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsBlogPostsInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsBlogPostsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/blog/posts][%d] getNmsBlogPostsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsBlogPostsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsBlogPostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
