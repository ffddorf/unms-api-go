// Code generated by go-swagger; DO NOT EDIT.

package simulation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutSimulationLinksIDReader is a Reader for the PutSimulationLinksID structure.
type PutSimulationLinksIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSimulationLinksIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutSimulationLinksIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutSimulationLinksIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutSimulationLinksIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSimulationLinksIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutSimulationLinksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutSimulationLinksIDOK creates a PutSimulationLinksIDOK with default headers values
func NewPutSimulationLinksIDOK() *PutSimulationLinksIDOK {
	return &PutSimulationLinksIDOK{}
}

/*PutSimulationLinksIDOK handles this case with default header values.

Successful
*/
type PutSimulationLinksIDOK struct {
	Payload *models.SimulationLink
}

func (o *PutSimulationLinksIDOK) Error() string {
	return fmt.Sprintf("[PUT /simulation/links/{id}][%d] putSimulationLinksIdOK  %+v", 200, o.Payload)
}

func (o *PutSimulationLinksIDOK) GetPayload() *models.SimulationLink {
	return o.Payload
}

func (o *PutSimulationLinksIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SimulationLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationLinksIDBadRequest creates a PutSimulationLinksIDBadRequest with default headers values
func NewPutSimulationLinksIDBadRequest() *PutSimulationLinksIDBadRequest {
	return &PutSimulationLinksIDBadRequest{}
}

/*PutSimulationLinksIDBadRequest handles this case with default header values.

Bad Request
*/
type PutSimulationLinksIDBadRequest struct {
	Payload *models.Error
}

func (o *PutSimulationLinksIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /simulation/links/{id}][%d] putSimulationLinksIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutSimulationLinksIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutSimulationLinksIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationLinksIDUnauthorized creates a PutSimulationLinksIDUnauthorized with default headers values
func NewPutSimulationLinksIDUnauthorized() *PutSimulationLinksIDUnauthorized {
	return &PutSimulationLinksIDUnauthorized{}
}

/*PutSimulationLinksIDUnauthorized handles this case with default header values.

Unauthorized
*/
type PutSimulationLinksIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutSimulationLinksIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /simulation/links/{id}][%d] putSimulationLinksIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutSimulationLinksIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutSimulationLinksIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationLinksIDNotFound creates a PutSimulationLinksIDNotFound with default headers values
func NewPutSimulationLinksIDNotFound() *PutSimulationLinksIDNotFound {
	return &PutSimulationLinksIDNotFound{}
}

/*PutSimulationLinksIDNotFound handles this case with default header values.

Not Found
*/
type PutSimulationLinksIDNotFound struct {
	Payload *models.Error
}

func (o *PutSimulationLinksIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /simulation/links/{id}][%d] putSimulationLinksIdNotFound  %+v", 404, o.Payload)
}

func (o *PutSimulationLinksIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutSimulationLinksIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationLinksIDInternalServerError creates a PutSimulationLinksIDInternalServerError with default headers values
func NewPutSimulationLinksIDInternalServerError() *PutSimulationLinksIDInternalServerError {
	return &PutSimulationLinksIDInternalServerError{}
}

/*PutSimulationLinksIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutSimulationLinksIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutSimulationLinksIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /simulation/links/{id}][%d] putSimulationLinksIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutSimulationLinksIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutSimulationLinksIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
