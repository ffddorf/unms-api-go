// Code generated by go-swagger; DO NOT EDIT.

package outages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetOutagesUnreadReader is a Reader for the GetOutagesUnread structure.
type GetOutagesUnreadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutagesUnreadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutagesUnreadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutagesUnreadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOutagesUnreadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOutagesUnreadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutagesUnreadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutagesUnreadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOutagesUnreadOK creates a GetOutagesUnreadOK with default headers values
func NewGetOutagesUnreadOK() *GetOutagesUnreadOK {
	return &GetOutagesUnreadOK{}
}

/*GetOutagesUnreadOK handles this case with default header values.

Successful
*/
type GetOutagesUnreadOK struct {
	Payload *models.UnreadOutages
}

func (o *GetOutagesUnreadOK) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadOK  %+v", 200, o.Payload)
}

func (o *GetOutagesUnreadOK) GetPayload() *models.UnreadOutages {
	return o.Payload
}

func (o *GetOutagesUnreadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnreadOutages)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutagesUnreadBadRequest creates a GetOutagesUnreadBadRequest with default headers values
func NewGetOutagesUnreadBadRequest() *GetOutagesUnreadBadRequest {
	return &GetOutagesUnreadBadRequest{}
}

/*GetOutagesUnreadBadRequest handles this case with default header values.

Bad Request
*/
type GetOutagesUnreadBadRequest struct {
	Payload *models.Error
}

func (o *GetOutagesUnreadBadRequest) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutagesUnreadBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutagesUnreadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutagesUnreadUnauthorized creates a GetOutagesUnreadUnauthorized with default headers values
func NewGetOutagesUnreadUnauthorized() *GetOutagesUnreadUnauthorized {
	return &GetOutagesUnreadUnauthorized{}
}

/*GetOutagesUnreadUnauthorized handles this case with default header values.

Unauthorized
*/
type GetOutagesUnreadUnauthorized struct {
	Payload *models.Error
}

func (o *GetOutagesUnreadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOutagesUnreadUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutagesUnreadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutagesUnreadForbidden creates a GetOutagesUnreadForbidden with default headers values
func NewGetOutagesUnreadForbidden() *GetOutagesUnreadForbidden {
	return &GetOutagesUnreadForbidden{}
}

/*GetOutagesUnreadForbidden handles this case with default header values.

Forbidden
*/
type GetOutagesUnreadForbidden struct {
	Payload *models.Error
}

func (o *GetOutagesUnreadForbidden) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadForbidden  %+v", 403, o.Payload)
}

func (o *GetOutagesUnreadForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutagesUnreadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutagesUnreadNotFound creates a GetOutagesUnreadNotFound with default headers values
func NewGetOutagesUnreadNotFound() *GetOutagesUnreadNotFound {
	return &GetOutagesUnreadNotFound{}
}

/*GetOutagesUnreadNotFound handles this case with default header values.

Not Found
*/
type GetOutagesUnreadNotFound struct {
	Payload *models.Error
}

func (o *GetOutagesUnreadNotFound) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadNotFound  %+v", 404, o.Payload)
}

func (o *GetOutagesUnreadNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutagesUnreadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutagesUnreadInternalServerError creates a GetOutagesUnreadInternalServerError with default headers values
func NewGetOutagesUnreadInternalServerError() *GetOutagesUnreadInternalServerError {
	return &GetOutagesUnreadInternalServerError{}
}

/*GetOutagesUnreadInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetOutagesUnreadInternalServerError struct {
	Payload *models.Error
}

func (o *GetOutagesUnreadInternalServerError) Error() string {
	return fmt.Sprintf("[GET /outages/unread][%d] getOutagesUnreadInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOutagesUnreadInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutagesUnreadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
