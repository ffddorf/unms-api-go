// Code generated by go-swagger; DO NOT EDIT.

package c_r_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostCrmClientsReader is a Reader for the PostCrmClients structure.
type PostCrmClientsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCrmClientsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCrmClientsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostCrmClientsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCrmClientsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostCrmClientsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCrmClientsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostCrmClientsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCrmClientsOK creates a PostCrmClientsOK with default headers values
func NewPostCrmClientsOK() *PostCrmClientsOK {
	return &PostCrmClientsOK{}
}

/*PostCrmClientsOK handles this case with default header values.

Successful
*/
type PostCrmClientsOK struct {
	Payload *models.Site
}

func (o *PostCrmClientsOK) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsOK  %+v", 200, o.Payload)
}

func (o *PostCrmClientsOK) GetPayload() *models.Site {
	return o.Payload
}

func (o *PostCrmClientsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Site)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCrmClientsUnauthorized creates a PostCrmClientsUnauthorized with default headers values
func NewPostCrmClientsUnauthorized() *PostCrmClientsUnauthorized {
	return &PostCrmClientsUnauthorized{}
}

/*PostCrmClientsUnauthorized handles this case with default header values.

Unauthorized
*/
type PostCrmClientsUnauthorized struct {
	Payload *models.Error
}

func (o *PostCrmClientsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCrmClientsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostCrmClientsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCrmClientsForbidden creates a PostCrmClientsForbidden with default headers values
func NewPostCrmClientsForbidden() *PostCrmClientsForbidden {
	return &PostCrmClientsForbidden{}
}

/*PostCrmClientsForbidden handles this case with default header values.

Forbidden
*/
type PostCrmClientsForbidden struct {
	Payload *models.Error
}

func (o *PostCrmClientsForbidden) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsForbidden  %+v", 403, o.Payload)
}

func (o *PostCrmClientsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostCrmClientsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCrmClientsConflict creates a PostCrmClientsConflict with default headers values
func NewPostCrmClientsConflict() *PostCrmClientsConflict {
	return &PostCrmClientsConflict{}
}

/*PostCrmClientsConflict handles this case with default header values.

Conflict
*/
type PostCrmClientsConflict struct {
	Payload *models.Error
}

func (o *PostCrmClientsConflict) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsConflict  %+v", 409, o.Payload)
}

func (o *PostCrmClientsConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostCrmClientsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCrmClientsInternalServerError creates a PostCrmClientsInternalServerError with default headers values
func NewPostCrmClientsInternalServerError() *PostCrmClientsInternalServerError {
	return &PostCrmClientsInternalServerError{}
}

/*PostCrmClientsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostCrmClientsInternalServerError struct {
	Payload *models.Error
}

func (o *PostCrmClientsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCrmClientsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostCrmClientsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCrmClientsServiceUnavailable creates a PostCrmClientsServiceUnavailable with default headers values
func NewPostCrmClientsServiceUnavailable() *PostCrmClientsServiceUnavailable {
	return &PostCrmClientsServiceUnavailable{}
}

/*PostCrmClientsServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type PostCrmClientsServiceUnavailable struct {
	Payload *models.Error
}

func (o *PostCrmClientsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /crm/clients][%d] postCrmClientsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCrmClientsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostCrmClientsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
