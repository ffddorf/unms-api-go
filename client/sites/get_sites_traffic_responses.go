// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetSitesTrafficReader is a Reader for the GetSitesTraffic structure.
type GetSitesTrafficReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitesTrafficReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSitesTrafficOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSitesTrafficBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSitesTrafficUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSitesTrafficForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSitesTrafficInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSitesTrafficOK creates a GetSitesTrafficOK with default headers values
func NewGetSitesTrafficOK() *GetSitesTrafficOK {
	return &GetSitesTrafficOK{}
}

/*GetSitesTrafficOK handles this case with default header values.

Successful
*/
type GetSitesTrafficOK struct {
	Payload models.SiteTrafficList
}

func (o *GetSitesTrafficOK) Error() string {
	return fmt.Sprintf("[GET /sites/traffic][%d] getSitesTrafficOK  %+v", 200, o.Payload)
}

func (o *GetSitesTrafficOK) GetPayload() models.SiteTrafficList {
	return o.Payload
}

func (o *GetSitesTrafficOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesTrafficBadRequest creates a GetSitesTrafficBadRequest with default headers values
func NewGetSitesTrafficBadRequest() *GetSitesTrafficBadRequest {
	return &GetSitesTrafficBadRequest{}
}

/*GetSitesTrafficBadRequest handles this case with default header values.

Bad Request
*/
type GetSitesTrafficBadRequest struct {
	Payload *models.Error
}

func (o *GetSitesTrafficBadRequest) Error() string {
	return fmt.Sprintf("[GET /sites/traffic][%d] getSitesTrafficBadRequest  %+v", 400, o.Payload)
}

func (o *GetSitesTrafficBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesTrafficBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesTrafficUnauthorized creates a GetSitesTrafficUnauthorized with default headers values
func NewGetSitesTrafficUnauthorized() *GetSitesTrafficUnauthorized {
	return &GetSitesTrafficUnauthorized{}
}

/*GetSitesTrafficUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSitesTrafficUnauthorized struct {
	Payload *models.Error
}

func (o *GetSitesTrafficUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sites/traffic][%d] getSitesTrafficUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSitesTrafficUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesTrafficUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesTrafficForbidden creates a GetSitesTrafficForbidden with default headers values
func NewGetSitesTrafficForbidden() *GetSitesTrafficForbidden {
	return &GetSitesTrafficForbidden{}
}

/*GetSitesTrafficForbidden handles this case with default header values.

Forbidden
*/
type GetSitesTrafficForbidden struct {
	Payload *models.Error
}

func (o *GetSitesTrafficForbidden) Error() string {
	return fmt.Sprintf("[GET /sites/traffic][%d] getSitesTrafficForbidden  %+v", 403, o.Payload)
}

func (o *GetSitesTrafficForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesTrafficForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesTrafficInternalServerError creates a GetSitesTrafficInternalServerError with default headers values
func NewGetSitesTrafficInternalServerError() *GetSitesTrafficInternalServerError {
	return &GetSitesTrafficInternalServerError{}
}

/*GetSitesTrafficInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSitesTrafficInternalServerError struct {
	Payload *models.Error
}

func (o *GetSitesTrafficInternalServerError) Error() string {
	return fmt.Sprintf("[GET /sites/traffic][%d] getSitesTrafficInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSitesTrafficInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesTrafficInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
