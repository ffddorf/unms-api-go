// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetSitesIDReader is a Reader for the GetSitesID structure.
type GetSitesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSitesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSitesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSitesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSitesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSitesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSitesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSitesIDOK creates a GetSitesIDOK with default headers values
func NewGetSitesIDOK() *GetSitesIDOK {
	return &GetSitesIDOK{}
}

/*GetSitesIDOK handles this case with default header values.

Successful
*/
type GetSitesIDOK struct {
	Payload *models.Site
}

func (o *GetSitesIDOK) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdOK  %+v", 200, o.Payload)
}

func (o *GetSitesIDOK) GetPayload() *models.Site {
	return o.Payload
}

func (o *GetSitesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Site)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesIDBadRequest creates a GetSitesIDBadRequest with default headers values
func NewGetSitesIDBadRequest() *GetSitesIDBadRequest {
	return &GetSitesIDBadRequest{}
}

/*GetSitesIDBadRequest handles this case with default header values.

Bad Request
*/
type GetSitesIDBadRequest struct {
	Payload *models.Error
}

func (o *GetSitesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetSitesIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesIDUnauthorized creates a GetSitesIDUnauthorized with default headers values
func NewGetSitesIDUnauthorized() *GetSitesIDUnauthorized {
	return &GetSitesIDUnauthorized{}
}

/*GetSitesIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSitesIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetSitesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSitesIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesIDForbidden creates a GetSitesIDForbidden with default headers values
func NewGetSitesIDForbidden() *GetSitesIDForbidden {
	return &GetSitesIDForbidden{}
}

/*GetSitesIDForbidden handles this case with default header values.

Forbidden
*/
type GetSitesIDForbidden struct {
	Payload *models.Error
}

func (o *GetSitesIDForbidden) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdForbidden  %+v", 403, o.Payload)
}

func (o *GetSitesIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesIDNotFound creates a GetSitesIDNotFound with default headers values
func NewGetSitesIDNotFound() *GetSitesIDNotFound {
	return &GetSitesIDNotFound{}
}

/*GetSitesIDNotFound handles this case with default header values.

Not Found
*/
type GetSitesIDNotFound struct {
	Payload *models.Error
}

func (o *GetSitesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSitesIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesIDInternalServerError creates a GetSitesIDInternalServerError with default headers values
func NewGetSitesIDInternalServerError() *GetSitesIDInternalServerError {
	return &GetSitesIDInternalServerError{}
}

/*GetSitesIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSitesIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetSitesIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /sites/{id}][%d] getSitesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSitesIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
