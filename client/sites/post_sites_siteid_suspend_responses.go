// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostSitesSiteidSuspendReader is a Reader for the PostSitesSiteidSuspend structure.
type PostSitesSiteidSuspendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSitesSiteidSuspendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSitesSiteidSuspendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSitesSiteidSuspendBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSitesSiteidSuspendUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSitesSiteidSuspendForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSitesSiteidSuspendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSitesSiteidSuspendInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSitesSiteidSuspendOK creates a PostSitesSiteidSuspendOK with default headers values
func NewPostSitesSiteidSuspendOK() *PostSitesSiteidSuspendOK {
	return &PostSitesSiteidSuspendOK{}
}

/*PostSitesSiteidSuspendOK handles this case with default header values.

Result of suspend, updated site
*/
type PostSitesSiteidSuspendOK struct {
	Payload *models.Site1
}

func (o *PostSitesSiteidSuspendOK) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendOK  %+v", 200, o.Payload)
}

func (o *PostSitesSiteidSuspendOK) GetPayload() *models.Site1 {
	return o.Payload
}

func (o *PostSitesSiteidSuspendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Site1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSitesSiteidSuspendBadRequest creates a PostSitesSiteidSuspendBadRequest with default headers values
func NewPostSitesSiteidSuspendBadRequest() *PostSitesSiteidSuspendBadRequest {
	return &PostSitesSiteidSuspendBadRequest{}
}

/*PostSitesSiteidSuspendBadRequest handles this case with default header values.

Bad Request
*/
type PostSitesSiteidSuspendBadRequest struct {
	Payload *models.Error
}

func (o *PostSitesSiteidSuspendBadRequest) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendBadRequest  %+v", 400, o.Payload)
}

func (o *PostSitesSiteidSuspendBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSitesSiteidSuspendBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSitesSiteidSuspendUnauthorized creates a PostSitesSiteidSuspendUnauthorized with default headers values
func NewPostSitesSiteidSuspendUnauthorized() *PostSitesSiteidSuspendUnauthorized {
	return &PostSitesSiteidSuspendUnauthorized{}
}

/*PostSitesSiteidSuspendUnauthorized handles this case with default header values.

Unauthorized
*/
type PostSitesSiteidSuspendUnauthorized struct {
	Payload *models.Error
}

func (o *PostSitesSiteidSuspendUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSitesSiteidSuspendUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSitesSiteidSuspendUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSitesSiteidSuspendForbidden creates a PostSitesSiteidSuspendForbidden with default headers values
func NewPostSitesSiteidSuspendForbidden() *PostSitesSiteidSuspendForbidden {
	return &PostSitesSiteidSuspendForbidden{}
}

/*PostSitesSiteidSuspendForbidden handles this case with default header values.

Forbidden
*/
type PostSitesSiteidSuspendForbidden struct {
	Payload *models.Error
}

func (o *PostSitesSiteidSuspendForbidden) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendForbidden  %+v", 403, o.Payload)
}

func (o *PostSitesSiteidSuspendForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSitesSiteidSuspendForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSitesSiteidSuspendNotFound creates a PostSitesSiteidSuspendNotFound with default headers values
func NewPostSitesSiteidSuspendNotFound() *PostSitesSiteidSuspendNotFound {
	return &PostSitesSiteidSuspendNotFound{}
}

/*PostSitesSiteidSuspendNotFound handles this case with default header values.

Not Found
*/
type PostSitesSiteidSuspendNotFound struct {
	Payload *models.Error
}

func (o *PostSitesSiteidSuspendNotFound) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendNotFound  %+v", 404, o.Payload)
}

func (o *PostSitesSiteidSuspendNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSitesSiteidSuspendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSitesSiteidSuspendInternalServerError creates a PostSitesSiteidSuspendInternalServerError with default headers values
func NewPostSitesSiteidSuspendInternalServerError() *PostSitesSiteidSuspendInternalServerError {
	return &PostSitesSiteidSuspendInternalServerError{}
}

/*PostSitesSiteidSuspendInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostSitesSiteidSuspendInternalServerError struct {
	Payload *models.Error
}

func (o *PostSitesSiteidSuspendInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sites/{siteId}/suspend][%d] postSitesSiteidSuspendInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSitesSiteidSuspendInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSitesSiteidSuspendInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
