// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetSitesSearchReader is a Reader for the GetSitesSearch structure.
type GetSitesSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitesSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSitesSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSitesSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSitesSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSitesSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSitesSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSitesSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSitesSearchOK creates a GetSitesSearchOK with default headers values
func NewGetSitesSearchOK() *GetSitesSearchOK {
	return &GetSitesSearchOK{}
}

/*GetSitesSearchOK handles this case with default header values.

Successful
*/
type GetSitesSearchOK struct {
	Payload models.SitesList
}

func (o *GetSitesSearchOK) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchOK  %+v", 200, o.Payload)
}

func (o *GetSitesSearchOK) GetPayload() models.SitesList {
	return o.Payload
}

func (o *GetSitesSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSearchBadRequest creates a GetSitesSearchBadRequest with default headers values
func NewGetSitesSearchBadRequest() *GetSitesSearchBadRequest {
	return &GetSitesSearchBadRequest{}
}

/*GetSitesSearchBadRequest handles this case with default header values.

Bad Request
*/
type GetSitesSearchBadRequest struct {
	Payload *models.Error
}

func (o *GetSitesSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetSitesSearchBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSearchUnauthorized creates a GetSitesSearchUnauthorized with default headers values
func NewGetSitesSearchUnauthorized() *GetSitesSearchUnauthorized {
	return &GetSitesSearchUnauthorized{}
}

/*GetSitesSearchUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSitesSearchUnauthorized struct {
	Payload *models.Error
}

func (o *GetSitesSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSitesSearchUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSearchForbidden creates a GetSitesSearchForbidden with default headers values
func NewGetSitesSearchForbidden() *GetSitesSearchForbidden {
	return &GetSitesSearchForbidden{}
}

/*GetSitesSearchForbidden handles this case with default header values.

Forbidden
*/
type GetSitesSearchForbidden struct {
	Payload *models.Error
}

func (o *GetSitesSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetSitesSearchForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSearchNotFound creates a GetSitesSearchNotFound with default headers values
func NewGetSitesSearchNotFound() *GetSitesSearchNotFound {
	return &GetSitesSearchNotFound{}
}

/*GetSitesSearchNotFound handles this case with default header values.

Not Found
*/
type GetSitesSearchNotFound struct {
	Payload *models.Error
}

func (o *GetSitesSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchNotFound  %+v", 404, o.Payload)
}

func (o *GetSitesSearchNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSearchInternalServerError creates a GetSitesSearchInternalServerError with default headers values
func NewGetSitesSearchInternalServerError() *GetSitesSearchInternalServerError {
	return &GetSitesSearchInternalServerError{}
}

/*GetSitesSearchInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSitesSearchInternalServerError struct {
	Payload *models.Error
}

func (o *GetSitesSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /sites/search][%d] getSitesSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSitesSearchInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
