// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetSitesSiteidImagesImageidReader is a Reader for the GetSitesSiteidImagesImageid structure.
type GetSitesSiteidImagesImageidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitesSiteidImagesImageidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewGetSitesSiteidImagesImageidBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSitesSiteidImagesImageidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSitesSiteidImagesImageidForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSitesSiteidImagesImageidInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSitesSiteidImagesImageidBadRequest creates a GetSitesSiteidImagesImageidBadRequest with default headers values
func NewGetSitesSiteidImagesImageidBadRequest() *GetSitesSiteidImagesImageidBadRequest {
	return &GetSitesSiteidImagesImageidBadRequest{}
}

/*GetSitesSiteidImagesImageidBadRequest handles this case with default header values.

Bad Request
*/
type GetSitesSiteidImagesImageidBadRequest struct {
	Payload *models.Error
}

func (o *GetSitesSiteidImagesImageidBadRequest) Error() string {
	return fmt.Sprintf("[GET /sites/{siteId}/images/{imageId}][%d] getSitesSiteidImagesImageidBadRequest  %+v", 400, o.Payload)
}

func (o *GetSitesSiteidImagesImageidBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSiteidImagesImageidBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSiteidImagesImageidUnauthorized creates a GetSitesSiteidImagesImageidUnauthorized with default headers values
func NewGetSitesSiteidImagesImageidUnauthorized() *GetSitesSiteidImagesImageidUnauthorized {
	return &GetSitesSiteidImagesImageidUnauthorized{}
}

/*GetSitesSiteidImagesImageidUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSitesSiteidImagesImageidUnauthorized struct {
	Payload *models.Error
}

func (o *GetSitesSiteidImagesImageidUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sites/{siteId}/images/{imageId}][%d] getSitesSiteidImagesImageidUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSitesSiteidImagesImageidUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSiteidImagesImageidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSiteidImagesImageidForbidden creates a GetSitesSiteidImagesImageidForbidden with default headers values
func NewGetSitesSiteidImagesImageidForbidden() *GetSitesSiteidImagesImageidForbidden {
	return &GetSitesSiteidImagesImageidForbidden{}
}

/*GetSitesSiteidImagesImageidForbidden handles this case with default header values.

Forbidden
*/
type GetSitesSiteidImagesImageidForbidden struct {
	Payload *models.Error
}

func (o *GetSitesSiteidImagesImageidForbidden) Error() string {
	return fmt.Sprintf("[GET /sites/{siteId}/images/{imageId}][%d] getSitesSiteidImagesImageidForbidden  %+v", 403, o.Payload)
}

func (o *GetSitesSiteidImagesImageidForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSiteidImagesImageidForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSitesSiteidImagesImageidInternalServerError creates a GetSitesSiteidImagesImageidInternalServerError with default headers values
func NewGetSitesSiteidImagesImageidInternalServerError() *GetSitesSiteidImagesImageidInternalServerError {
	return &GetSitesSiteidImagesImageidInternalServerError{}
}

/*GetSitesSiteidImagesImageidInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSitesSiteidImagesImageidInternalServerError struct {
	Payload *models.Error
}

func (o *GetSitesSiteidImagesImageidInternalServerError) Error() string {
	return fmt.Sprintf("[GET /sites/{siteId}/images/{imageId}][%d] getSitesSiteidImagesImageidInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSitesSiteidImagesImageidInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSitesSiteidImagesImageidInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
