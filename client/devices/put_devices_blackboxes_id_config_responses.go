// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesBlackboxesIDConfigReader is a Reader for the PutDevicesBlackboxesIDConfig structure.
type PutDevicesBlackboxesIDConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesBlackboxesIDConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesBlackboxesIDConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesBlackboxesIDConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesBlackboxesIDConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesBlackboxesIDConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesBlackboxesIDConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutDevicesBlackboxesIDConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesBlackboxesIDConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesBlackboxesIDConfigOK creates a PutDevicesBlackboxesIDConfigOK with default headers values
func NewPutDevicesBlackboxesIDConfigOK() *PutDevicesBlackboxesIDConfigOK {
	return &PutDevicesBlackboxesIDConfigOK{}
}

/*PutDevicesBlackboxesIDConfigOK handles this case with default header values.

Successful
*/
type PutDevicesBlackboxesIDConfigOK struct {
	Payload *models.DeviceBlackBoxConfig
}

func (o *PutDevicesBlackboxesIDConfigOK) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigOK  %+v", 200, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigOK) GetPayload() *models.DeviceBlackBoxConfig {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceBlackBoxConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigBadRequest creates a PutDevicesBlackboxesIDConfigBadRequest with default headers values
func NewPutDevicesBlackboxesIDConfigBadRequest() *PutDevicesBlackboxesIDConfigBadRequest {
	return &PutDevicesBlackboxesIDConfigBadRequest{}
}

/*PutDevicesBlackboxesIDConfigBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesBlackboxesIDConfigBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigUnauthorized creates a PutDevicesBlackboxesIDConfigUnauthorized with default headers values
func NewPutDevicesBlackboxesIDConfigUnauthorized() *PutDevicesBlackboxesIDConfigUnauthorized {
	return &PutDevicesBlackboxesIDConfigUnauthorized{}
}

/*PutDevicesBlackboxesIDConfigUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesBlackboxesIDConfigUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigForbidden creates a PutDevicesBlackboxesIDConfigForbidden with default headers values
func NewPutDevicesBlackboxesIDConfigForbidden() *PutDevicesBlackboxesIDConfigForbidden {
	return &PutDevicesBlackboxesIDConfigForbidden{}
}

/*PutDevicesBlackboxesIDConfigForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesBlackboxesIDConfigForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigNotFound creates a PutDevicesBlackboxesIDConfigNotFound with default headers values
func NewPutDevicesBlackboxesIDConfigNotFound() *PutDevicesBlackboxesIDConfigNotFound {
	return &PutDevicesBlackboxesIDConfigNotFound{}
}

/*PutDevicesBlackboxesIDConfigNotFound handles this case with default header values.

Not Found
*/
type PutDevicesBlackboxesIDConfigNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigConflict creates a PutDevicesBlackboxesIDConfigConflict with default headers values
func NewPutDevicesBlackboxesIDConfigConflict() *PutDevicesBlackboxesIDConfigConflict {
	return &PutDevicesBlackboxesIDConfigConflict{}
}

/*PutDevicesBlackboxesIDConfigConflict handles this case with default header values.

Conflict
*/
type PutDevicesBlackboxesIDConfigConflict struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigConflict) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigConflict  %+v", 409, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesBlackboxesIDConfigInternalServerError creates a PutDevicesBlackboxesIDConfigInternalServerError with default headers values
func NewPutDevicesBlackboxesIDConfigInternalServerError() *PutDevicesBlackboxesIDConfigInternalServerError {
	return &PutDevicesBlackboxesIDConfigInternalServerError{}
}

/*PutDevicesBlackboxesIDConfigInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesBlackboxesIDConfigInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesBlackboxesIDConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/blackboxes/{id}/config][%d] putDevicesBlackboxesIdConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesBlackboxesIDConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesBlackboxesIDConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
