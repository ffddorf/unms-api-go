// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesIDUpdateReader is a Reader for the PostDevicesIDUpdate structure.
type PostDevicesIDUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesIDUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesIDUpdateOK creates a PostDevicesIDUpdateOK with default headers values
func NewPostDevicesIDUpdateOK() *PostDevicesIDUpdateOK {
	return &PostDevicesIDUpdateOK{}
}

/*PostDevicesIDUpdateOK handles this case with default header values.

Successful
*/
type PostDevicesIDUpdateOK struct {
	Payload *models.Status
}

func (o *PostDevicesIDUpdateOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateOK  %+v", 200, o.Payload)
}

func (o *PostDevicesIDUpdateOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesIDUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDUpdateBadRequest creates a PostDevicesIDUpdateBadRequest with default headers values
func NewPostDevicesIDUpdateBadRequest() *PostDevicesIDUpdateBadRequest {
	return &PostDevicesIDUpdateBadRequest{}
}

/*PostDevicesIDUpdateBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesIDUpdateBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesIDUpdateBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDUpdateUnauthorized creates a PostDevicesIDUpdateUnauthorized with default headers values
func NewPostDevicesIDUpdateUnauthorized() *PostDevicesIDUpdateUnauthorized {
	return &PostDevicesIDUpdateUnauthorized{}
}

/*PostDevicesIDUpdateUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesIDUpdateUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesIDUpdateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDUpdateForbidden creates a PostDevicesIDUpdateForbidden with default headers values
func NewPostDevicesIDUpdateForbidden() *PostDevicesIDUpdateForbidden {
	return &PostDevicesIDUpdateForbidden{}
}

/*PostDevicesIDUpdateForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesIDUpdateForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesIDUpdateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDUpdateNotFound creates a PostDevicesIDUpdateNotFound with default headers values
func NewPostDevicesIDUpdateNotFound() *PostDevicesIDUpdateNotFound {
	return &PostDevicesIDUpdateNotFound{}
}

/*PostDevicesIDUpdateNotFound handles this case with default header values.

Not Found
*/
type PostDevicesIDUpdateNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesIDUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesIDUpdateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDUpdateInternalServerError creates a PostDevicesIDUpdateInternalServerError with default headers values
func NewPostDevicesIDUpdateInternalServerError() *PostDevicesIDUpdateInternalServerError {
	return &PostDevicesIDUpdateInternalServerError{}
}

/*PostDevicesIDUpdateInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesIDUpdateInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/update][%d] postDevicesIdUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesIDUpdateInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
