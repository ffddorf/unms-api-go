// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesIDAuthorizeReader is a Reader for the PostDevicesIDAuthorize structure.
type PostDevicesIDAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDAuthorizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDAuthorizeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDAuthorizeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDAuthorizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesIDAuthorizeOK creates a PostDevicesIDAuthorizeOK with default headers values
func NewPostDevicesIDAuthorizeOK() *PostDevicesIDAuthorizeOK {
	return &PostDevicesIDAuthorizeOK{}
}

/*PostDevicesIDAuthorizeOK handles this case with default header values.

Successful
*/
type PostDevicesIDAuthorizeOK struct {
	Payload *models.Status
}

func (o *PostDevicesIDAuthorizeOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/authorize][%d] postDevicesIdAuthorizeOK  %+v", 200, o.Payload)
}

func (o *PostDevicesIDAuthorizeOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesIDAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDAuthorizeBadRequest creates a PostDevicesIDAuthorizeBadRequest with default headers values
func NewPostDevicesIDAuthorizeBadRequest() *PostDevicesIDAuthorizeBadRequest {
	return &PostDevicesIDAuthorizeBadRequest{}
}

/*PostDevicesIDAuthorizeBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesIDAuthorizeBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDAuthorizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/authorize][%d] postDevicesIdAuthorizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesIDAuthorizeBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDAuthorizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDAuthorizeUnauthorized creates a PostDevicesIDAuthorizeUnauthorized with default headers values
func NewPostDevicesIDAuthorizeUnauthorized() *PostDevicesIDAuthorizeUnauthorized {
	return &PostDevicesIDAuthorizeUnauthorized{}
}

/*PostDevicesIDAuthorizeUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesIDAuthorizeUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDAuthorizeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/authorize][%d] postDevicesIdAuthorizeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesIDAuthorizeUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDAuthorizeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDAuthorizeForbidden creates a PostDevicesIDAuthorizeForbidden with default headers values
func NewPostDevicesIDAuthorizeForbidden() *PostDevicesIDAuthorizeForbidden {
	return &PostDevicesIDAuthorizeForbidden{}
}

/*PostDevicesIDAuthorizeForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesIDAuthorizeForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDAuthorizeForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/authorize][%d] postDevicesIdAuthorizeForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesIDAuthorizeForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDAuthorizeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDAuthorizeInternalServerError creates a PostDevicesIDAuthorizeInternalServerError with default headers values
func NewPostDevicesIDAuthorizeInternalServerError() *PostDevicesIDAuthorizeInternalServerError {
	return &PostDevicesIDAuthorizeInternalServerError{}
}

/*PostDevicesIDAuthorizeInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesIDAuthorizeInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDAuthorizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/authorize][%d] postDevicesIdAuthorizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesIDAuthorizeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDAuthorizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
