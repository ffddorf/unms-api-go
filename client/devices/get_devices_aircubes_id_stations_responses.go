// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesAircubesIDStationsReader is a Reader for the GetDevicesAircubesIDStations structure.
type GetDevicesAircubesIDStationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesAircubesIDStationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesAircubesIDStationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesAircubesIDStationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesAircubesIDStationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesAircubesIDStationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesAircubesIDStationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesAircubesIDStationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesAircubesIDStationsOK creates a GetDevicesAircubesIDStationsOK with default headers values
func NewGetDevicesAircubesIDStationsOK() *GetDevicesAircubesIDStationsOK {
	return &GetDevicesAircubesIDStationsOK{}
}

/*GetDevicesAircubesIDStationsOK handles this case with default header values.

Successful
*/
type GetDevicesAircubesIDStationsOK struct {
	Payload models.Model18
}

func (o *GetDevicesAircubesIDStationsOK) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsOK  %+v", 200, o.Payload)
}

func (o *GetDevicesAircubesIDStationsOK) GetPayload() models.Model18 {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDStationsBadRequest creates a GetDevicesAircubesIDStationsBadRequest with default headers values
func NewGetDevicesAircubesIDStationsBadRequest() *GetDevicesAircubesIDStationsBadRequest {
	return &GetDevicesAircubesIDStationsBadRequest{}
}

/*GetDevicesAircubesIDStationsBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesAircubesIDStationsBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDStationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesAircubesIDStationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDStationsUnauthorized creates a GetDevicesAircubesIDStationsUnauthorized with default headers values
func NewGetDevicesAircubesIDStationsUnauthorized() *GetDevicesAircubesIDStationsUnauthorized {
	return &GetDevicesAircubesIDStationsUnauthorized{}
}

/*GetDevicesAircubesIDStationsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesAircubesIDStationsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDStationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesAircubesIDStationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDStationsForbidden creates a GetDevicesAircubesIDStationsForbidden with default headers values
func NewGetDevicesAircubesIDStationsForbidden() *GetDevicesAircubesIDStationsForbidden {
	return &GetDevicesAircubesIDStationsForbidden{}
}

/*GetDevicesAircubesIDStationsForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesAircubesIDStationsForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDStationsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesAircubesIDStationsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDStationsNotFound creates a GetDevicesAircubesIDStationsNotFound with default headers values
func NewGetDevicesAircubesIDStationsNotFound() *GetDevicesAircubesIDStationsNotFound {
	return &GetDevicesAircubesIDStationsNotFound{}
}

/*GetDevicesAircubesIDStationsNotFound handles this case with default header values.

Not Found
*/
type GetDevicesAircubesIDStationsNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDStationsNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesAircubesIDStationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDStationsInternalServerError creates a GetDevicesAircubesIDStationsInternalServerError with default headers values
func NewGetDevicesAircubesIDStationsInternalServerError() *GetDevicesAircubesIDStationsInternalServerError {
	return &GetDevicesAircubesIDStationsInternalServerError{}
}

/*GetDevicesAircubesIDStationsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesAircubesIDStationsInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDStationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/stations][%d] getDevicesAircubesIdStationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesAircubesIDStationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDStationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
