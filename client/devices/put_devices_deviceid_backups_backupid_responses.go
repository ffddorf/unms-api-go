// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesDeviceidBackupsBackupidReader is a Reader for the PutDevicesDeviceidBackupsBackupid structure.
type PutDevicesDeviceidBackupsBackupidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesDeviceidBackupsBackupidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewPutDevicesDeviceidBackupsBackupidBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesDeviceidBackupsBackupidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesDeviceidBackupsBackupidForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesDeviceidBackupsBackupidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesDeviceidBackupsBackupidInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesDeviceidBackupsBackupidBadRequest creates a PutDevicesDeviceidBackupsBackupidBadRequest with default headers values
func NewPutDevicesDeviceidBackupsBackupidBadRequest() *PutDevicesDeviceidBackupsBackupidBadRequest {
	return &PutDevicesDeviceidBackupsBackupidBadRequest{}
}

/*PutDevicesDeviceidBackupsBackupidBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesDeviceidBackupsBackupidBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidBackupsBackupidBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/backups/{backupId}][%d] putDevicesDeviceidBackupsBackupidBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesDeviceidBackupsBackupidBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidBackupsBackupidBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidBackupsBackupidUnauthorized creates a PutDevicesDeviceidBackupsBackupidUnauthorized with default headers values
func NewPutDevicesDeviceidBackupsBackupidUnauthorized() *PutDevicesDeviceidBackupsBackupidUnauthorized {
	return &PutDevicesDeviceidBackupsBackupidUnauthorized{}
}

/*PutDevicesDeviceidBackupsBackupidUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesDeviceidBackupsBackupidUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidBackupsBackupidUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/backups/{backupId}][%d] putDevicesDeviceidBackupsBackupidUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesDeviceidBackupsBackupidUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidBackupsBackupidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidBackupsBackupidForbidden creates a PutDevicesDeviceidBackupsBackupidForbidden with default headers values
func NewPutDevicesDeviceidBackupsBackupidForbidden() *PutDevicesDeviceidBackupsBackupidForbidden {
	return &PutDevicesDeviceidBackupsBackupidForbidden{}
}

/*PutDevicesDeviceidBackupsBackupidForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesDeviceidBackupsBackupidForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidBackupsBackupidForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/backups/{backupId}][%d] putDevicesDeviceidBackupsBackupidForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesDeviceidBackupsBackupidForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidBackupsBackupidForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidBackupsBackupidNotFound creates a PutDevicesDeviceidBackupsBackupidNotFound with default headers values
func NewPutDevicesDeviceidBackupsBackupidNotFound() *PutDevicesDeviceidBackupsBackupidNotFound {
	return &PutDevicesDeviceidBackupsBackupidNotFound{}
}

/*PutDevicesDeviceidBackupsBackupidNotFound handles this case with default header values.

Not Found
*/
type PutDevicesDeviceidBackupsBackupidNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidBackupsBackupidNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/backups/{backupId}][%d] putDevicesDeviceidBackupsBackupidNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesDeviceidBackupsBackupidNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidBackupsBackupidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidBackupsBackupidInternalServerError creates a PutDevicesDeviceidBackupsBackupidInternalServerError with default headers values
func NewPutDevicesDeviceidBackupsBackupidInternalServerError() *PutDevicesDeviceidBackupsBackupidInternalServerError {
	return &PutDevicesDeviceidBackupsBackupidInternalServerError{}
}

/*PutDevicesDeviceidBackupsBackupidInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesDeviceidBackupsBackupidInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidBackupsBackupidInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/backups/{backupId}][%d] putDevicesDeviceidBackupsBackupidInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesDeviceidBackupsBackupidInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidBackupsBackupidInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
