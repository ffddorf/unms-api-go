// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesToughswitchesIDSystemReader is a Reader for the GetDevicesToughswitchesIDSystem structure.
type GetDevicesToughswitchesIDSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesToughswitchesIDSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesToughswitchesIDSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesToughswitchesIDSystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesToughswitchesIDSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesToughswitchesIDSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesToughswitchesIDSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesToughswitchesIDSystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesToughswitchesIDSystemOK creates a GetDevicesToughswitchesIDSystemOK with default headers values
func NewGetDevicesToughswitchesIDSystemOK() *GetDevicesToughswitchesIDSystemOK {
	return &GetDevicesToughswitchesIDSystemOK{}
}

/*GetDevicesToughswitchesIDSystemOK handles this case with default header values.

Successful
*/
type GetDevicesToughswitchesIDSystemOK struct {
	Payload *models.Model23
}

func (o *GetDevicesToughswitchesIDSystemOK) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemOK  %+v", 200, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemOK) GetPayload() *models.Model23 {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Model23)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesToughswitchesIDSystemBadRequest creates a GetDevicesToughswitchesIDSystemBadRequest with default headers values
func NewGetDevicesToughswitchesIDSystemBadRequest() *GetDevicesToughswitchesIDSystemBadRequest {
	return &GetDevicesToughswitchesIDSystemBadRequest{}
}

/*GetDevicesToughswitchesIDSystemBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesToughswitchesIDSystemBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesToughswitchesIDSystemBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesToughswitchesIDSystemUnauthorized creates a GetDevicesToughswitchesIDSystemUnauthorized with default headers values
func NewGetDevicesToughswitchesIDSystemUnauthorized() *GetDevicesToughswitchesIDSystemUnauthorized {
	return &GetDevicesToughswitchesIDSystemUnauthorized{}
}

/*GetDevicesToughswitchesIDSystemUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesToughswitchesIDSystemUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesToughswitchesIDSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesToughswitchesIDSystemForbidden creates a GetDevicesToughswitchesIDSystemForbidden with default headers values
func NewGetDevicesToughswitchesIDSystemForbidden() *GetDevicesToughswitchesIDSystemForbidden {
	return &GetDevicesToughswitchesIDSystemForbidden{}
}

/*GetDevicesToughswitchesIDSystemForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesToughswitchesIDSystemForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesToughswitchesIDSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesToughswitchesIDSystemNotFound creates a GetDevicesToughswitchesIDSystemNotFound with default headers values
func NewGetDevicesToughswitchesIDSystemNotFound() *GetDevicesToughswitchesIDSystemNotFound {
	return &GetDevicesToughswitchesIDSystemNotFound{}
}

/*GetDevicesToughswitchesIDSystemNotFound handles this case with default header values.

Not Found
*/
type GetDevicesToughswitchesIDSystemNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesToughswitchesIDSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesToughswitchesIDSystemInternalServerError creates a GetDevicesToughswitchesIDSystemInternalServerError with default headers values
func NewGetDevicesToughswitchesIDSystemInternalServerError() *GetDevicesToughswitchesIDSystemInternalServerError {
	return &GetDevicesToughswitchesIDSystemInternalServerError{}
}

/*GetDevicesToughswitchesIDSystemInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesToughswitchesIDSystemInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesToughswitchesIDSystemInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/toughswitches/{id}/system][%d] getDevicesToughswitchesIdSystemInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesToughswitchesIDSystemInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesToughswitchesIDSystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
