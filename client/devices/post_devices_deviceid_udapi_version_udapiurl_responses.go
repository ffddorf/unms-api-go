// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesDeviceidUdapiVersionUdapiurlReader is a Reader for the PostDevicesDeviceidUdapiVersionUdapiurl structure.
type PostDevicesDeviceidUdapiVersionUdapiurlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidUdapiVersionUdapiurlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPostDevicesDeviceidUdapiVersionUdapiurlNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlOK creates a PostDevicesDeviceidUdapiVersionUdapiurlOK with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlOK() *PostDevicesDeviceidUdapiVersionUdapiurlOK {
	return &PostDevicesDeviceidUdapiVersionUdapiurlOK{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlOK handles this case with default header values.

Return by version and device udapi response.
*/
type PostDevicesDeviceidUdapiVersionUdapiurlOK struct {
	Payload string
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlOK  %+v", 200, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlOK) GetPayload() string {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlBadRequest creates a PostDevicesDeviceidUdapiVersionUdapiurlBadRequest with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlBadRequest() *PostDevicesDeviceidUdapiVersionUdapiurlBadRequest {
	return &PostDevicesDeviceidUdapiVersionUdapiurlBadRequest{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesDeviceidUdapiVersionUdapiurlBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlUnauthorized creates a PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlUnauthorized() *PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized {
	return &PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlForbidden creates a PostDevicesDeviceidUdapiVersionUdapiurlForbidden with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlForbidden() *PostDevicesDeviceidUdapiVersionUdapiurlForbidden {
	return &PostDevicesDeviceidUdapiVersionUdapiurlForbidden{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesDeviceidUdapiVersionUdapiurlForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlNotFound creates a PostDevicesDeviceidUdapiVersionUdapiurlNotFound with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlNotFound() *PostDevicesDeviceidUdapiVersionUdapiurlNotFound {
	return &PostDevicesDeviceidUdapiVersionUdapiurlNotFound{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlNotFound handles this case with default header values.

Not Found
*/
type PostDevicesDeviceidUdapiVersionUdapiurlNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlInternalServerError creates a PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlInternalServerError() *PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError {
	return &PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidUdapiVersionUdapiurlNotImplemented creates a PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented with default headers values
func NewPostDevicesDeviceidUdapiVersionUdapiurlNotImplemented() *PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented {
	return &PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented{}
}

/*PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented handles this case with default header values.

Not Implemented
*/
type PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] postDevicesDeviceidUdapiVersionUdapiurlNotImplemented  %+v", 501, o.Payload)
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidUdapiVersionUdapiurlNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
