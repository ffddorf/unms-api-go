// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesDeviceidInterfacesInterfacenameOspfReader is a Reader for the PutDevicesDeviceidInterfacesInterfacenameOspf structure.
type PutDevicesDeviceidInterfacesInterfacenameOspfReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesDeviceidInterfacesInterfacenameOspfReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfOK creates a PutDevicesDeviceidInterfacesInterfacenameOspfOK with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfOK() *PutDevicesDeviceidInterfacesInterfacenameOspfOK {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfOK{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfOK handles this case with default header values.

Successful
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfOK struct {
	Payload *models.Status
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfOK  %+v", 200, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfBadRequest creates a PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfBadRequest() *PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized creates a PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized() *PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfForbidden creates a PutDevicesDeviceidInterfacesInterfacenameOspfForbidden with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfForbidden() *PutDevicesDeviceidInterfacesInterfacenameOspfForbidden {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfForbidden{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfNotFound creates a PutDevicesDeviceidInterfacesInterfacenameOspfNotFound with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfNotFound() *PutDevicesDeviceidInterfacesInterfacenameOspfNotFound {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfNotFound{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfNotFound handles this case with default header values.

Not Found
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError creates a PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError with default headers values
func NewPutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError() *PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError {
	return &PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError{}
}

/*PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/interfaces/{interfaceName}/ospf][%d] putDevicesDeviceidInterfacesInterfacenameOspfInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidInterfacesInterfacenameOspfInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
