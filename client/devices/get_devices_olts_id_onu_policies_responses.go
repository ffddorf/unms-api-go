// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesOltsIDOnuPoliciesReader is a Reader for the GetDevicesOltsIDOnuPolicies structure.
type GetDevicesOltsIDOnuPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesOltsIDOnuPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesOltsIDOnuPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesOltsIDOnuPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesOltsIDOnuPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesOltsIDOnuPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesOltsIDOnuPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesOltsIDOnuPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesOltsIDOnuPoliciesOK creates a GetDevicesOltsIDOnuPoliciesOK with default headers values
func NewGetDevicesOltsIDOnuPoliciesOK() *GetDevicesOltsIDOnuPoliciesOK {
	return &GetDevicesOltsIDOnuPoliciesOK{}
}

/*GetDevicesOltsIDOnuPoliciesOK handles this case with default header values.

Successful
*/
type GetDevicesOltsIDOnuPoliciesOK struct {
	Payload *models.OnuPolicies
}

func (o *GetDevicesOltsIDOnuPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesOK) GetPayload() *models.OnuPolicies {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OnuPolicies)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOltsIDOnuPoliciesBadRequest creates a GetDevicesOltsIDOnuPoliciesBadRequest with default headers values
func NewGetDevicesOltsIDOnuPoliciesBadRequest() *GetDevicesOltsIDOnuPoliciesBadRequest {
	return &GetDevicesOltsIDOnuPoliciesBadRequest{}
}

/*GetDevicesOltsIDOnuPoliciesBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesOltsIDOnuPoliciesBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesOltsIDOnuPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOltsIDOnuPoliciesUnauthorized creates a GetDevicesOltsIDOnuPoliciesUnauthorized with default headers values
func NewGetDevicesOltsIDOnuPoliciesUnauthorized() *GetDevicesOltsIDOnuPoliciesUnauthorized {
	return &GetDevicesOltsIDOnuPoliciesUnauthorized{}
}

/*GetDevicesOltsIDOnuPoliciesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesOltsIDOnuPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesOltsIDOnuPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOltsIDOnuPoliciesForbidden creates a GetDevicesOltsIDOnuPoliciesForbidden with default headers values
func NewGetDevicesOltsIDOnuPoliciesForbidden() *GetDevicesOltsIDOnuPoliciesForbidden {
	return &GetDevicesOltsIDOnuPoliciesForbidden{}
}

/*GetDevicesOltsIDOnuPoliciesForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesOltsIDOnuPoliciesForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesOltsIDOnuPoliciesForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOltsIDOnuPoliciesNotFound creates a GetDevicesOltsIDOnuPoliciesNotFound with default headers values
func NewGetDevicesOltsIDOnuPoliciesNotFound() *GetDevicesOltsIDOnuPoliciesNotFound {
	return &GetDevicesOltsIDOnuPoliciesNotFound{}
}

/*GetDevicesOltsIDOnuPoliciesNotFound handles this case with default header values.

Not Found
*/
type GetDevicesOltsIDOnuPoliciesNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesOltsIDOnuPoliciesNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOltsIDOnuPoliciesInternalServerError creates a GetDevicesOltsIDOnuPoliciesInternalServerError with default headers values
func NewGetDevicesOltsIDOnuPoliciesInternalServerError() *GetDevicesOltsIDOnuPoliciesInternalServerError {
	return &GetDevicesOltsIDOnuPoliciesInternalServerError{}
}

/*GetDevicesOltsIDOnuPoliciesInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesOltsIDOnuPoliciesInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesOltsIDOnuPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/olts/{id}/onu/policies][%d] getDevicesOltsIdOnuPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesOltsIDOnuPoliciesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOltsIDOnuPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
