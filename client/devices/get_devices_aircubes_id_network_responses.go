// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesAircubesIDNetworkReader is a Reader for the GetDevicesAircubesIDNetwork structure.
type GetDevicesAircubesIDNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesAircubesIDNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesAircubesIDNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesAircubesIDNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesAircubesIDNetworkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesAircubesIDNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesAircubesIDNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesAircubesIDNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesAircubesIDNetworkOK creates a GetDevicesAircubesIDNetworkOK with default headers values
func NewGetDevicesAircubesIDNetworkOK() *GetDevicesAircubesIDNetworkOK {
	return &GetDevicesAircubesIDNetworkOK{}
}

/*GetDevicesAircubesIDNetworkOK handles this case with default header values.

Successful
*/
type GetDevicesAircubesIDNetworkOK struct {
	Payload *models.AirCubeNetworkConfig
}

func (o *GetDevicesAircubesIDNetworkOK) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkOK  %+v", 200, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkOK) GetPayload() *models.AirCubeNetworkConfig {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AirCubeNetworkConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDNetworkBadRequest creates a GetDevicesAircubesIDNetworkBadRequest with default headers values
func NewGetDevicesAircubesIDNetworkBadRequest() *GetDevicesAircubesIDNetworkBadRequest {
	return &GetDevicesAircubesIDNetworkBadRequest{}
}

/*GetDevicesAircubesIDNetworkBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesAircubesIDNetworkBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDNetworkBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDNetworkUnauthorized creates a GetDevicesAircubesIDNetworkUnauthorized with default headers values
func NewGetDevicesAircubesIDNetworkUnauthorized() *GetDevicesAircubesIDNetworkUnauthorized {
	return &GetDevicesAircubesIDNetworkUnauthorized{}
}

/*GetDevicesAircubesIDNetworkUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesAircubesIDNetworkUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDNetworkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDNetworkForbidden creates a GetDevicesAircubesIDNetworkForbidden with default headers values
func NewGetDevicesAircubesIDNetworkForbidden() *GetDevicesAircubesIDNetworkForbidden {
	return &GetDevicesAircubesIDNetworkForbidden{}
}

/*GetDevicesAircubesIDNetworkForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesAircubesIDNetworkForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDNetworkNotFound creates a GetDevicesAircubesIDNetworkNotFound with default headers values
func NewGetDevicesAircubesIDNetworkNotFound() *GetDevicesAircubesIDNetworkNotFound {
	return &GetDevicesAircubesIDNetworkNotFound{}
}

/*GetDevicesAircubesIDNetworkNotFound handles this case with default header values.

Not Found
*/
type GetDevicesAircubesIDNetworkNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAircubesIDNetworkInternalServerError creates a GetDevicesAircubesIDNetworkInternalServerError with default headers values
func NewGetDevicesAircubesIDNetworkInternalServerError() *GetDevicesAircubesIDNetworkInternalServerError {
	return &GetDevicesAircubesIDNetworkInternalServerError{}
}

/*GetDevicesAircubesIDNetworkInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesAircubesIDNetworkInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesAircubesIDNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/aircubes/{id}/network][%d] getDevicesAircubesIdNetworkInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesAircubesIDNetworkInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAircubesIDNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
