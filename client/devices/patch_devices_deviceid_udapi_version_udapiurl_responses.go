// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PatchDevicesDeviceidUdapiVersionUdapiurlReader is a Reader for the PatchDevicesDeviceidUdapiVersionUdapiurl structure.
type PatchDevicesDeviceidUdapiVersionUdapiurlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchDevicesDeviceidUdapiVersionUdapiurlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlOK creates a PatchDevicesDeviceidUdapiVersionUdapiurlOK with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlOK() *PatchDevicesDeviceidUdapiVersionUdapiurlOK {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlOK{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlOK handles this case with default header values.

Return by version and device udapi response.
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlOK struct {
	Payload string
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlOK) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlOK  %+v", 200, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlOK) GetPayload() string {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlBadRequest creates a PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlBadRequest() *PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest handles this case with default header values.

Bad Request
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlBadRequest  %+v", 400, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized creates a PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized() *PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlForbidden creates a PatchDevicesDeviceidUdapiVersionUdapiurlForbidden with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlForbidden() *PatchDevicesDeviceidUdapiVersionUdapiurlForbidden {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlForbidden{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlForbidden handles this case with default header values.

Forbidden
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlForbidden struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlForbidden) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlForbidden  %+v", 403, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlNotFound creates a PatchDevicesDeviceidUdapiVersionUdapiurlNotFound with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlNotFound() *PatchDevicesDeviceidUdapiVersionUdapiurlNotFound {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlNotFound{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlNotFound handles this case with default header values.

Not Found
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlNotFound struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotFound) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlNotFound  %+v", 404, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError creates a PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError() *PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError handles this case with default header values.

Internal Server Error
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented creates a PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented with default headers values
func NewPatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented() *PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented {
	return &PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented{}
}

/*PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented handles this case with default header values.

Not Implemented
*/
type PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented struct {
	Payload *models.Error
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented) Error() string {
	return fmt.Sprintf("[PATCH /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] patchDevicesDeviceidUdapiVersionUdapiurlNotImplemented  %+v", 501, o.Payload)
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchDevicesDeviceidUdapiVersionUdapiurlNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
