// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesModelsReader is a Reader for the GetDevicesModels structure.
type GetDevicesModelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesModelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesModelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDevicesModelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesModelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesModelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesModelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesModelsOK creates a GetDevicesModelsOK with default headers values
func NewGetDevicesModelsOK() *GetDevicesModelsOK {
	return &GetDevicesModelsOK{}
}

/*GetDevicesModelsOK handles this case with default header values.

Successful
*/
type GetDevicesModelsOK struct {
	Payload models.Model9
}

func (o *GetDevicesModelsOK) Error() string {
	return fmt.Sprintf("[GET /devices/models][%d] getDevicesModelsOK  %+v", 200, o.Payload)
}

func (o *GetDevicesModelsOK) GetPayload() models.Model9 {
	return o.Payload
}

func (o *GetDevicesModelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesModelsUnauthorized creates a GetDevicesModelsUnauthorized with default headers values
func NewGetDevicesModelsUnauthorized() *GetDevicesModelsUnauthorized {
	return &GetDevicesModelsUnauthorized{}
}

/*GetDevicesModelsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesModelsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesModelsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/models][%d] getDevicesModelsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesModelsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesModelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesModelsForbidden creates a GetDevicesModelsForbidden with default headers values
func NewGetDevicesModelsForbidden() *GetDevicesModelsForbidden {
	return &GetDevicesModelsForbidden{}
}

/*GetDevicesModelsForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesModelsForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesModelsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/models][%d] getDevicesModelsForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesModelsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesModelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesModelsNotFound creates a GetDevicesModelsNotFound with default headers values
func NewGetDevicesModelsNotFound() *GetDevicesModelsNotFound {
	return &GetDevicesModelsNotFound{}
}

/*GetDevicesModelsNotFound handles this case with default header values.

Not Found
*/
type GetDevicesModelsNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesModelsNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/models][%d] getDevicesModelsNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesModelsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesModelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesModelsInternalServerError creates a GetDevicesModelsInternalServerError with default headers values
func NewGetDevicesModelsInternalServerError() *GetDevicesModelsInternalServerError {
	return &GetDevicesModelsInternalServerError{}
}

/*GetDevicesModelsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesModelsInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesModelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/models][%d] getDevicesModelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesModelsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesModelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
