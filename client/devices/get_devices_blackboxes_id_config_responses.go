// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesBlackboxesIDConfigReader is a Reader for the GetDevicesBlackboxesIDConfig structure.
type GetDevicesBlackboxesIDConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesBlackboxesIDConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesBlackboxesIDConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesBlackboxesIDConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesBlackboxesIDConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesBlackboxesIDConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesBlackboxesIDConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesBlackboxesIDConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesBlackboxesIDConfigOK creates a GetDevicesBlackboxesIDConfigOK with default headers values
func NewGetDevicesBlackboxesIDConfigOK() *GetDevicesBlackboxesIDConfigOK {
	return &GetDevicesBlackboxesIDConfigOK{}
}

/*GetDevicesBlackboxesIDConfigOK handles this case with default header values.

Successful
*/
type GetDevicesBlackboxesIDConfigOK struct {
	Payload *models.DeviceBlackBoxConfig
}

func (o *GetDevicesBlackboxesIDConfigOK) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigOK  %+v", 200, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigOK) GetPayload() *models.DeviceBlackBoxConfig {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceBlackBoxConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesBlackboxesIDConfigBadRequest creates a GetDevicesBlackboxesIDConfigBadRequest with default headers values
func NewGetDevicesBlackboxesIDConfigBadRequest() *GetDevicesBlackboxesIDConfigBadRequest {
	return &GetDevicesBlackboxesIDConfigBadRequest{}
}

/*GetDevicesBlackboxesIDConfigBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesBlackboxesIDConfigBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesBlackboxesIDConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesBlackboxesIDConfigUnauthorized creates a GetDevicesBlackboxesIDConfigUnauthorized with default headers values
func NewGetDevicesBlackboxesIDConfigUnauthorized() *GetDevicesBlackboxesIDConfigUnauthorized {
	return &GetDevicesBlackboxesIDConfigUnauthorized{}
}

/*GetDevicesBlackboxesIDConfigUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesBlackboxesIDConfigUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesBlackboxesIDConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesBlackboxesIDConfigForbidden creates a GetDevicesBlackboxesIDConfigForbidden with default headers values
func NewGetDevicesBlackboxesIDConfigForbidden() *GetDevicesBlackboxesIDConfigForbidden {
	return &GetDevicesBlackboxesIDConfigForbidden{}
}

/*GetDevicesBlackboxesIDConfigForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesBlackboxesIDConfigForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesBlackboxesIDConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesBlackboxesIDConfigNotFound creates a GetDevicesBlackboxesIDConfigNotFound with default headers values
func NewGetDevicesBlackboxesIDConfigNotFound() *GetDevicesBlackboxesIDConfigNotFound {
	return &GetDevicesBlackboxesIDConfigNotFound{}
}

/*GetDevicesBlackboxesIDConfigNotFound handles this case with default header values.

Not Found
*/
type GetDevicesBlackboxesIDConfigNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesBlackboxesIDConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesBlackboxesIDConfigInternalServerError creates a GetDevicesBlackboxesIDConfigInternalServerError with default headers values
func NewGetDevicesBlackboxesIDConfigInternalServerError() *GetDevicesBlackboxesIDConfigInternalServerError {
	return &GetDevicesBlackboxesIDConfigInternalServerError{}
}

/*GetDevicesBlackboxesIDConfigInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesBlackboxesIDConfigInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesBlackboxesIDConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/blackboxes/{id}/config][%d] getDevicesBlackboxesIdConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesBlackboxesIDConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesBlackboxesIDConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
