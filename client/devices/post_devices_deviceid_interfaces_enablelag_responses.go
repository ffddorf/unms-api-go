// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesDeviceidInterfacesEnablelagReader is a Reader for the PostDevicesDeviceidInterfacesEnablelag structure.
type PostDevicesDeviceidInterfacesEnablelagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidInterfacesEnablelagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidInterfacesEnablelagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidInterfacesEnablelagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidInterfacesEnablelagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidInterfacesEnablelagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidInterfacesEnablelagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidInterfacesEnablelagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPostDevicesDeviceidInterfacesEnablelagNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesDeviceidInterfacesEnablelagOK creates a PostDevicesDeviceidInterfacesEnablelagOK with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagOK() *PostDevicesDeviceidInterfacesEnablelagOK {
	return &PostDevicesDeviceidInterfacesEnablelagOK{}
}

/*PostDevicesDeviceidInterfacesEnablelagOK handles this case with default header values.

Successful
*/
type PostDevicesDeviceidInterfacesEnablelagOK struct {
	Payload *models.Status
}

func (o *PostDevicesDeviceidInterfacesEnablelagOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagOK  %+v", 200, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagBadRequest creates a PostDevicesDeviceidInterfacesEnablelagBadRequest with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagBadRequest() *PostDevicesDeviceidInterfacesEnablelagBadRequest {
	return &PostDevicesDeviceidInterfacesEnablelagBadRequest{}
}

/*PostDevicesDeviceidInterfacesEnablelagBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesDeviceidInterfacesEnablelagBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagUnauthorized creates a PostDevicesDeviceidInterfacesEnablelagUnauthorized with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagUnauthorized() *PostDevicesDeviceidInterfacesEnablelagUnauthorized {
	return &PostDevicesDeviceidInterfacesEnablelagUnauthorized{}
}

/*PostDevicesDeviceidInterfacesEnablelagUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesDeviceidInterfacesEnablelagUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagForbidden creates a PostDevicesDeviceidInterfacesEnablelagForbidden with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagForbidden() *PostDevicesDeviceidInterfacesEnablelagForbidden {
	return &PostDevicesDeviceidInterfacesEnablelagForbidden{}
}

/*PostDevicesDeviceidInterfacesEnablelagForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesDeviceidInterfacesEnablelagForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagNotFound creates a PostDevicesDeviceidInterfacesEnablelagNotFound with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagNotFound() *PostDevicesDeviceidInterfacesEnablelagNotFound {
	return &PostDevicesDeviceidInterfacesEnablelagNotFound{}
}

/*PostDevicesDeviceidInterfacesEnablelagNotFound handles this case with default header values.

Not Found
*/
type PostDevicesDeviceidInterfacesEnablelagNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagInternalServerError creates a PostDevicesDeviceidInterfacesEnablelagInternalServerError with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagInternalServerError() *PostDevicesDeviceidInterfacesEnablelagInternalServerError {
	return &PostDevicesDeviceidInterfacesEnablelagInternalServerError{}
}

/*PostDevicesDeviceidInterfacesEnablelagInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesDeviceidInterfacesEnablelagInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesEnablelagNotImplemented creates a PostDevicesDeviceidInterfacesEnablelagNotImplemented with default headers values
func NewPostDevicesDeviceidInterfacesEnablelagNotImplemented() *PostDevicesDeviceidInterfacesEnablelagNotImplemented {
	return &PostDevicesDeviceidInterfacesEnablelagNotImplemented{}
}

/*PostDevicesDeviceidInterfacesEnablelagNotImplemented handles this case with default header values.

Not Implemented
*/
type PostDevicesDeviceidInterfacesEnablelagNotImplemented struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotImplemented) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/enablelag][%d] postDevicesDeviceidInterfacesEnablelagNotImplemented  %+v", 501, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesEnablelagNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
