// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesIDServicesReader is a Reader for the GetDevicesIDServices structure.
type GetDevicesIDServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesIDServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesIDServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesIDServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesIDServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesIDServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesIDServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesIDServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesIDServicesOK creates a GetDevicesIDServicesOK with default headers values
func NewGetDevicesIDServicesOK() *GetDevicesIDServicesOK {
	return &GetDevicesIDServicesOK{}
}

/*GetDevicesIDServicesOK handles this case with default header values.

Successful
*/
type GetDevicesIDServicesOK struct {
	Payload *models.DeviceService
}

func (o *GetDevicesIDServicesOK) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesOK  %+v", 200, o.Payload)
}

func (o *GetDevicesIDServicesOK) GetPayload() *models.DeviceService {
	return o.Payload
}

func (o *GetDevicesIDServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDServicesBadRequest creates a GetDevicesIDServicesBadRequest with default headers values
func NewGetDevicesIDServicesBadRequest() *GetDevicesIDServicesBadRequest {
	return &GetDevicesIDServicesBadRequest{}
}

/*GetDevicesIDServicesBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesIDServicesBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesIDServicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesIDServicesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDServicesUnauthorized creates a GetDevicesIDServicesUnauthorized with default headers values
func NewGetDevicesIDServicesUnauthorized() *GetDevicesIDServicesUnauthorized {
	return &GetDevicesIDServicesUnauthorized{}
}

/*GetDevicesIDServicesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesIDServicesUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesIDServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesIDServicesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDServicesForbidden creates a GetDevicesIDServicesForbidden with default headers values
func NewGetDevicesIDServicesForbidden() *GetDevicesIDServicesForbidden {
	return &GetDevicesIDServicesForbidden{}
}

/*GetDevicesIDServicesForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesIDServicesForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesIDServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesIDServicesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDServicesNotFound creates a GetDevicesIDServicesNotFound with default headers values
func NewGetDevicesIDServicesNotFound() *GetDevicesIDServicesNotFound {
	return &GetDevicesIDServicesNotFound{}
}

/*GetDevicesIDServicesNotFound handles this case with default header values.

Not Found
*/
type GetDevicesIDServicesNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesIDServicesNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesIDServicesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDServicesInternalServerError creates a GetDevicesIDServicesInternalServerError with default headers values
func NewGetDevicesIDServicesInternalServerError() *GetDevicesIDServicesInternalServerError {
	return &GetDevicesIDServicesInternalServerError{}
}

/*GetDevicesIDServicesInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesIDServicesInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesIDServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/services][%d] getDevicesIdServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesIDServicesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
