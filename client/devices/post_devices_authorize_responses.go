// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesAuthorizeReader is a Reader for the PostDevicesAuthorize structure.
type PostDevicesAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesAuthorizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesAuthorizeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesAuthorizeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesAuthorizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesAuthorizeOK creates a PostDevicesAuthorizeOK with default headers values
func NewPostDevicesAuthorizeOK() *PostDevicesAuthorizeOK {
	return &PostDevicesAuthorizeOK{}
}

/*PostDevicesAuthorizeOK handles this case with default header values.

Successful
*/
type PostDevicesAuthorizeOK struct {
	Payload *models.Status
}

func (o *PostDevicesAuthorizeOK) Error() string {
	return fmt.Sprintf("[POST /devices/authorize][%d] postDevicesAuthorizeOK  %+v", 200, o.Payload)
}

func (o *PostDevicesAuthorizeOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesAuthorizeBadRequest creates a PostDevicesAuthorizeBadRequest with default headers values
func NewPostDevicesAuthorizeBadRequest() *PostDevicesAuthorizeBadRequest {
	return &PostDevicesAuthorizeBadRequest{}
}

/*PostDevicesAuthorizeBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesAuthorizeBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesAuthorizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/authorize][%d] postDevicesAuthorizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesAuthorizeBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesAuthorizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesAuthorizeUnauthorized creates a PostDevicesAuthorizeUnauthorized with default headers values
func NewPostDevicesAuthorizeUnauthorized() *PostDevicesAuthorizeUnauthorized {
	return &PostDevicesAuthorizeUnauthorized{}
}

/*PostDevicesAuthorizeUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesAuthorizeUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesAuthorizeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/authorize][%d] postDevicesAuthorizeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesAuthorizeUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesAuthorizeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesAuthorizeForbidden creates a PostDevicesAuthorizeForbidden with default headers values
func NewPostDevicesAuthorizeForbidden() *PostDevicesAuthorizeForbidden {
	return &PostDevicesAuthorizeForbidden{}
}

/*PostDevicesAuthorizeForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesAuthorizeForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesAuthorizeForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/authorize][%d] postDevicesAuthorizeForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesAuthorizeForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesAuthorizeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesAuthorizeInternalServerError creates a PostDevicesAuthorizeInternalServerError with default headers values
func NewPostDevicesAuthorizeInternalServerError() *PostDevicesAuthorizeInternalServerError {
	return &PostDevicesAuthorizeInternalServerError{}
}

/*PostDevicesAuthorizeInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesAuthorizeInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesAuthorizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/authorize][%d] postDevicesAuthorizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesAuthorizeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesAuthorizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
