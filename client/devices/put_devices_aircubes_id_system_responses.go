// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesAircubesIDSystemReader is a Reader for the PutDevicesAircubesIDSystem structure.
type PutDevicesAircubesIDSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesAircubesIDSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesAircubesIDSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesAircubesIDSystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesAircubesIDSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesAircubesIDSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesAircubesIDSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesAircubesIDSystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesAircubesIDSystemOK creates a PutDevicesAircubesIDSystemOK with default headers values
func NewPutDevicesAircubesIDSystemOK() *PutDevicesAircubesIDSystemOK {
	return &PutDevicesAircubesIDSystemOK{}
}

/*PutDevicesAircubesIDSystemOK handles this case with default header values.

Successful
*/
type PutDevicesAircubesIDSystemOK struct {
	Payload *models.Status
}

func (o *PutDevicesAircubesIDSystemOK) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemOK  %+v", 200, o.Payload)
}

func (o *PutDevicesAircubesIDSystemOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDSystemBadRequest creates a PutDevicesAircubesIDSystemBadRequest with default headers values
func NewPutDevicesAircubesIDSystemBadRequest() *PutDevicesAircubesIDSystemBadRequest {
	return &PutDevicesAircubesIDSystemBadRequest{}
}

/*PutDevicesAircubesIDSystemBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesAircubesIDSystemBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDSystemBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesAircubesIDSystemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDSystemUnauthorized creates a PutDevicesAircubesIDSystemUnauthorized with default headers values
func NewPutDevicesAircubesIDSystemUnauthorized() *PutDevicesAircubesIDSystemUnauthorized {
	return &PutDevicesAircubesIDSystemUnauthorized{}
}

/*PutDevicesAircubesIDSystemUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesAircubesIDSystemUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDSystemUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesAircubesIDSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDSystemForbidden creates a PutDevicesAircubesIDSystemForbidden with default headers values
func NewPutDevicesAircubesIDSystemForbidden() *PutDevicesAircubesIDSystemForbidden {
	return &PutDevicesAircubesIDSystemForbidden{}
}

/*PutDevicesAircubesIDSystemForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesAircubesIDSystemForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDSystemForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesAircubesIDSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDSystemNotFound creates a PutDevicesAircubesIDSystemNotFound with default headers values
func NewPutDevicesAircubesIDSystemNotFound() *PutDevicesAircubesIDSystemNotFound {
	return &PutDevicesAircubesIDSystemNotFound{}
}

/*PutDevicesAircubesIDSystemNotFound handles this case with default header values.

Not Found
*/
type PutDevicesAircubesIDSystemNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDSystemNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesAircubesIDSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDSystemInternalServerError creates a PutDevicesAircubesIDSystemInternalServerError with default headers values
func NewPutDevicesAircubesIDSystemInternalServerError() *PutDevicesAircubesIDSystemInternalServerError {
	return &PutDevicesAircubesIDSystemInternalServerError{}
}

/*PutDevicesAircubesIDSystemInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesAircubesIDSystemInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDSystemInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/system][%d] putDevicesAircubesIdSystemInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesAircubesIDSystemInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDSystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
