// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesConnectOtherReader is a Reader for the PostDevicesConnectOther structure.
type PostDevicesConnectOtherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesConnectOtherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesConnectOtherOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesConnectOtherBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesConnectOtherUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesConnectOtherNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesConnectOtherInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesConnectOtherOK creates a PostDevicesConnectOtherOK with default headers values
func NewPostDevicesConnectOtherOK() *PostDevicesConnectOtherOK {
	return &PostDevicesConnectOtherOK{}
}

/*PostDevicesConnectOtherOK handles this case with default header values.

Successful
*/
type PostDevicesConnectOtherOK struct {
	Payload *models.DeviceSchema
}

func (o *PostDevicesConnectOtherOK) Error() string {
	return fmt.Sprintf("[POST /devices/connect/other][%d] postDevicesConnectOtherOK  %+v", 200, o.Payload)
}

func (o *PostDevicesConnectOtherOK) GetPayload() *models.DeviceSchema {
	return o.Payload
}

func (o *PostDevicesConnectOtherOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesConnectOtherBadRequest creates a PostDevicesConnectOtherBadRequest with default headers values
func NewPostDevicesConnectOtherBadRequest() *PostDevicesConnectOtherBadRequest {
	return &PostDevicesConnectOtherBadRequest{}
}

/*PostDevicesConnectOtherBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesConnectOtherBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesConnectOtherBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/connect/other][%d] postDevicesConnectOtherBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesConnectOtherBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesConnectOtherBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesConnectOtherUnauthorized creates a PostDevicesConnectOtherUnauthorized with default headers values
func NewPostDevicesConnectOtherUnauthorized() *PostDevicesConnectOtherUnauthorized {
	return &PostDevicesConnectOtherUnauthorized{}
}

/*PostDevicesConnectOtherUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesConnectOtherUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesConnectOtherUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/connect/other][%d] postDevicesConnectOtherUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesConnectOtherUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesConnectOtherUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesConnectOtherNotFound creates a PostDevicesConnectOtherNotFound with default headers values
func NewPostDevicesConnectOtherNotFound() *PostDevicesConnectOtherNotFound {
	return &PostDevicesConnectOtherNotFound{}
}

/*PostDevicesConnectOtherNotFound handles this case with default header values.

Not Found
*/
type PostDevicesConnectOtherNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesConnectOtherNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/connect/other][%d] postDevicesConnectOtherNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesConnectOtherNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesConnectOtherNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesConnectOtherInternalServerError creates a PostDevicesConnectOtherInternalServerError with default headers values
func NewPostDevicesConnectOtherInternalServerError() *PostDevicesConnectOtherInternalServerError {
	return &PostDevicesConnectOtherInternalServerError{}
}

/*PostDevicesConnectOtherInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesConnectOtherInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesConnectOtherInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/connect/other][%d] postDevicesConnectOtherInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesConnectOtherInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesConnectOtherInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
