// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesEroutersIDDhcpServersServernameBlockReader is a Reader for the PostDevicesEroutersIDDhcpServersServernameBlock structure.
type PostDevicesEroutersIDDhcpServersServernameBlockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesEroutersIDDhcpServersServernameBlockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesEroutersIDDhcpServersServernameBlockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockOK creates a PostDevicesEroutersIDDhcpServersServernameBlockOK with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockOK() *PostDevicesEroutersIDDhcpServersServernameBlockOK {
	return &PostDevicesEroutersIDDhcpServersServernameBlockOK{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockOK handles this case with default header values.

Successful
*/
type PostDevicesEroutersIDDhcpServersServernameBlockOK struct {
	Payload *models.Status
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockOK) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockOK  %+v", 200, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockBadRequest creates a PostDevicesEroutersIDDhcpServersServernameBlockBadRequest with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockBadRequest() *PostDevicesEroutersIDDhcpServersServernameBlockBadRequest {
	return &PostDevicesEroutersIDDhcpServersServernameBlockBadRequest{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesEroutersIDDhcpServersServernameBlockBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockUnauthorized creates a PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockUnauthorized() *PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized {
	return &PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockForbidden creates a PostDevicesEroutersIDDhcpServersServernameBlockForbidden with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockForbidden() *PostDevicesEroutersIDDhcpServersServernameBlockForbidden {
	return &PostDevicesEroutersIDDhcpServersServernameBlockForbidden{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesEroutersIDDhcpServersServernameBlockForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockNotFound creates a PostDevicesEroutersIDDhcpServersServernameBlockNotFound with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockNotFound() *PostDevicesEroutersIDDhcpServersServernameBlockNotFound {
	return &PostDevicesEroutersIDDhcpServersServernameBlockNotFound{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockNotFound handles this case with default header values.

Not Found
*/
type PostDevicesEroutersIDDhcpServersServernameBlockNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameBlockInternalServerError creates a PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameBlockInternalServerError() *PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError {
	return &PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError{}
}

/*PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/block][%d] postDevicesEroutersIdDhcpServersServernameBlockInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameBlockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
