// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesEswitchesIDReader is a Reader for the GetDevicesEswitchesID structure.
type GetDevicesEswitchesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesEswitchesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesEswitchesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesEswitchesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesEswitchesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesEswitchesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesEswitchesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesEswitchesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesEswitchesIDOK creates a GetDevicesEswitchesIDOK with default headers values
func NewGetDevicesEswitchesIDOK() *GetDevicesEswitchesIDOK {
	return &GetDevicesEswitchesIDOK{}
}

/*GetDevicesEswitchesIDOK handles this case with default header values.

Successful
*/
type GetDevicesEswitchesIDOK struct {
	Payload *models.DeviceStatusOverview
}

func (o *GetDevicesEswitchesIDOK) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdOK  %+v", 200, o.Payload)
}

func (o *GetDevicesEswitchesIDOK) GetPayload() *models.DeviceStatusOverview {
	return o.Payload
}

func (o *GetDevicesEswitchesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceStatusOverview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEswitchesIDBadRequest creates a GetDevicesEswitchesIDBadRequest with default headers values
func NewGetDevicesEswitchesIDBadRequest() *GetDevicesEswitchesIDBadRequest {
	return &GetDevicesEswitchesIDBadRequest{}
}

/*GetDevicesEswitchesIDBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesEswitchesIDBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesEswitchesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesEswitchesIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEswitchesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEswitchesIDUnauthorized creates a GetDevicesEswitchesIDUnauthorized with default headers values
func NewGetDevicesEswitchesIDUnauthorized() *GetDevicesEswitchesIDUnauthorized {
	return &GetDevicesEswitchesIDUnauthorized{}
}

/*GetDevicesEswitchesIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesEswitchesIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesEswitchesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesEswitchesIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEswitchesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEswitchesIDForbidden creates a GetDevicesEswitchesIDForbidden with default headers values
func NewGetDevicesEswitchesIDForbidden() *GetDevicesEswitchesIDForbidden {
	return &GetDevicesEswitchesIDForbidden{}
}

/*GetDevicesEswitchesIDForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesEswitchesIDForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesEswitchesIDForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesEswitchesIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEswitchesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEswitchesIDNotFound creates a GetDevicesEswitchesIDNotFound with default headers values
func NewGetDevicesEswitchesIDNotFound() *GetDevicesEswitchesIDNotFound {
	return &GetDevicesEswitchesIDNotFound{}
}

/*GetDevicesEswitchesIDNotFound handles this case with default header values.

Not Found
*/
type GetDevicesEswitchesIDNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesEswitchesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesEswitchesIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEswitchesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEswitchesIDInternalServerError creates a GetDevicesEswitchesIDInternalServerError with default headers values
func NewGetDevicesEswitchesIDInternalServerError() *GetDevicesEswitchesIDInternalServerError {
	return &GetDevicesEswitchesIDInternalServerError{}
}

/*GetDevicesEswitchesIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesEswitchesIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesEswitchesIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/eswitches/{id}][%d] getDevicesEswitchesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesEswitchesIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEswitchesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
