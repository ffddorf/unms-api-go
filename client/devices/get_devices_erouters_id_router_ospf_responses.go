// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesEroutersIDRouterOspfReader is a Reader for the GetDevicesEroutersIDRouterOspf structure.
type GetDevicesEroutersIDRouterOspfReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesEroutersIDRouterOspfReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesEroutersIDRouterOspfOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesEroutersIDRouterOspfBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesEroutersIDRouterOspfUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesEroutersIDRouterOspfForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesEroutersIDRouterOspfNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesEroutersIDRouterOspfInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesEroutersIDRouterOspfOK creates a GetDevicesEroutersIDRouterOspfOK with default headers values
func NewGetDevicesEroutersIDRouterOspfOK() *GetDevicesEroutersIDRouterOspfOK {
	return &GetDevicesEroutersIDRouterOspfOK{}
}

/*GetDevicesEroutersIDRouterOspfOK handles this case with default header values.

Successful
*/
type GetDevicesEroutersIDRouterOspfOK struct {
	Payload *models.EdgeRouterOspf
}

func (o *GetDevicesEroutersIDRouterOspfOK) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfOK  %+v", 200, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfOK) GetPayload() *models.EdgeRouterOspf {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EdgeRouterOspf)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDRouterOspfBadRequest creates a GetDevicesEroutersIDRouterOspfBadRequest with default headers values
func NewGetDevicesEroutersIDRouterOspfBadRequest() *GetDevicesEroutersIDRouterOspfBadRequest {
	return &GetDevicesEroutersIDRouterOspfBadRequest{}
}

/*GetDevicesEroutersIDRouterOspfBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesEroutersIDRouterOspfBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDRouterOspfBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDRouterOspfUnauthorized creates a GetDevicesEroutersIDRouterOspfUnauthorized with default headers values
func NewGetDevicesEroutersIDRouterOspfUnauthorized() *GetDevicesEroutersIDRouterOspfUnauthorized {
	return &GetDevicesEroutersIDRouterOspfUnauthorized{}
}

/*GetDevicesEroutersIDRouterOspfUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesEroutersIDRouterOspfUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDRouterOspfUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDRouterOspfForbidden creates a GetDevicesEroutersIDRouterOspfForbidden with default headers values
func NewGetDevicesEroutersIDRouterOspfForbidden() *GetDevicesEroutersIDRouterOspfForbidden {
	return &GetDevicesEroutersIDRouterOspfForbidden{}
}

/*GetDevicesEroutersIDRouterOspfForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesEroutersIDRouterOspfForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDRouterOspfForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDRouterOspfNotFound creates a GetDevicesEroutersIDRouterOspfNotFound with default headers values
func NewGetDevicesEroutersIDRouterOspfNotFound() *GetDevicesEroutersIDRouterOspfNotFound {
	return &GetDevicesEroutersIDRouterOspfNotFound{}
}

/*GetDevicesEroutersIDRouterOspfNotFound handles this case with default header values.

Not Found
*/
type GetDevicesEroutersIDRouterOspfNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDRouterOspfNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDRouterOspfInternalServerError creates a GetDevicesEroutersIDRouterOspfInternalServerError with default headers values
func NewGetDevicesEroutersIDRouterOspfInternalServerError() *GetDevicesEroutersIDRouterOspfInternalServerError {
	return &GetDevicesEroutersIDRouterOspfInternalServerError{}
}

/*GetDevicesEroutersIDRouterOspfInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesEroutersIDRouterOspfInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDRouterOspfInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/router/ospf][%d] getDevicesEroutersIdRouterOspfInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesEroutersIDRouterOspfInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDRouterOspfInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
