// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesEroutersIDDhcpServersReader is a Reader for the GetDevicesEroutersIDDhcpServers structure.
type GetDevicesEroutersIDDhcpServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesEroutersIDDhcpServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesEroutersIDDhcpServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesEroutersIDDhcpServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesEroutersIDDhcpServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesEroutersIDDhcpServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesEroutersIDDhcpServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesEroutersIDDhcpServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesEroutersIDDhcpServersOK creates a GetDevicesEroutersIDDhcpServersOK with default headers values
func NewGetDevicesEroutersIDDhcpServersOK() *GetDevicesEroutersIDDhcpServersOK {
	return &GetDevicesEroutersIDDhcpServersOK{}
}

/*GetDevicesEroutersIDDhcpServersOK handles this case with default header values.

Successful
*/
type GetDevicesEroutersIDDhcpServersOK struct {
	Payload models.DHCPServerList
}

func (o *GetDevicesEroutersIDDhcpServersOK) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersOK  %+v", 200, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersOK) GetPayload() models.DHCPServerList {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDDhcpServersBadRequest creates a GetDevicesEroutersIDDhcpServersBadRequest with default headers values
func NewGetDevicesEroutersIDDhcpServersBadRequest() *GetDevicesEroutersIDDhcpServersBadRequest {
	return &GetDevicesEroutersIDDhcpServersBadRequest{}
}

/*GetDevicesEroutersIDDhcpServersBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesEroutersIDDhcpServersBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDDhcpServersBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDDhcpServersUnauthorized creates a GetDevicesEroutersIDDhcpServersUnauthorized with default headers values
func NewGetDevicesEroutersIDDhcpServersUnauthorized() *GetDevicesEroutersIDDhcpServersUnauthorized {
	return &GetDevicesEroutersIDDhcpServersUnauthorized{}
}

/*GetDevicesEroutersIDDhcpServersUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesEroutersIDDhcpServersUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDDhcpServersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDDhcpServersForbidden creates a GetDevicesEroutersIDDhcpServersForbidden with default headers values
func NewGetDevicesEroutersIDDhcpServersForbidden() *GetDevicesEroutersIDDhcpServersForbidden {
	return &GetDevicesEroutersIDDhcpServersForbidden{}
}

/*GetDevicesEroutersIDDhcpServersForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesEroutersIDDhcpServersForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDDhcpServersForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDDhcpServersNotFound creates a GetDevicesEroutersIDDhcpServersNotFound with default headers values
func NewGetDevicesEroutersIDDhcpServersNotFound() *GetDevicesEroutersIDDhcpServersNotFound {
	return &GetDevicesEroutersIDDhcpServersNotFound{}
}

/*GetDevicesEroutersIDDhcpServersNotFound handles this case with default header values.

Not Found
*/
type GetDevicesEroutersIDDhcpServersNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDDhcpServersNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesEroutersIDDhcpServersInternalServerError creates a GetDevicesEroutersIDDhcpServersInternalServerError with default headers values
func NewGetDevicesEroutersIDDhcpServersInternalServerError() *GetDevicesEroutersIDDhcpServersInternalServerError {
	return &GetDevicesEroutersIDDhcpServersInternalServerError{}
}

/*GetDevicesEroutersIDDhcpServersInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesEroutersIDDhcpServersInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesEroutersIDDhcpServersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/erouters/{id}/dhcp/servers][%d] getDevicesEroutersIdDhcpServersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesEroutersIDDhcpServersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesEroutersIDDhcpServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
