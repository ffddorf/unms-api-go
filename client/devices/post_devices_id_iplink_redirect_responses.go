// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesIDIplinkRedirectReader is a Reader for the PostDevicesIDIplinkRedirect structure.
type PostDevicesIDIplinkRedirectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDIplinkRedirectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDIplinkRedirectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDIplinkRedirectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDIplinkRedirectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDIplinkRedirectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDIplinkRedirectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesIDIplinkRedirectOK creates a PostDevicesIDIplinkRedirectOK with default headers values
func NewPostDevicesIDIplinkRedirectOK() *PostDevicesIDIplinkRedirectOK {
	return &PostDevicesIDIplinkRedirectOK{}
}

/*PostDevicesIDIplinkRedirectOK handles this case with default header values.

Successful
*/
type PostDevicesIDIplinkRedirectOK struct {
	Payload *models.IPLinkRedirect
}

func (o *PostDevicesIDIplinkRedirectOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/iplink/redirect][%d] postDevicesIdIplinkRedirectOK  %+v", 200, o.Payload)
}

func (o *PostDevicesIDIplinkRedirectOK) GetPayload() *models.IPLinkRedirect {
	return o.Payload
}

func (o *PostDevicesIDIplinkRedirectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPLinkRedirect)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDIplinkRedirectBadRequest creates a PostDevicesIDIplinkRedirectBadRequest with default headers values
func NewPostDevicesIDIplinkRedirectBadRequest() *PostDevicesIDIplinkRedirectBadRequest {
	return &PostDevicesIDIplinkRedirectBadRequest{}
}

/*PostDevicesIDIplinkRedirectBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesIDIplinkRedirectBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDIplinkRedirectBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/iplink/redirect][%d] postDevicesIdIplinkRedirectBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesIDIplinkRedirectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDIplinkRedirectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDIplinkRedirectUnauthorized creates a PostDevicesIDIplinkRedirectUnauthorized with default headers values
func NewPostDevicesIDIplinkRedirectUnauthorized() *PostDevicesIDIplinkRedirectUnauthorized {
	return &PostDevicesIDIplinkRedirectUnauthorized{}
}

/*PostDevicesIDIplinkRedirectUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesIDIplinkRedirectUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDIplinkRedirectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/iplink/redirect][%d] postDevicesIdIplinkRedirectUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesIDIplinkRedirectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDIplinkRedirectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDIplinkRedirectForbidden creates a PostDevicesIDIplinkRedirectForbidden with default headers values
func NewPostDevicesIDIplinkRedirectForbidden() *PostDevicesIDIplinkRedirectForbidden {
	return &PostDevicesIDIplinkRedirectForbidden{}
}

/*PostDevicesIDIplinkRedirectForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesIDIplinkRedirectForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDIplinkRedirectForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/iplink/redirect][%d] postDevicesIdIplinkRedirectForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesIDIplinkRedirectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDIplinkRedirectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDIplinkRedirectInternalServerError creates a PostDevicesIDIplinkRedirectInternalServerError with default headers values
func NewPostDevicesIDIplinkRedirectInternalServerError() *PostDevicesIDIplinkRedirectInternalServerError {
	return &PostDevicesIDIplinkRedirectInternalServerError{}
}

/*PostDevicesIDIplinkRedirectInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesIDIplinkRedirectInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDIplinkRedirectInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/iplink/redirect][%d] postDevicesIdIplinkRedirectInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesIDIplinkRedirectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDIplinkRedirectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
