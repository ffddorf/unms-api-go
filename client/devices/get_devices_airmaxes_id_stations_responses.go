// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesAirmaxesIDStationsReader is a Reader for the GetDevicesAirmaxesIDStations structure.
type GetDevicesAirmaxesIDStationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesAirmaxesIDStationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesAirmaxesIDStationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesAirmaxesIDStationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesAirmaxesIDStationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesAirmaxesIDStationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesAirmaxesIDStationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesAirmaxesIDStationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesAirmaxesIDStationsOK creates a GetDevicesAirmaxesIDStationsOK with default headers values
func NewGetDevicesAirmaxesIDStationsOK() *GetDevicesAirmaxesIDStationsOK {
	return &GetDevicesAirmaxesIDStationsOK{}
}

/*GetDevicesAirmaxesIDStationsOK handles this case with default header values.

Successful
*/
type GetDevicesAirmaxesIDStationsOK struct {
	Payload models.ListOfAirmaxStations
}

func (o *GetDevicesAirmaxesIDStationsOK) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsOK  %+v", 200, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsOK) GetPayload() models.ListOfAirmaxStations {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAirmaxesIDStationsBadRequest creates a GetDevicesAirmaxesIDStationsBadRequest with default headers values
func NewGetDevicesAirmaxesIDStationsBadRequest() *GetDevicesAirmaxesIDStationsBadRequest {
	return &GetDevicesAirmaxesIDStationsBadRequest{}
}

/*GetDevicesAirmaxesIDStationsBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesAirmaxesIDStationsBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesAirmaxesIDStationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAirmaxesIDStationsUnauthorized creates a GetDevicesAirmaxesIDStationsUnauthorized with default headers values
func NewGetDevicesAirmaxesIDStationsUnauthorized() *GetDevicesAirmaxesIDStationsUnauthorized {
	return &GetDevicesAirmaxesIDStationsUnauthorized{}
}

/*GetDevicesAirmaxesIDStationsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesAirmaxesIDStationsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesAirmaxesIDStationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAirmaxesIDStationsForbidden creates a GetDevicesAirmaxesIDStationsForbidden with default headers values
func NewGetDevicesAirmaxesIDStationsForbidden() *GetDevicesAirmaxesIDStationsForbidden {
	return &GetDevicesAirmaxesIDStationsForbidden{}
}

/*GetDevicesAirmaxesIDStationsForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesAirmaxesIDStationsForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesAirmaxesIDStationsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAirmaxesIDStationsNotFound creates a GetDevicesAirmaxesIDStationsNotFound with default headers values
func NewGetDevicesAirmaxesIDStationsNotFound() *GetDevicesAirmaxesIDStationsNotFound {
	return &GetDevicesAirmaxesIDStationsNotFound{}
}

/*GetDevicesAirmaxesIDStationsNotFound handles this case with default header values.

Not Found
*/
type GetDevicesAirmaxesIDStationsNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesAirmaxesIDStationsNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesAirmaxesIDStationsInternalServerError creates a GetDevicesAirmaxesIDStationsInternalServerError with default headers values
func NewGetDevicesAirmaxesIDStationsInternalServerError() *GetDevicesAirmaxesIDStationsInternalServerError {
	return &GetDevicesAirmaxesIDStationsInternalServerError{}
}

/*GetDevicesAirmaxesIDStationsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesAirmaxesIDStationsInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesAirmaxesIDStationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/airmaxes/{id}/stations][%d] getDevicesAirmaxesIdStationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesAirmaxesIDStationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesAirmaxesIDStationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
