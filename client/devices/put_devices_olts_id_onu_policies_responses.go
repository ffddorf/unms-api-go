// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesOltsIDOnuPoliciesReader is a Reader for the PutDevicesOltsIDOnuPolicies structure.
type PutDevicesOltsIDOnuPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesOltsIDOnuPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesOltsIDOnuPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesOltsIDOnuPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesOltsIDOnuPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesOltsIDOnuPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesOltsIDOnuPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesOltsIDOnuPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesOltsIDOnuPoliciesOK creates a PutDevicesOltsIDOnuPoliciesOK with default headers values
func NewPutDevicesOltsIDOnuPoliciesOK() *PutDevicesOltsIDOnuPoliciesOK {
	return &PutDevicesOltsIDOnuPoliciesOK{}
}

/*PutDevicesOltsIDOnuPoliciesOK handles this case with default header values.

Successful
*/
type PutDevicesOltsIDOnuPoliciesOK struct {
	Payload *models.OnuPolicies
}

func (o *PutDevicesOltsIDOnuPoliciesOK) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesOK  %+v", 200, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesOK) GetPayload() *models.OnuPolicies {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OnuPolicies)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesOltsIDOnuPoliciesBadRequest creates a PutDevicesOltsIDOnuPoliciesBadRequest with default headers values
func NewPutDevicesOltsIDOnuPoliciesBadRequest() *PutDevicesOltsIDOnuPoliciesBadRequest {
	return &PutDevicesOltsIDOnuPoliciesBadRequest{}
}

/*PutDevicesOltsIDOnuPoliciesBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesOltsIDOnuPoliciesBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesOltsIDOnuPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesOltsIDOnuPoliciesUnauthorized creates a PutDevicesOltsIDOnuPoliciesUnauthorized with default headers values
func NewPutDevicesOltsIDOnuPoliciesUnauthorized() *PutDevicesOltsIDOnuPoliciesUnauthorized {
	return &PutDevicesOltsIDOnuPoliciesUnauthorized{}
}

/*PutDevicesOltsIDOnuPoliciesUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesOltsIDOnuPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesOltsIDOnuPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesOltsIDOnuPoliciesForbidden creates a PutDevicesOltsIDOnuPoliciesForbidden with default headers values
func NewPutDevicesOltsIDOnuPoliciesForbidden() *PutDevicesOltsIDOnuPoliciesForbidden {
	return &PutDevicesOltsIDOnuPoliciesForbidden{}
}

/*PutDevicesOltsIDOnuPoliciesForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesOltsIDOnuPoliciesForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesOltsIDOnuPoliciesForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesOltsIDOnuPoliciesNotFound creates a PutDevicesOltsIDOnuPoliciesNotFound with default headers values
func NewPutDevicesOltsIDOnuPoliciesNotFound() *PutDevicesOltsIDOnuPoliciesNotFound {
	return &PutDevicesOltsIDOnuPoliciesNotFound{}
}

/*PutDevicesOltsIDOnuPoliciesNotFound handles this case with default header values.

Not Found
*/
type PutDevicesOltsIDOnuPoliciesNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesOltsIDOnuPoliciesNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesOltsIDOnuPoliciesInternalServerError creates a PutDevicesOltsIDOnuPoliciesInternalServerError with default headers values
func NewPutDevicesOltsIDOnuPoliciesInternalServerError() *PutDevicesOltsIDOnuPoliciesInternalServerError {
	return &PutDevicesOltsIDOnuPoliciesInternalServerError{}
}

/*PutDevicesOltsIDOnuPoliciesInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesOltsIDOnuPoliciesInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesOltsIDOnuPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/olts/{id}/onu/policies][%d] putDevicesOltsIdOnuPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesOltsIDOnuPoliciesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesOltsIDOnuPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
