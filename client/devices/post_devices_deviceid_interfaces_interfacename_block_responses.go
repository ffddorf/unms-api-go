// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesDeviceidInterfacesInterfacenameBlockReader is a Reader for the PostDevicesDeviceidInterfacesInterfacenameBlock structure.
type PostDevicesDeviceidInterfacesInterfacenameBlockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidInterfacesInterfacenameBlockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockOK creates a PostDevicesDeviceidInterfacesInterfacenameBlockOK with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockOK() *PostDevicesDeviceidInterfacesInterfacenameBlockOK {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockOK{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockOK handles this case with default header values.

Successful
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockOK struct {
	Payload *models.Status
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockOK  %+v", 200, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockBadRequest creates a PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockBadRequest() *PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized creates a PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized() *PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockForbidden creates a PostDevicesDeviceidInterfacesInterfacenameBlockForbidden with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockForbidden() *PostDevicesDeviceidInterfacesInterfacenameBlockForbidden {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockForbidden{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockNotFound creates a PostDevicesDeviceidInterfacesInterfacenameBlockNotFound with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockNotFound() *PostDevicesDeviceidInterfacesInterfacenameBlockNotFound {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockNotFound{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockNotFound handles this case with default header values.

Not Found
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError creates a PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError() *PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError {
	return &PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError{}
}

/*PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/block][%d] postDevicesDeviceidInterfacesInterfacenameBlockInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameBlockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
