// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesIDServicesReader is a Reader for the PutDevicesIDServices structure.
type PutDevicesIDServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesIDServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesIDServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesIDServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesIDServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesIDServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesIDServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesIDServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesIDServicesOK creates a PutDevicesIDServicesOK with default headers values
func NewPutDevicesIDServicesOK() *PutDevicesIDServicesOK {
	return &PutDevicesIDServicesOK{}
}

/*PutDevicesIDServicesOK handles this case with default header values.

Successful
*/
type PutDevicesIDServicesOK struct {
	Payload *models.DeviceService
}

func (o *PutDevicesIDServicesOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesOK  %+v", 200, o.Payload)
}

func (o *PutDevicesIDServicesOK) GetPayload() *models.DeviceService {
	return o.Payload
}

func (o *PutDevicesIDServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDServicesBadRequest creates a PutDevicesIDServicesBadRequest with default headers values
func NewPutDevicesIDServicesBadRequest() *PutDevicesIDServicesBadRequest {
	return &PutDevicesIDServicesBadRequest{}
}

/*PutDevicesIDServicesBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesIDServicesBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesIDServicesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesIDServicesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDServicesUnauthorized creates a PutDevicesIDServicesUnauthorized with default headers values
func NewPutDevicesIDServicesUnauthorized() *PutDevicesIDServicesUnauthorized {
	return &PutDevicesIDServicesUnauthorized{}
}

/*PutDevicesIDServicesUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesIDServicesUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesIDServicesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesIDServicesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDServicesForbidden creates a PutDevicesIDServicesForbidden with default headers values
func NewPutDevicesIDServicesForbidden() *PutDevicesIDServicesForbidden {
	return &PutDevicesIDServicesForbidden{}
}

/*PutDevicesIDServicesForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesIDServicesForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesIDServicesForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesIDServicesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDServicesNotFound creates a PutDevicesIDServicesNotFound with default headers values
func NewPutDevicesIDServicesNotFound() *PutDevicesIDServicesNotFound {
	return &PutDevicesIDServicesNotFound{}
}

/*PutDevicesIDServicesNotFound handles this case with default header values.

Not Found
*/
type PutDevicesIDServicesNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesIDServicesNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesIDServicesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDServicesInternalServerError creates a PutDevicesIDServicesInternalServerError with default headers values
func NewPutDevicesIDServicesInternalServerError() *PutDevicesIDServicesInternalServerError {
	return &PutDevicesIDServicesInternalServerError{}
}

/*PutDevicesIDServicesInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesIDServicesInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesIDServicesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/services][%d] putDevicesIdServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesIDServicesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
