// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesDeviceidInterfacesReader is a Reader for the GetDevicesDeviceidInterfaces structure.
type GetDevicesDeviceidInterfacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDeviceidInterfacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesDeviceidInterfacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesDeviceidInterfacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesDeviceidInterfacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesDeviceidInterfacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesDeviceidInterfacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesDeviceidInterfacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesDeviceidInterfacesOK creates a GetDevicesDeviceidInterfacesOK with default headers values
func NewGetDevicesDeviceidInterfacesOK() *GetDevicesDeviceidInterfacesOK {
	return &GetDevicesDeviceidInterfacesOK{}
}

/*GetDevicesDeviceidInterfacesOK handles this case with default header values.

Successful
*/
type GetDevicesDeviceidInterfacesOK struct {
	Payload models.DeviceInterfaceListSchema
}

func (o *GetDevicesDeviceidInterfacesOK) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesOK  %+v", 200, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesOK) GetPayload() models.DeviceInterfaceListSchema {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesBadRequest creates a GetDevicesDeviceidInterfacesBadRequest with default headers values
func NewGetDevicesDeviceidInterfacesBadRequest() *GetDevicesDeviceidInterfacesBadRequest {
	return &GetDevicesDeviceidInterfacesBadRequest{}
}

/*GetDevicesDeviceidInterfacesBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesDeviceidInterfacesBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesUnauthorized creates a GetDevicesDeviceidInterfacesUnauthorized with default headers values
func NewGetDevicesDeviceidInterfacesUnauthorized() *GetDevicesDeviceidInterfacesUnauthorized {
	return &GetDevicesDeviceidInterfacesUnauthorized{}
}

/*GetDevicesDeviceidInterfacesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesDeviceidInterfacesUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesForbidden creates a GetDevicesDeviceidInterfacesForbidden with default headers values
func NewGetDevicesDeviceidInterfacesForbidden() *GetDevicesDeviceidInterfacesForbidden {
	return &GetDevicesDeviceidInterfacesForbidden{}
}

/*GetDevicesDeviceidInterfacesForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesDeviceidInterfacesForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesNotFound creates a GetDevicesDeviceidInterfacesNotFound with default headers values
func NewGetDevicesDeviceidInterfacesNotFound() *GetDevicesDeviceidInterfacesNotFound {
	return &GetDevicesDeviceidInterfacesNotFound{}
}

/*GetDevicesDeviceidInterfacesNotFound handles this case with default header values.

Not Found
*/
type GetDevicesDeviceidInterfacesNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInternalServerError creates a GetDevicesDeviceidInterfacesInternalServerError with default headers values
func NewGetDevicesDeviceidInterfacesInternalServerError() *GetDevicesDeviceidInterfacesInternalServerError {
	return &GetDevicesDeviceidInterfacesInternalServerError{}
}

/*GetDevicesDeviceidInterfacesInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesDeviceidInterfacesInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces][%d] getDevicesDeviceidInterfacesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesDeviceidInterfacesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
