// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesOnusIDUpdateReader is a Reader for the PostDevicesOnusIDUpdate structure.
type PostDevicesOnusIDUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesOnusIDUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesOnusIDUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesOnusIDUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesOnusIDUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesOnusIDUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesOnusIDUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesOnusIDUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesOnusIDUpdateOK creates a PostDevicesOnusIDUpdateOK with default headers values
func NewPostDevicesOnusIDUpdateOK() *PostDevicesOnusIDUpdateOK {
	return &PostDevicesOnusIDUpdateOK{}
}

/*PostDevicesOnusIDUpdateOK handles this case with default header values.

Successful
*/
type PostDevicesOnusIDUpdateOK struct {
	Payload *models.Status
}

func (o *PostDevicesOnusIDUpdateOK) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateOK  %+v", 200, o.Payload)
}

func (o *PostDevicesOnusIDUpdateOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesOnusIDUpdateBadRequest creates a PostDevicesOnusIDUpdateBadRequest with default headers values
func NewPostDevicesOnusIDUpdateBadRequest() *PostDevicesOnusIDUpdateBadRequest {
	return &PostDevicesOnusIDUpdateBadRequest{}
}

/*PostDevicesOnusIDUpdateBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesOnusIDUpdateBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesOnusIDUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesOnusIDUpdateBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesOnusIDUpdateUnauthorized creates a PostDevicesOnusIDUpdateUnauthorized with default headers values
func NewPostDevicesOnusIDUpdateUnauthorized() *PostDevicesOnusIDUpdateUnauthorized {
	return &PostDevicesOnusIDUpdateUnauthorized{}
}

/*PostDevicesOnusIDUpdateUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesOnusIDUpdateUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesOnusIDUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesOnusIDUpdateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesOnusIDUpdateForbidden creates a PostDevicesOnusIDUpdateForbidden with default headers values
func NewPostDevicesOnusIDUpdateForbidden() *PostDevicesOnusIDUpdateForbidden {
	return &PostDevicesOnusIDUpdateForbidden{}
}

/*PostDevicesOnusIDUpdateForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesOnusIDUpdateForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesOnusIDUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesOnusIDUpdateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesOnusIDUpdateNotFound creates a PostDevicesOnusIDUpdateNotFound with default headers values
func NewPostDevicesOnusIDUpdateNotFound() *PostDevicesOnusIDUpdateNotFound {
	return &PostDevicesOnusIDUpdateNotFound{}
}

/*PostDevicesOnusIDUpdateNotFound handles this case with default header values.

Not Found
*/
type PostDevicesOnusIDUpdateNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesOnusIDUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesOnusIDUpdateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesOnusIDUpdateInternalServerError creates a PostDevicesOnusIDUpdateInternalServerError with default headers values
func NewPostDevicesOnusIDUpdateInternalServerError() *PostDevicesOnusIDUpdateInternalServerError {
	return &PostDevicesOnusIDUpdateInternalServerError{}
}

/*PostDevicesOnusIDUpdateInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesOnusIDUpdateInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesOnusIDUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/onus/{id}/update][%d] postDevicesOnusIdUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesOnusIDUpdateInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesOnusIDUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
