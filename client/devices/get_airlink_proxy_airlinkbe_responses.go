// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetAirlinkProxyAirlinkbeReader is a Reader for the GetAirlinkProxyAirlinkbe structure.
type GetAirlinkProxyAirlinkbeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAirlinkProxyAirlinkbeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAirlinkProxyAirlinkbeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAirlinkProxyAirlinkbeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAirlinkProxyAirlinkbeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAirlinkProxyAirlinkbeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAirlinkProxyAirlinkbeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetAirlinkProxyAirlinkbeBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAirlinkProxyAirlinkbeOK creates a GetAirlinkProxyAirlinkbeOK with default headers values
func NewGetAirlinkProxyAirlinkbeOK() *GetAirlinkProxyAirlinkbeOK {
	return &GetAirlinkProxyAirlinkbeOK{}
}

/*GetAirlinkProxyAirlinkbeOK handles this case with default header values.

Successful
*/
type GetAirlinkProxyAirlinkbeOK struct {
	Payload *models.AirLinkBeSchema
}

func (o *GetAirlinkProxyAirlinkbeOK) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeOK  %+v", 200, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeOK) GetPayload() *models.AirLinkBeSchema {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AirLinkBeSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyAirlinkbeBadRequest creates a GetAirlinkProxyAirlinkbeBadRequest with default headers values
func NewGetAirlinkProxyAirlinkbeBadRequest() *GetAirlinkProxyAirlinkbeBadRequest {
	return &GetAirlinkProxyAirlinkbeBadRequest{}
}

/*GetAirlinkProxyAirlinkbeBadRequest handles this case with default header values.

Bad Request
*/
type GetAirlinkProxyAirlinkbeBadRequest struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyAirlinkbeBadRequest) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeBadRequest  %+v", 400, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyAirlinkbeUnauthorized creates a GetAirlinkProxyAirlinkbeUnauthorized with default headers values
func NewGetAirlinkProxyAirlinkbeUnauthorized() *GetAirlinkProxyAirlinkbeUnauthorized {
	return &GetAirlinkProxyAirlinkbeUnauthorized{}
}

/*GetAirlinkProxyAirlinkbeUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAirlinkProxyAirlinkbeUnauthorized struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyAirlinkbeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyAirlinkbeForbidden creates a GetAirlinkProxyAirlinkbeForbidden with default headers values
func NewGetAirlinkProxyAirlinkbeForbidden() *GetAirlinkProxyAirlinkbeForbidden {
	return &GetAirlinkProxyAirlinkbeForbidden{}
}

/*GetAirlinkProxyAirlinkbeForbidden handles this case with default header values.

Forbidden
*/
type GetAirlinkProxyAirlinkbeForbidden struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyAirlinkbeForbidden) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeForbidden  %+v", 403, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyAirlinkbeInternalServerError creates a GetAirlinkProxyAirlinkbeInternalServerError with default headers values
func NewGetAirlinkProxyAirlinkbeInternalServerError() *GetAirlinkProxyAirlinkbeInternalServerError {
	return &GetAirlinkProxyAirlinkbeInternalServerError{}
}

/*GetAirlinkProxyAirlinkbeInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAirlinkProxyAirlinkbeInternalServerError struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyAirlinkbeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyAirlinkbeBadGateway creates a GetAirlinkProxyAirlinkbeBadGateway with default headers values
func NewGetAirlinkProxyAirlinkbeBadGateway() *GetAirlinkProxyAirlinkbeBadGateway {
	return &GetAirlinkProxyAirlinkbeBadGateway{}
}

/*GetAirlinkProxyAirlinkbeBadGateway handles this case with default header values.

Bad Gateway
*/
type GetAirlinkProxyAirlinkbeBadGateway struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyAirlinkbeBadGateway) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/airlink-be][%d] getAirlinkProxyAirlinkbeBadGateway  %+v", 502, o.Payload)
}

func (o *GetAirlinkProxyAirlinkbeBadGateway) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyAirlinkbeBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
