// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesAircubesIDWirelessReader is a Reader for the PutDevicesAircubesIDWireless structure.
type PutDevicesAircubesIDWirelessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesAircubesIDWirelessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesAircubesIDWirelessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesAircubesIDWirelessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesAircubesIDWirelessUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesAircubesIDWirelessForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesAircubesIDWirelessNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesAircubesIDWirelessInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesAircubesIDWirelessOK creates a PutDevicesAircubesIDWirelessOK with default headers values
func NewPutDevicesAircubesIDWirelessOK() *PutDevicesAircubesIDWirelessOK {
	return &PutDevicesAircubesIDWirelessOK{}
}

/*PutDevicesAircubesIDWirelessOK handles this case with default header values.

Successful
*/
type PutDevicesAircubesIDWirelessOK struct {
	Payload *models.Status
}

func (o *PutDevicesAircubesIDWirelessOK) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessOK  %+v", 200, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDWirelessBadRequest creates a PutDevicesAircubesIDWirelessBadRequest with default headers values
func NewPutDevicesAircubesIDWirelessBadRequest() *PutDevicesAircubesIDWirelessBadRequest {
	return &PutDevicesAircubesIDWirelessBadRequest{}
}

/*PutDevicesAircubesIDWirelessBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesAircubesIDWirelessBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDWirelessBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDWirelessUnauthorized creates a PutDevicesAircubesIDWirelessUnauthorized with default headers values
func NewPutDevicesAircubesIDWirelessUnauthorized() *PutDevicesAircubesIDWirelessUnauthorized {
	return &PutDevicesAircubesIDWirelessUnauthorized{}
}

/*PutDevicesAircubesIDWirelessUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesAircubesIDWirelessUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDWirelessUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDWirelessForbidden creates a PutDevicesAircubesIDWirelessForbidden with default headers values
func NewPutDevicesAircubesIDWirelessForbidden() *PutDevicesAircubesIDWirelessForbidden {
	return &PutDevicesAircubesIDWirelessForbidden{}
}

/*PutDevicesAircubesIDWirelessForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesAircubesIDWirelessForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDWirelessForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDWirelessNotFound creates a PutDevicesAircubesIDWirelessNotFound with default headers values
func NewPutDevicesAircubesIDWirelessNotFound() *PutDevicesAircubesIDWirelessNotFound {
	return &PutDevicesAircubesIDWirelessNotFound{}
}

/*PutDevicesAircubesIDWirelessNotFound handles this case with default header values.

Not Found
*/
type PutDevicesAircubesIDWirelessNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDWirelessNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesAircubesIDWirelessInternalServerError creates a PutDevicesAircubesIDWirelessInternalServerError with default headers values
func NewPutDevicesAircubesIDWirelessInternalServerError() *PutDevicesAircubesIDWirelessInternalServerError {
	return &PutDevicesAircubesIDWirelessInternalServerError{}
}

/*PutDevicesAircubesIDWirelessInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesAircubesIDWirelessInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesAircubesIDWirelessInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/aircubes/{id}/wireless][%d] putDevicesAircubesIdWirelessInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesAircubesIDWirelessInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesAircubesIDWirelessInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
