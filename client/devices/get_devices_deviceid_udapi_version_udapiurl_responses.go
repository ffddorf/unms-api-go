// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesDeviceidUdapiVersionUdapiurlReader is a Reader for the GetDevicesDeviceidUdapiVersionUdapiurl structure.
type GetDevicesDeviceidUdapiVersionUdapiurlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDeviceidUdapiVersionUdapiurlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetDevicesDeviceidUdapiVersionUdapiurlNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlOK creates a GetDevicesDeviceidUdapiVersionUdapiurlOK with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlOK() *GetDevicesDeviceidUdapiVersionUdapiurlOK {
	return &GetDevicesDeviceidUdapiVersionUdapiurlOK{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlOK handles this case with default header values.

Return by version and device udapi response.
*/
type GetDevicesDeviceidUdapiVersionUdapiurlOK struct {
	Payload string
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlOK) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlOK  %+v", 200, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlOK) GetPayload() string {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlBadRequest creates a GetDevicesDeviceidUdapiVersionUdapiurlBadRequest with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlBadRequest() *GetDevicesDeviceidUdapiVersionUdapiurlBadRequest {
	return &GetDevicesDeviceidUdapiVersionUdapiurlBadRequest{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesDeviceidUdapiVersionUdapiurlBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlUnauthorized creates a GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlUnauthorized() *GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized {
	return &GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlForbidden creates a GetDevicesDeviceidUdapiVersionUdapiurlForbidden with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlForbidden() *GetDevicesDeviceidUdapiVersionUdapiurlForbidden {
	return &GetDevicesDeviceidUdapiVersionUdapiurlForbidden{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesDeviceidUdapiVersionUdapiurlForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlNotFound creates a GetDevicesDeviceidUdapiVersionUdapiurlNotFound with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlNotFound() *GetDevicesDeviceidUdapiVersionUdapiurlNotFound {
	return &GetDevicesDeviceidUdapiVersionUdapiurlNotFound{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlNotFound handles this case with default header values.

Not Found
*/
type GetDevicesDeviceidUdapiVersionUdapiurlNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlInternalServerError creates a GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlInternalServerError() *GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError {
	return &GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidUdapiVersionUdapiurlNotImplemented creates a GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented with default headers values
func NewGetDevicesDeviceidUdapiVersionUdapiurlNotImplemented() *GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented {
	return &GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented{}
}

/*GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented handles this case with default header values.

Not Implemented
*/
type GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] getDevicesDeviceidUdapiVersionUdapiurlNotImplemented  %+v", 501, o.Payload)
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidUdapiVersionUdapiurlNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
