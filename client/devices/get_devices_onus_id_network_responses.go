// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesOnusIDNetworkReader is a Reader for the GetDevicesOnusIDNetwork structure.
type GetDevicesOnusIDNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesOnusIDNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesOnusIDNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesOnusIDNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesOnusIDNetworkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesOnusIDNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesOnusIDNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesOnusIDNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesOnusIDNetworkOK creates a GetDevicesOnusIDNetworkOK with default headers values
func NewGetDevicesOnusIDNetworkOK() *GetDevicesOnusIDNetworkOK {
	return &GetDevicesOnusIDNetworkOK{}
}

/*GetDevicesOnusIDNetworkOK handles this case with default header values.

Successful
*/
type GetDevicesOnusIDNetworkOK struct {
	Payload *models.OnuNetwork
}

func (o *GetDevicesOnusIDNetworkOK) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkOK  %+v", 200, o.Payload)
}

func (o *GetDevicesOnusIDNetworkOK) GetPayload() *models.OnuNetwork {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OnuNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOnusIDNetworkBadRequest creates a GetDevicesOnusIDNetworkBadRequest with default headers values
func NewGetDevicesOnusIDNetworkBadRequest() *GetDevicesOnusIDNetworkBadRequest {
	return &GetDevicesOnusIDNetworkBadRequest{}
}

/*GetDevicesOnusIDNetworkBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesOnusIDNetworkBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesOnusIDNetworkBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesOnusIDNetworkBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOnusIDNetworkUnauthorized creates a GetDevicesOnusIDNetworkUnauthorized with default headers values
func NewGetDevicesOnusIDNetworkUnauthorized() *GetDevicesOnusIDNetworkUnauthorized {
	return &GetDevicesOnusIDNetworkUnauthorized{}
}

/*GetDevicesOnusIDNetworkUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesOnusIDNetworkUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesOnusIDNetworkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesOnusIDNetworkUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOnusIDNetworkForbidden creates a GetDevicesOnusIDNetworkForbidden with default headers values
func NewGetDevicesOnusIDNetworkForbidden() *GetDevicesOnusIDNetworkForbidden {
	return &GetDevicesOnusIDNetworkForbidden{}
}

/*GetDevicesOnusIDNetworkForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesOnusIDNetworkForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesOnusIDNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesOnusIDNetworkForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOnusIDNetworkNotFound creates a GetDevicesOnusIDNetworkNotFound with default headers values
func NewGetDevicesOnusIDNetworkNotFound() *GetDevicesOnusIDNetworkNotFound {
	return &GetDevicesOnusIDNetworkNotFound{}
}

/*GetDevicesOnusIDNetworkNotFound handles this case with default header values.

Not Found
*/
type GetDevicesOnusIDNetworkNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesOnusIDNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkNotFound  %+v", 404, o.Payload)
}

func (o *GetDevicesOnusIDNetworkNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesOnusIDNetworkInternalServerError creates a GetDevicesOnusIDNetworkInternalServerError with default headers values
func NewGetDevicesOnusIDNetworkInternalServerError() *GetDevicesOnusIDNetworkInternalServerError {
	return &GetDevicesOnusIDNetworkInternalServerError{}
}

/*GetDevicesOnusIDNetworkInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesOnusIDNetworkInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesOnusIDNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/onus/{id}/network][%d] getDevicesOnusIdNetworkInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesOnusIDNetworkInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesOnusIDNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
