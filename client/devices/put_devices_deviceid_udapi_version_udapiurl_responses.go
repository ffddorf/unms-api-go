// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDevicesDeviceidUdapiVersionUdapiurlReader is a Reader for the PutDevicesDeviceidUdapiVersionUdapiurl structure.
type PutDevicesDeviceidUdapiVersionUdapiurlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesDeviceidUdapiVersionUdapiurlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewPutDevicesDeviceidUdapiVersionUdapiurlNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlOK creates a PutDevicesDeviceidUdapiVersionUdapiurlOK with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlOK() *PutDevicesDeviceidUdapiVersionUdapiurlOK {
	return &PutDevicesDeviceidUdapiVersionUdapiurlOK{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlOK handles this case with default header values.

Return by version and device udapi response.
*/
type PutDevicesDeviceidUdapiVersionUdapiurlOK struct {
	Payload string
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlOK  %+v", 200, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlOK) GetPayload() string {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlBadRequest creates a PutDevicesDeviceidUdapiVersionUdapiurlBadRequest with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlBadRequest() *PutDevicesDeviceidUdapiVersionUdapiurlBadRequest {
	return &PutDevicesDeviceidUdapiVersionUdapiurlBadRequest{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlBadRequest handles this case with default header values.

Bad Request
*/
type PutDevicesDeviceidUdapiVersionUdapiurlBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlBadRequest  %+v", 400, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlUnauthorized creates a PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlUnauthorized() *PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized {
	return &PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlForbidden creates a PutDevicesDeviceidUdapiVersionUdapiurlForbidden with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlForbidden() *PutDevicesDeviceidUdapiVersionUdapiurlForbidden {
	return &PutDevicesDeviceidUdapiVersionUdapiurlForbidden{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlForbidden handles this case with default header values.

Forbidden
*/
type PutDevicesDeviceidUdapiVersionUdapiurlForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlForbidden  %+v", 403, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlNotFound creates a PutDevicesDeviceidUdapiVersionUdapiurlNotFound with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlNotFound() *PutDevicesDeviceidUdapiVersionUdapiurlNotFound {
	return &PutDevicesDeviceidUdapiVersionUdapiurlNotFound{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlNotFound handles this case with default header values.

Not Found
*/
type PutDevicesDeviceidUdapiVersionUdapiurlNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlNotFound  %+v", 404, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlInternalServerError creates a PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlInternalServerError() *PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError {
	return &PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesDeviceidUdapiVersionUdapiurlNotImplemented creates a PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented with default headers values
func NewPutDevicesDeviceidUdapiVersionUdapiurlNotImplemented() *PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented {
	return &PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented{}
}

/*PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented handles this case with default header values.

Not Implemented
*/
type PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented struct {
	Payload *models.Error
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented) Error() string {
	return fmt.Sprintf("[PUT /devices/{deviceId}/udapi/{version}/{udapiUrl*}][%d] putDevicesDeviceidUdapiVersionUdapiurlNotImplemented  %+v", 501, o.Payload)
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesDeviceidUdapiVersionUdapiurlNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
