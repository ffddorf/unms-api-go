// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesIDRestartReader is a Reader for the PostDevicesIDRestart structure.
type PostDevicesIDRestartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDRestartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDRestartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDRestartBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDRestartUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDRestartForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDRestartInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesIDRestartOK creates a PostDevicesIDRestartOK with default headers values
func NewPostDevicesIDRestartOK() *PostDevicesIDRestartOK {
	return &PostDevicesIDRestartOK{}
}

/*PostDevicesIDRestartOK handles this case with default header values.

Successful
*/
type PostDevicesIDRestartOK struct {
	Payload *models.Status
}

func (o *PostDevicesIDRestartOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/restart][%d] postDevicesIdRestartOK  %+v", 200, o.Payload)
}

func (o *PostDevicesIDRestartOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesIDRestartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRestartBadRequest creates a PostDevicesIDRestartBadRequest with default headers values
func NewPostDevicesIDRestartBadRequest() *PostDevicesIDRestartBadRequest {
	return &PostDevicesIDRestartBadRequest{}
}

/*PostDevicesIDRestartBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesIDRestartBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDRestartBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/restart][%d] postDevicesIdRestartBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesIDRestartBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRestartBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRestartUnauthorized creates a PostDevicesIDRestartUnauthorized with default headers values
func NewPostDevicesIDRestartUnauthorized() *PostDevicesIDRestartUnauthorized {
	return &PostDevicesIDRestartUnauthorized{}
}

/*PostDevicesIDRestartUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesIDRestartUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDRestartUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/restart][%d] postDevicesIdRestartUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesIDRestartUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRestartUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRestartForbidden creates a PostDevicesIDRestartForbidden with default headers values
func NewPostDevicesIDRestartForbidden() *PostDevicesIDRestartForbidden {
	return &PostDevicesIDRestartForbidden{}
}

/*PostDevicesIDRestartForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesIDRestartForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDRestartForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/restart][%d] postDevicesIdRestartForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesIDRestartForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRestartForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRestartInternalServerError creates a PostDevicesIDRestartInternalServerError with default headers values
func NewPostDevicesIDRestartInternalServerError() *PostDevicesIDRestartInternalServerError {
	return &PostDevicesIDRestartInternalServerError{}
}

/*PostDevicesIDRestartInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesIDRestartInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDRestartInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/restart][%d] postDevicesIdRestartInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesIDRestartInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRestartInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
