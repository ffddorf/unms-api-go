// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesIDSystemUnmsKeyReachableReader is a Reader for the PostDevicesIDSystemUnmsKeyReachable structure.
type PostDevicesIDSystemUnmsKeyReachableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDSystemUnmsKeyReachableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDSystemUnmsKeyReachableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDSystemUnmsKeyReachableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDSystemUnmsKeyReachableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDSystemUnmsKeyReachableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesIDSystemUnmsKeyReachableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDSystemUnmsKeyReachableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesIDSystemUnmsKeyReachableOK creates a PostDevicesIDSystemUnmsKeyReachableOK with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableOK() *PostDevicesIDSystemUnmsKeyReachableOK {
	return &PostDevicesIDSystemUnmsKeyReachableOK{}
}

/*PostDevicesIDSystemUnmsKeyReachableOK handles this case with default header values.

Successful
*/
type PostDevicesIDSystemUnmsKeyReachableOK struct {
	Payload bool
}

func (o *PostDevicesIDSystemUnmsKeyReachableOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableOK  %+v", 200, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableOK) GetPayload() bool {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDSystemUnmsKeyReachableBadRequest creates a PostDevicesIDSystemUnmsKeyReachableBadRequest with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableBadRequest() *PostDevicesIDSystemUnmsKeyReachableBadRequest {
	return &PostDevicesIDSystemUnmsKeyReachableBadRequest{}
}

/*PostDevicesIDSystemUnmsKeyReachableBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesIDSystemUnmsKeyReachableBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDSystemUnmsKeyReachableBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDSystemUnmsKeyReachableUnauthorized creates a PostDevicesIDSystemUnmsKeyReachableUnauthorized with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableUnauthorized() *PostDevicesIDSystemUnmsKeyReachableUnauthorized {
	return &PostDevicesIDSystemUnmsKeyReachableUnauthorized{}
}

/*PostDevicesIDSystemUnmsKeyReachableUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesIDSystemUnmsKeyReachableUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDSystemUnmsKeyReachableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDSystemUnmsKeyReachableForbidden creates a PostDevicesIDSystemUnmsKeyReachableForbidden with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableForbidden() *PostDevicesIDSystemUnmsKeyReachableForbidden {
	return &PostDevicesIDSystemUnmsKeyReachableForbidden{}
}

/*PostDevicesIDSystemUnmsKeyReachableForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesIDSystemUnmsKeyReachableForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDSystemUnmsKeyReachableForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDSystemUnmsKeyReachableNotFound creates a PostDevicesIDSystemUnmsKeyReachableNotFound with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableNotFound() *PostDevicesIDSystemUnmsKeyReachableNotFound {
	return &PostDevicesIDSystemUnmsKeyReachableNotFound{}
}

/*PostDevicesIDSystemUnmsKeyReachableNotFound handles this case with default header values.

Not Found
*/
type PostDevicesIDSystemUnmsKeyReachableNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesIDSystemUnmsKeyReachableNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDSystemUnmsKeyReachableInternalServerError creates a PostDevicesIDSystemUnmsKeyReachableInternalServerError with default headers values
func NewPostDevicesIDSystemUnmsKeyReachableInternalServerError() *PostDevicesIDSystemUnmsKeyReachableInternalServerError {
	return &PostDevicesIDSystemUnmsKeyReachableInternalServerError{}
}

/*PostDevicesIDSystemUnmsKeyReachableInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesIDSystemUnmsKeyReachableInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDSystemUnmsKeyReachableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/system/unms/key/reachable][%d] postDevicesIdSystemUnmsKeyReachableInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesIDSystemUnmsKeyReachableInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDSystemUnmsKeyReachableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
