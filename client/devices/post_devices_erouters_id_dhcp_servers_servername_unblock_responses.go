// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostDevicesEroutersIDDhcpServersServernameUnblockReader is a Reader for the PostDevicesEroutersIDDhcpServersServernameUnblock structure.
type PostDevicesEroutersIDDhcpServersServernameUnblockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesEroutersIDDhcpServersServernameUnblockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockOK creates a PostDevicesEroutersIDDhcpServersServernameUnblockOK with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockOK() *PostDevicesEroutersIDDhcpServersServernameUnblockOK {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockOK{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockOK handles this case with default header values.

Successful
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockOK struct {
	Payload *models.Status
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockOK) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockOK  %+v", 200, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockBadRequest creates a PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockBadRequest() *PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest handles this case with default header values.

Bad Request
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockBadRequest  %+v", 400, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized creates a PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized() *PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized handles this case with default header values.

Unauthorized
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockUnauthorized  %+v", 401, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockForbidden creates a PostDevicesEroutersIDDhcpServersServernameUnblockForbidden with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockForbidden() *PostDevicesEroutersIDDhcpServersServernameUnblockForbidden {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockForbidden{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockForbidden handles this case with default header values.

Forbidden
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockForbidden  %+v", 403, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockNotFound creates a PostDevicesEroutersIDDhcpServersServernameUnblockNotFound with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockNotFound() *PostDevicesEroutersIDDhcpServersServernameUnblockNotFound {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockNotFound{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockNotFound handles this case with default header values.

Not Found
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockNotFound  %+v", 404, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError creates a PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError with default headers values
func NewPostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError() *PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError {
	return &PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError{}
}

/*PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/erouters/{id}/dhcp/servers/{serverName}/unblock][%d] postDevicesEroutersIdDhcpServersServernameUnblockInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesEroutersIDDhcpServersServernameUnblockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
