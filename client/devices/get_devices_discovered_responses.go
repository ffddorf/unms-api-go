// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDevicesDiscoveredReader is a Reader for the GetDevicesDiscovered structure.
type GetDevicesDiscoveredReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDiscoveredReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesDiscoveredOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesDiscoveredBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesDiscoveredUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesDiscoveredForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesDiscoveredInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesDiscoveredOK creates a GetDevicesDiscoveredOK with default headers values
func NewGetDevicesDiscoveredOK() *GetDevicesDiscoveredOK {
	return &GetDevicesDiscoveredOK{}
}

/*GetDevicesDiscoveredOK handles this case with default header values.

Read-only overview for device list.
*/
type GetDevicesDiscoveredOK struct {
	Payload models.ListOfDevices
}

func (o *GetDevicesDiscoveredOK) Error() string {
	return fmt.Sprintf("[GET /devices/discovered][%d] getDevicesDiscoveredOK  %+v", 200, o.Payload)
}

func (o *GetDevicesDiscoveredOK) GetPayload() models.ListOfDevices {
	return o.Payload
}

func (o *GetDevicesDiscoveredOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDiscoveredBadRequest creates a GetDevicesDiscoveredBadRequest with default headers values
func NewGetDevicesDiscoveredBadRequest() *GetDevicesDiscoveredBadRequest {
	return &GetDevicesDiscoveredBadRequest{}
}

/*GetDevicesDiscoveredBadRequest handles this case with default header values.

Bad Request
*/
type GetDevicesDiscoveredBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesDiscoveredBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/discovered][%d] getDevicesDiscoveredBadRequest  %+v", 400, o.Payload)
}

func (o *GetDevicesDiscoveredBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDiscoveredBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDiscoveredUnauthorized creates a GetDevicesDiscoveredUnauthorized with default headers values
func NewGetDevicesDiscoveredUnauthorized() *GetDevicesDiscoveredUnauthorized {
	return &GetDevicesDiscoveredUnauthorized{}
}

/*GetDevicesDiscoveredUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDevicesDiscoveredUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesDiscoveredUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/discovered][%d] getDevicesDiscoveredUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDevicesDiscoveredUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDiscoveredUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDiscoveredForbidden creates a GetDevicesDiscoveredForbidden with default headers values
func NewGetDevicesDiscoveredForbidden() *GetDevicesDiscoveredForbidden {
	return &GetDevicesDiscoveredForbidden{}
}

/*GetDevicesDiscoveredForbidden handles this case with default header values.

Forbidden
*/
type GetDevicesDiscoveredForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesDiscoveredForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/discovered][%d] getDevicesDiscoveredForbidden  %+v", 403, o.Payload)
}

func (o *GetDevicesDiscoveredForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDiscoveredForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDiscoveredInternalServerError creates a GetDevicesDiscoveredInternalServerError with default headers values
func NewGetDevicesDiscoveredInternalServerError() *GetDevicesDiscoveredInternalServerError {
	return &GetDevicesDiscoveredInternalServerError{}
}

/*GetDevicesDiscoveredInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDevicesDiscoveredInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesDiscoveredInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/discovered][%d] getDevicesDiscoveredInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDevicesDiscoveredInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDiscoveredInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
