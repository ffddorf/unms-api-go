// Code generated by go-swagger; DO NOT EDIT.

package data_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutDatalinksIDReader is a Reader for the PutDatalinksID structure.
type PutDatalinksIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDatalinksIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDatalinksIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDatalinksIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDatalinksIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDatalinksIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutDatalinksIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDatalinksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDatalinksIDOK creates a PutDatalinksIDOK with default headers values
func NewPutDatalinksIDOK() *PutDatalinksIDOK {
	return &PutDatalinksIDOK{}
}

/*PutDatalinksIDOK handles this case with default header values.

Successful
*/
type PutDatalinksIDOK struct {
	Payload *models.DataLink
}

func (o *PutDatalinksIDOK) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdOK  %+v", 200, o.Payload)
}

func (o *PutDatalinksIDOK) GetPayload() *models.DataLink {
	return o.Payload
}

func (o *PutDatalinksIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDatalinksIDBadRequest creates a PutDatalinksIDBadRequest with default headers values
func NewPutDatalinksIDBadRequest() *PutDatalinksIDBadRequest {
	return &PutDatalinksIDBadRequest{}
}

/*PutDatalinksIDBadRequest handles this case with default header values.

Bad Request
*/
type PutDatalinksIDBadRequest struct {
	Payload *models.Error
}

func (o *PutDatalinksIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutDatalinksIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDatalinksIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDatalinksIDUnauthorized creates a PutDatalinksIDUnauthorized with default headers values
func NewPutDatalinksIDUnauthorized() *PutDatalinksIDUnauthorized {
	return &PutDatalinksIDUnauthorized{}
}

/*PutDatalinksIDUnauthorized handles this case with default header values.

Unauthorized
*/
type PutDatalinksIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutDatalinksIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutDatalinksIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDatalinksIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDatalinksIDForbidden creates a PutDatalinksIDForbidden with default headers values
func NewPutDatalinksIDForbidden() *PutDatalinksIDForbidden {
	return &PutDatalinksIDForbidden{}
}

/*PutDatalinksIDForbidden handles this case with default header values.

Forbidden
*/
type PutDatalinksIDForbidden struct {
	Payload *models.Error
}

func (o *PutDatalinksIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdForbidden  %+v", 403, o.Payload)
}

func (o *PutDatalinksIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDatalinksIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDatalinksIDConflict creates a PutDatalinksIDConflict with default headers values
func NewPutDatalinksIDConflict() *PutDatalinksIDConflict {
	return &PutDatalinksIDConflict{}
}

/*PutDatalinksIDConflict handles this case with default header values.

Conflict
*/
type PutDatalinksIDConflict struct {
	Payload *models.Error
}

func (o *PutDatalinksIDConflict) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdConflict  %+v", 409, o.Payload)
}

func (o *PutDatalinksIDConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDatalinksIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDatalinksIDInternalServerError creates a PutDatalinksIDInternalServerError with default headers values
func NewPutDatalinksIDInternalServerError() *PutDatalinksIDInternalServerError {
	return &PutDatalinksIDInternalServerError{}
}

/*PutDatalinksIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutDatalinksIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutDatalinksIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /data-links/{id}][%d] putDatalinksIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutDatalinksIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDatalinksIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
