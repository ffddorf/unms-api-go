// Code generated by go-swagger; DO NOT EDIT.

package data_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetDatalinksReader is a Reader for the GetDatalinks structure.
type GetDatalinksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatalinksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatalinksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatalinksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDatalinksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDatalinksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatalinksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDatalinksOK creates a GetDatalinksOK with default headers values
func NewGetDatalinksOK() *GetDatalinksOK {
	return &GetDatalinksOK{}
}

/*GetDatalinksOK handles this case with default header values.

Successful
*/
type GetDatalinksOK struct {
	Payload models.ListOfDataLinks
}

func (o *GetDatalinksOK) Error() string {
	return fmt.Sprintf("[GET /data-links][%d] getDatalinksOK  %+v", 200, o.Payload)
}

func (o *GetDatalinksOK) GetPayload() models.ListOfDataLinks {
	return o.Payload
}

func (o *GetDatalinksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatalinksBadRequest creates a GetDatalinksBadRequest with default headers values
func NewGetDatalinksBadRequest() *GetDatalinksBadRequest {
	return &GetDatalinksBadRequest{}
}

/*GetDatalinksBadRequest handles this case with default header values.

Bad Request
*/
type GetDatalinksBadRequest struct {
	Payload *models.Error
}

func (o *GetDatalinksBadRequest) Error() string {
	return fmt.Sprintf("[GET /data-links][%d] getDatalinksBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatalinksBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatalinksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatalinksUnauthorized creates a GetDatalinksUnauthorized with default headers values
func NewGetDatalinksUnauthorized() *GetDatalinksUnauthorized {
	return &GetDatalinksUnauthorized{}
}

/*GetDatalinksUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDatalinksUnauthorized struct {
	Payload *models.Error
}

func (o *GetDatalinksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /data-links][%d] getDatalinksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDatalinksUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatalinksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatalinksForbidden creates a GetDatalinksForbidden with default headers values
func NewGetDatalinksForbidden() *GetDatalinksForbidden {
	return &GetDatalinksForbidden{}
}

/*GetDatalinksForbidden handles this case with default header values.

Forbidden
*/
type GetDatalinksForbidden struct {
	Payload *models.Error
}

func (o *GetDatalinksForbidden) Error() string {
	return fmt.Sprintf("[GET /data-links][%d] getDatalinksForbidden  %+v", 403, o.Payload)
}

func (o *GetDatalinksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatalinksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatalinksInternalServerError creates a GetDatalinksInternalServerError with default headers values
func NewGetDatalinksInternalServerError() *GetDatalinksInternalServerError {
	return &GetDatalinksInternalServerError{}
}

/*GetDatalinksInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDatalinksInternalServerError struct {
	Payload *models.Error
}

func (o *GetDatalinksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /data-links][%d] getDatalinksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatalinksInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatalinksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
