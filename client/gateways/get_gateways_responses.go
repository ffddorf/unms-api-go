// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetGatewaysReader is a Reader for the GetGateways structure.
type GetGatewaysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGatewaysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGatewaysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGatewaysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGatewaysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGatewaysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetGatewaysOK creates a GetGatewaysOK with default headers values
func NewGetGatewaysOK() *GetGatewaysOK {
	return &GetGatewaysOK{}
}

/*GetGatewaysOK handles this case with default header values.

Successful
*/
type GetGatewaysOK struct {
	Payload models.ListOfGateways
}

func (o *GetGatewaysOK) Error() string {
	return fmt.Sprintf("[GET /gateways][%d] getGatewaysOK  %+v", 200, o.Payload)
}

func (o *GetGatewaysOK) GetPayload() models.ListOfGateways {
	return o.Payload
}

func (o *GetGatewaysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewaysUnauthorized creates a GetGatewaysUnauthorized with default headers values
func NewGetGatewaysUnauthorized() *GetGatewaysUnauthorized {
	return &GetGatewaysUnauthorized{}
}

/*GetGatewaysUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGatewaysUnauthorized struct {
	Payload *models.Error
}

func (o *GetGatewaysUnauthorized) Error() string {
	return fmt.Sprintf("[GET /gateways][%d] getGatewaysUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGatewaysUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewaysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewaysForbidden creates a GetGatewaysForbidden with default headers values
func NewGetGatewaysForbidden() *GetGatewaysForbidden {
	return &GetGatewaysForbidden{}
}

/*GetGatewaysForbidden handles this case with default header values.

Forbidden
*/
type GetGatewaysForbidden struct {
	Payload *models.Error
}

func (o *GetGatewaysForbidden) Error() string {
	return fmt.Sprintf("[GET /gateways][%d] getGatewaysForbidden  %+v", 403, o.Payload)
}

func (o *GetGatewaysForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewaysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewaysInternalServerError creates a GetGatewaysInternalServerError with default headers values
func NewGetGatewaysInternalServerError() *GetGatewaysInternalServerError {
	return &GetGatewaysInternalServerError{}
}

/*GetGatewaysInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetGatewaysInternalServerError struct {
	Payload *models.Error
}

func (o *GetGatewaysInternalServerError) Error() string {
	return fmt.Sprintf("[GET /gateways][%d] getGatewaysInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGatewaysInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewaysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
