// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutGatewaysIDReader is a Reader for the PutGatewaysID structure.
type PutGatewaysIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutGatewaysIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutGatewaysIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutGatewaysIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutGatewaysIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutGatewaysIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutGatewaysIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutGatewaysIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutGatewaysIDOK creates a PutGatewaysIDOK with default headers values
func NewPutGatewaysIDOK() *PutGatewaysIDOK {
	return &PutGatewaysIDOK{}
}

/*PutGatewaysIDOK handles this case with default header values.

status of updated gateway with data
*/
type PutGatewaysIDOK struct {
	Payload *models.Model39
}

func (o *PutGatewaysIDOK) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdOK  %+v", 200, o.Payload)
}

func (o *PutGatewaysIDOK) GetPayload() *models.Model39 {
	return o.Payload
}

func (o *PutGatewaysIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Model39)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGatewaysIDBadRequest creates a PutGatewaysIDBadRequest with default headers values
func NewPutGatewaysIDBadRequest() *PutGatewaysIDBadRequest {
	return &PutGatewaysIDBadRequest{}
}

/*PutGatewaysIDBadRequest handles this case with default header values.

Bad Request
*/
type PutGatewaysIDBadRequest struct {
	Payload *models.Error
}

func (o *PutGatewaysIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutGatewaysIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutGatewaysIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGatewaysIDUnauthorized creates a PutGatewaysIDUnauthorized with default headers values
func NewPutGatewaysIDUnauthorized() *PutGatewaysIDUnauthorized {
	return &PutGatewaysIDUnauthorized{}
}

/*PutGatewaysIDUnauthorized handles this case with default header values.

Unauthorized
*/
type PutGatewaysIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutGatewaysIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutGatewaysIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutGatewaysIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGatewaysIDForbidden creates a PutGatewaysIDForbidden with default headers values
func NewPutGatewaysIDForbidden() *PutGatewaysIDForbidden {
	return &PutGatewaysIDForbidden{}
}

/*PutGatewaysIDForbidden handles this case with default header values.

Forbidden
*/
type PutGatewaysIDForbidden struct {
	Payload *models.Error
}

func (o *PutGatewaysIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdForbidden  %+v", 403, o.Payload)
}

func (o *PutGatewaysIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutGatewaysIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGatewaysIDNotFound creates a PutGatewaysIDNotFound with default headers values
func NewPutGatewaysIDNotFound() *PutGatewaysIDNotFound {
	return &PutGatewaysIDNotFound{}
}

/*PutGatewaysIDNotFound handles this case with default header values.

Not Found
*/
type PutGatewaysIDNotFound struct {
	Payload *models.Error
}

func (o *PutGatewaysIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdNotFound  %+v", 404, o.Payload)
}

func (o *PutGatewaysIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutGatewaysIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGatewaysIDInternalServerError creates a PutGatewaysIDInternalServerError with default headers values
func NewPutGatewaysIDInternalServerError() *PutGatewaysIDInternalServerError {
	return &PutGatewaysIDInternalServerError{}
}

/*PutGatewaysIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutGatewaysIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutGatewaysIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /gateways/{id}][%d] putGatewaysIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutGatewaysIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutGatewaysIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
