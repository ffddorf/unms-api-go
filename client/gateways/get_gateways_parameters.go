// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetGatewaysParams creates a new GetGatewaysParams object
// with the default values initialized.
func NewGetGatewaysParams() *GetGatewaysParams {

	return &GetGatewaysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetGatewaysParamsWithTimeout creates a new GetGatewaysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetGatewaysParamsWithTimeout(timeout time.Duration) *GetGatewaysParams {

	return &GetGatewaysParams{

		timeout: timeout,
	}
}

// NewGetGatewaysParamsWithContext creates a new GetGatewaysParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetGatewaysParamsWithContext(ctx context.Context) *GetGatewaysParams {

	return &GetGatewaysParams{

		Context: ctx,
	}
}

// NewGetGatewaysParamsWithHTTPClient creates a new GetGatewaysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetGatewaysParamsWithHTTPClient(client *http.Client) *GetGatewaysParams {

	return &GetGatewaysParams{
		HTTPClient: client,
	}
}

/*GetGatewaysParams contains all the parameters to send to the API endpoint
for the get gateways operation typically these are written to a http.Request
*/
type GetGatewaysParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get gateways params
func (o *GetGatewaysParams) WithTimeout(timeout time.Duration) *GetGatewaysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get gateways params
func (o *GetGatewaysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get gateways params
func (o *GetGatewaysParams) WithContext(ctx context.Context) *GetGatewaysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get gateways params
func (o *GetGatewaysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get gateways params
func (o *GetGatewaysParams) WithHTTPClient(client *http.Client) *GetGatewaysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get gateways params
func (o *GetGatewaysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *GetGatewaysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
