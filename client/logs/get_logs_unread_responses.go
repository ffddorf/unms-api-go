// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetLogsUnreadReader is a Reader for the GetLogsUnread structure.
type GetLogsUnreadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogsUnreadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogsUnreadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLogsUnreadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLogsUnreadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLogsUnreadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLogsUnreadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLogsUnreadOK creates a GetLogsUnreadOK with default headers values
func NewGetLogsUnreadOK() *GetLogsUnreadOK {
	return &GetLogsUnreadOK{}
}

/*GetLogsUnreadOK handles this case with default header values.

Successful
*/
type GetLogsUnreadOK struct {
	Payload *models.UnreadLogs
}

func (o *GetLogsUnreadOK) Error() string {
	return fmt.Sprintf("[GET /logs/unread][%d] getLogsUnreadOK  %+v", 200, o.Payload)
}

func (o *GetLogsUnreadOK) GetPayload() *models.UnreadLogs {
	return o.Payload
}

func (o *GetLogsUnreadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnreadLogs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsUnreadBadRequest creates a GetLogsUnreadBadRequest with default headers values
func NewGetLogsUnreadBadRequest() *GetLogsUnreadBadRequest {
	return &GetLogsUnreadBadRequest{}
}

/*GetLogsUnreadBadRequest handles this case with default header values.

Bad Request
*/
type GetLogsUnreadBadRequest struct {
	Payload *models.Error
}

func (o *GetLogsUnreadBadRequest) Error() string {
	return fmt.Sprintf("[GET /logs/unread][%d] getLogsUnreadBadRequest  %+v", 400, o.Payload)
}

func (o *GetLogsUnreadBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLogsUnreadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsUnreadUnauthorized creates a GetLogsUnreadUnauthorized with default headers values
func NewGetLogsUnreadUnauthorized() *GetLogsUnreadUnauthorized {
	return &GetLogsUnreadUnauthorized{}
}

/*GetLogsUnreadUnauthorized handles this case with default header values.

Unauthorized
*/
type GetLogsUnreadUnauthorized struct {
	Payload *models.Error
}

func (o *GetLogsUnreadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /logs/unread][%d] getLogsUnreadUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLogsUnreadUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLogsUnreadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsUnreadForbidden creates a GetLogsUnreadForbidden with default headers values
func NewGetLogsUnreadForbidden() *GetLogsUnreadForbidden {
	return &GetLogsUnreadForbidden{}
}

/*GetLogsUnreadForbidden handles this case with default header values.

Forbidden
*/
type GetLogsUnreadForbidden struct {
	Payload *models.Error
}

func (o *GetLogsUnreadForbidden) Error() string {
	return fmt.Sprintf("[GET /logs/unread][%d] getLogsUnreadForbidden  %+v", 403, o.Payload)
}

func (o *GetLogsUnreadForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLogsUnreadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsUnreadInternalServerError creates a GetLogsUnreadInternalServerError with default headers values
func NewGetLogsUnreadInternalServerError() *GetLogsUnreadInternalServerError {
	return &GetLogsUnreadInternalServerError{}
}

/*GetLogsUnreadInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetLogsUnreadInternalServerError struct {
	Payload *models.Error
}

func (o *GetLogsUnreadInternalServerError) Error() string {
	return fmt.Sprintf("[GET /logs/unread][%d] getLogsUnreadInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLogsUnreadInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLogsUnreadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
