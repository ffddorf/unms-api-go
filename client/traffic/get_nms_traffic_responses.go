// Code generated by go-swagger; DO NOT EDIT.

package traffic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetNmsTrafficReader is a Reader for the GetNmsTraffic structure.
type GetNmsTrafficReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNmsTrafficReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNmsTrafficOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNmsTrafficUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNmsTrafficForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNmsTrafficInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNmsTrafficOK creates a GetNmsTrafficOK with default headers values
func NewGetNmsTrafficOK() *GetNmsTrafficOK {
	return &GetNmsTrafficOK{}
}

/*GetNmsTrafficOK handles this case with default header values.

Successful
*/
type GetNmsTrafficOK struct {
	Payload *models.TrafficStatus
}

func (o *GetNmsTrafficOK) Error() string {
	return fmt.Sprintf("[GET /nms/traffic][%d] getNmsTrafficOK  %+v", 200, o.Payload)
}

func (o *GetNmsTrafficOK) GetPayload() *models.TrafficStatus {
	return o.Payload
}

func (o *GetNmsTrafficOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrafficStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficUnauthorized creates a GetNmsTrafficUnauthorized with default headers values
func NewGetNmsTrafficUnauthorized() *GetNmsTrafficUnauthorized {
	return &GetNmsTrafficUnauthorized{}
}

/*GetNmsTrafficUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNmsTrafficUnauthorized struct {
	Payload *models.Error
}

func (o *GetNmsTrafficUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nms/traffic][%d] getNmsTrafficUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNmsTrafficUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficForbidden creates a GetNmsTrafficForbidden with default headers values
func NewGetNmsTrafficForbidden() *GetNmsTrafficForbidden {
	return &GetNmsTrafficForbidden{}
}

/*GetNmsTrafficForbidden handles this case with default header values.

Forbidden
*/
type GetNmsTrafficForbidden struct {
	Payload *models.Error
}

func (o *GetNmsTrafficForbidden) Error() string {
	return fmt.Sprintf("[GET /nms/traffic][%d] getNmsTrafficForbidden  %+v", 403, o.Payload)
}

func (o *GetNmsTrafficForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNmsTrafficInternalServerError creates a GetNmsTrafficInternalServerError with default headers values
func NewGetNmsTrafficInternalServerError() *GetNmsTrafficInternalServerError {
	return &GetNmsTrafficInternalServerError{}
}

/*GetNmsTrafficInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNmsTrafficInternalServerError struct {
	Payload *models.Error
}

func (o *GetNmsTrafficInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nms/traffic][%d] getNmsTrafficInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNmsTrafficInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNmsTrafficInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
