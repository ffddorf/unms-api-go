// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// DeleteTokenTokenidReader is a Reader for the DeleteTokenTokenid structure.
type DeleteTokenTokenidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTokenTokenidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTokenTokenidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTokenTokenidBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTokenTokenidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTokenTokenidForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTokenTokenidInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTokenTokenidOK creates a DeleteTokenTokenidOK with default headers values
func NewDeleteTokenTokenidOK() *DeleteTokenTokenidOK {
	return &DeleteTokenTokenidOK{}
}

/*DeleteTokenTokenidOK handles this case with default header values.

Successful
*/
type DeleteTokenTokenidOK struct {
	Payload *models.Status
}

func (o *DeleteTokenTokenidOK) Error() string {
	return fmt.Sprintf("[DELETE /token/{tokenId}][%d] deleteTokenTokenidOK  %+v", 200, o.Payload)
}

func (o *DeleteTokenTokenidOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteTokenTokenidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenTokenidBadRequest creates a DeleteTokenTokenidBadRequest with default headers values
func NewDeleteTokenTokenidBadRequest() *DeleteTokenTokenidBadRequest {
	return &DeleteTokenTokenidBadRequest{}
}

/*DeleteTokenTokenidBadRequest handles this case with default header values.

Bad Request
*/
type DeleteTokenTokenidBadRequest struct {
	Payload *models.Error
}

func (o *DeleteTokenTokenidBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /token/{tokenId}][%d] deleteTokenTokenidBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTokenTokenidBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTokenTokenidBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenTokenidUnauthorized creates a DeleteTokenTokenidUnauthorized with default headers values
func NewDeleteTokenTokenidUnauthorized() *DeleteTokenTokenidUnauthorized {
	return &DeleteTokenTokenidUnauthorized{}
}

/*DeleteTokenTokenidUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteTokenTokenidUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteTokenTokenidUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /token/{tokenId}][%d] deleteTokenTokenidUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTokenTokenidUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTokenTokenidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenTokenidForbidden creates a DeleteTokenTokenidForbidden with default headers values
func NewDeleteTokenTokenidForbidden() *DeleteTokenTokenidForbidden {
	return &DeleteTokenTokenidForbidden{}
}

/*DeleteTokenTokenidForbidden handles this case with default header values.

Forbidden
*/
type DeleteTokenTokenidForbidden struct {
	Payload *models.Error
}

func (o *DeleteTokenTokenidForbidden) Error() string {
	return fmt.Sprintf("[DELETE /token/{tokenId}][%d] deleteTokenTokenidForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTokenTokenidForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTokenTokenidForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenTokenidInternalServerError creates a DeleteTokenTokenidInternalServerError with default headers values
func NewDeleteTokenTokenidInternalServerError() *DeleteTokenTokenidInternalServerError {
	return &DeleteTokenTokenidInternalServerError{}
}

/*DeleteTokenTokenidInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteTokenTokenidInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteTokenTokenidInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /token/{tokenId}][%d] deleteTokenTokenidInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTokenTokenidInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTokenTokenidInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
