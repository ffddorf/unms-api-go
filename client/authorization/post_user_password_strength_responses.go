// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostUserPasswordStrengthReader is a Reader for the PostUserPasswordStrength structure.
type PostUserPasswordStrengthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserPasswordStrengthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserPasswordStrengthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserPasswordStrengthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserPasswordStrengthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUserPasswordStrengthOK creates a PostUserPasswordStrengthOK with default headers values
func NewPostUserPasswordStrengthOK() *PostUserPasswordStrengthOK {
	return &PostUserPasswordStrengthOK{}
}

/*PostUserPasswordStrengthOK handles this case with default header values.

Successful
*/
type PostUserPasswordStrengthOK struct {
	Payload *models.PasswordStrengthMetadata
}

func (o *PostUserPasswordStrengthOK) Error() string {
	return fmt.Sprintf("[POST /user/password/strength][%d] postUserPasswordStrengthOK  %+v", 200, o.Payload)
}

func (o *PostUserPasswordStrengthOK) GetPayload() *models.PasswordStrengthMetadata {
	return o.Payload
}

func (o *PostUserPasswordStrengthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PasswordStrengthMetadata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserPasswordStrengthBadRequest creates a PostUserPasswordStrengthBadRequest with default headers values
func NewPostUserPasswordStrengthBadRequest() *PostUserPasswordStrengthBadRequest {
	return &PostUserPasswordStrengthBadRequest{}
}

/*PostUserPasswordStrengthBadRequest handles this case with default header values.

Bad Request
*/
type PostUserPasswordStrengthBadRequest struct {
	Payload *models.Error
}

func (o *PostUserPasswordStrengthBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/password/strength][%d] postUserPasswordStrengthBadRequest  %+v", 400, o.Payload)
}

func (o *PostUserPasswordStrengthBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserPasswordStrengthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserPasswordStrengthInternalServerError creates a PostUserPasswordStrengthInternalServerError with default headers values
func NewPostUserPasswordStrengthInternalServerError() *PostUserPasswordStrengthInternalServerError {
	return &PostUserPasswordStrengthInternalServerError{}
}

/*PostUserPasswordStrengthInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostUserPasswordStrengthInternalServerError struct {
	Payload *models.Error
}

func (o *PostUserPasswordStrengthInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/password/strength][%d] postUserPasswordStrengthInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUserPasswordStrengthInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserPasswordStrengthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
