// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutUserDisabledtotpauthReader is a Reader for the PutUserDisabledtotpauth structure.
type PutUserDisabledtotpauthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserDisabledtotpauthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserDisabledtotpauthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserDisabledtotpauthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserDisabledtotpauthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserDisabledtotpauthForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserDisabledtotpauthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserDisabledtotpauthOK creates a PutUserDisabledtotpauthOK with default headers values
func NewPutUserDisabledtotpauthOK() *PutUserDisabledtotpauthOK {
	return &PutUserDisabledtotpauthOK{}
}

/*PutUserDisabledtotpauthOK handles this case with default header values.

Successful
*/
type PutUserDisabledtotpauthOK struct {
	Payload *models.User
}

func (o *PutUserDisabledtotpauthOK) Error() string {
	return fmt.Sprintf("[PUT /user/disabledtotpauth][%d] putUserDisabledtotpauthOK  %+v", 200, o.Payload)
}

func (o *PutUserDisabledtotpauthOK) GetPayload() *models.User {
	return o.Payload
}

func (o *PutUserDisabledtotpauthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserDisabledtotpauthBadRequest creates a PutUserDisabledtotpauthBadRequest with default headers values
func NewPutUserDisabledtotpauthBadRequest() *PutUserDisabledtotpauthBadRequest {
	return &PutUserDisabledtotpauthBadRequest{}
}

/*PutUserDisabledtotpauthBadRequest handles this case with default header values.

Bad Request
*/
type PutUserDisabledtotpauthBadRequest struct {
	Payload *models.Error
}

func (o *PutUserDisabledtotpauthBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/disabledtotpauth][%d] putUserDisabledtotpauthBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserDisabledtotpauthBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserDisabledtotpauthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserDisabledtotpauthUnauthorized creates a PutUserDisabledtotpauthUnauthorized with default headers values
func NewPutUserDisabledtotpauthUnauthorized() *PutUserDisabledtotpauthUnauthorized {
	return &PutUserDisabledtotpauthUnauthorized{}
}

/*PutUserDisabledtotpauthUnauthorized handles this case with default header values.

Unauthorized
*/
type PutUserDisabledtotpauthUnauthorized struct {
	Payload *models.Error
}

func (o *PutUserDisabledtotpauthUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/disabledtotpauth][%d] putUserDisabledtotpauthUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserDisabledtotpauthUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserDisabledtotpauthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserDisabledtotpauthForbidden creates a PutUserDisabledtotpauthForbidden with default headers values
func NewPutUserDisabledtotpauthForbidden() *PutUserDisabledtotpauthForbidden {
	return &PutUserDisabledtotpauthForbidden{}
}

/*PutUserDisabledtotpauthForbidden handles this case with default header values.

Forbidden
*/
type PutUserDisabledtotpauthForbidden struct {
	Payload *models.Error
}

func (o *PutUserDisabledtotpauthForbidden) Error() string {
	return fmt.Sprintf("[PUT /user/disabledtotpauth][%d] putUserDisabledtotpauthForbidden  %+v", 403, o.Payload)
}

func (o *PutUserDisabledtotpauthForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserDisabledtotpauthForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserDisabledtotpauthInternalServerError creates a PutUserDisabledtotpauthInternalServerError with default headers values
func NewPutUserDisabledtotpauthInternalServerError() *PutUserDisabledtotpauthInternalServerError {
	return &PutUserDisabledtotpauthInternalServerError{}
}

/*PutUserDisabledtotpauthInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutUserDisabledtotpauthInternalServerError struct {
	Payload *models.Error
}

func (o *PutUserDisabledtotpauthInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user/disabledtotpauth][%d] putUserDisabledtotpauthInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserDisabledtotpauthInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserDisabledtotpauthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
