// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// GetUserTotpauthReader is a Reader for the GetUserTotpauth structure.
type GetUserTotpauthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserTotpauthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserTotpauthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserTotpauthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserTotpauthForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserTotpauthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserTotpauthOK creates a GetUserTotpauthOK with default headers values
func NewGetUserTotpauthOK() *GetUserTotpauthOK {
	return &GetUserTotpauthOK{}
}

/*GetUserTotpauthOK handles this case with default header values.

Successful
*/
type GetUserTotpauthOK struct {
	Payload *models.TwoFactorSecret
}

func (o *GetUserTotpauthOK) Error() string {
	return fmt.Sprintf("[GET /user/totpauth][%d] getUserTotpauthOK  %+v", 200, o.Payload)
}

func (o *GetUserTotpauthOK) GetPayload() *models.TwoFactorSecret {
	return o.Payload
}

func (o *GetUserTotpauthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TwoFactorSecret)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTotpauthUnauthorized creates a GetUserTotpauthUnauthorized with default headers values
func NewGetUserTotpauthUnauthorized() *GetUserTotpauthUnauthorized {
	return &GetUserTotpauthUnauthorized{}
}

/*GetUserTotpauthUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUserTotpauthUnauthorized struct {
	Payload *models.Error
}

func (o *GetUserTotpauthUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/totpauth][%d] getUserTotpauthUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserTotpauthUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserTotpauthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTotpauthForbidden creates a GetUserTotpauthForbidden with default headers values
func NewGetUserTotpauthForbidden() *GetUserTotpauthForbidden {
	return &GetUserTotpauthForbidden{}
}

/*GetUserTotpauthForbidden handles this case with default header values.

Forbidden
*/
type GetUserTotpauthForbidden struct {
	Payload *models.Error
}

func (o *GetUserTotpauthForbidden) Error() string {
	return fmt.Sprintf("[GET /user/totpauth][%d] getUserTotpauthForbidden  %+v", 403, o.Payload)
}

func (o *GetUserTotpauthForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserTotpauthForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTotpauthInternalServerError creates a GetUserTotpauthInternalServerError with default headers values
func NewGetUserTotpauthInternalServerError() *GetUserTotpauthInternalServerError {
	return &GetUserTotpauthInternalServerError{}
}

/*GetUserTotpauthInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetUserTotpauthInternalServerError struct {
	Payload *models.Error
}

func (o *GetUserTotpauthInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/totpauth][%d] getUserTotpauthInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserTotpauthInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserTotpauthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
