// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PostUserChecksessionReader is a Reader for the PostUserChecksession structure.
type PostUserChecksessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserChecksessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserChecksessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostUserChecksessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUserChecksessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserChecksessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUserChecksessionOK creates a PostUserChecksessionOK with default headers values
func NewPostUserChecksessionOK() *PostUserChecksessionOK {
	return &PostUserChecksessionOK{}
}

/*PostUserChecksessionOK handles this case with default header values.

Successful
*/
type PostUserChecksessionOK struct {
	Payload *models.Status
}

func (o *PostUserChecksessionOK) Error() string {
	return fmt.Sprintf("[POST /user/check-session][%d] postUserChecksessionOK  %+v", 200, o.Payload)
}

func (o *PostUserChecksessionOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PostUserChecksessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserChecksessionUnauthorized creates a PostUserChecksessionUnauthorized with default headers values
func NewPostUserChecksessionUnauthorized() *PostUserChecksessionUnauthorized {
	return &PostUserChecksessionUnauthorized{}
}

/*PostUserChecksessionUnauthorized handles this case with default header values.

Unauthorized
*/
type PostUserChecksessionUnauthorized struct {
	Payload *models.Error
}

func (o *PostUserChecksessionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/check-session][%d] postUserChecksessionUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUserChecksessionUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserChecksessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserChecksessionForbidden creates a PostUserChecksessionForbidden with default headers values
func NewPostUserChecksessionForbidden() *PostUserChecksessionForbidden {
	return &PostUserChecksessionForbidden{}
}

/*PostUserChecksessionForbidden handles this case with default header values.

Forbidden
*/
type PostUserChecksessionForbidden struct {
	Payload *models.Error
}

func (o *PostUserChecksessionForbidden) Error() string {
	return fmt.Sprintf("[POST /user/check-session][%d] postUserChecksessionForbidden  %+v", 403, o.Payload)
}

func (o *PostUserChecksessionForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserChecksessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserChecksessionInternalServerError creates a PostUserChecksessionInternalServerError with default headers values
func NewPostUserChecksessionInternalServerError() *PostUserChecksessionInternalServerError {
	return &PostUserChecksessionInternalServerError{}
}

/*PostUserChecksessionInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostUserChecksessionInternalServerError struct {
	Payload *models.Error
}

func (o *PostUserChecksessionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/check-session][%d] postUserChecksessionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUserChecksessionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserChecksessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
