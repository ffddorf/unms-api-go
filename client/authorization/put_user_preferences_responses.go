// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ffddorf/unms-api-go/models"
)

// PutUserPreferencesReader is a Reader for the PutUserPreferences structure.
type PutUserPreferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserPreferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserPreferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserPreferencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserPreferencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserPreferencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserPreferencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserPreferencesOK creates a PutUserPreferencesOK with default headers values
func NewPutUserPreferencesOK() *PutUserPreferencesOK {
	return &PutUserPreferencesOK{}
}

/*PutUserPreferencesOK handles this case with default header values.

Successful
*/
type PutUserPreferencesOK struct {
	Payload *models.User
}

func (o *PutUserPreferencesOK) Error() string {
	return fmt.Sprintf("[PUT /user/preferences][%d] putUserPreferencesOK  %+v", 200, o.Payload)
}

func (o *PutUserPreferencesOK) GetPayload() *models.User {
	return o.Payload
}

func (o *PutUserPreferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserPreferencesBadRequest creates a PutUserPreferencesBadRequest with default headers values
func NewPutUserPreferencesBadRequest() *PutUserPreferencesBadRequest {
	return &PutUserPreferencesBadRequest{}
}

/*PutUserPreferencesBadRequest handles this case with default header values.

Bad Request
*/
type PutUserPreferencesBadRequest struct {
	Payload *models.Error
}

func (o *PutUserPreferencesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/preferences][%d] putUserPreferencesBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserPreferencesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserPreferencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserPreferencesUnauthorized creates a PutUserPreferencesUnauthorized with default headers values
func NewPutUserPreferencesUnauthorized() *PutUserPreferencesUnauthorized {
	return &PutUserPreferencesUnauthorized{}
}

/*PutUserPreferencesUnauthorized handles this case with default header values.

Unauthorized
*/
type PutUserPreferencesUnauthorized struct {
	Payload *models.Error
}

func (o *PutUserPreferencesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/preferences][%d] putUserPreferencesUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserPreferencesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserPreferencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserPreferencesForbidden creates a PutUserPreferencesForbidden with default headers values
func NewPutUserPreferencesForbidden() *PutUserPreferencesForbidden {
	return &PutUserPreferencesForbidden{}
}

/*PutUserPreferencesForbidden handles this case with default header values.

Forbidden
*/
type PutUserPreferencesForbidden struct {
	Payload *models.Error
}

func (o *PutUserPreferencesForbidden) Error() string {
	return fmt.Sprintf("[PUT /user/preferences][%d] putUserPreferencesForbidden  %+v", 403, o.Payload)
}

func (o *PutUserPreferencesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserPreferencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserPreferencesInternalServerError creates a PutUserPreferencesInternalServerError with default headers values
func NewPutUserPreferencesInternalServerError() *PutUserPreferencesInternalServerError {
	return &PutUserPreferencesInternalServerError{}
}

/*PutUserPreferencesInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutUserPreferencesInternalServerError struct {
	Payload *models.Error
}

func (o *PutUserPreferencesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user/preferences][%d] putUserPreferencesInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserPreferencesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserPreferencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
