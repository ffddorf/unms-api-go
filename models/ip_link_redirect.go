// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IPLinkRedirect Ip link redirect
// swagger:model IpLinkRedirect
type IPLinkRedirect struct {

	// https port
	// Min Length: 1
	HTTPSPort string `json:"httpsPort,omitempty"`

	// token
	// Pattern: ^[a-f0-9]+$
	Token string `json:"token,omitempty"`
}

// Validate validates this Ip link redirect
func (m *IPLinkRedirect) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHTTPSPort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPLinkRedirect) validateHTTPSPort(formats strfmt.Registry) error {

	if swag.IsZero(m.HTTPSPort) { // not required
		return nil
	}

	if err := validate.MinLength("httpsPort", "body", string(m.HTTPSPort), 1); err != nil {
		return err
	}

	return nil
}

func (m *IPLinkRedirect) validateToken(formats strfmt.Registry) error {

	if swag.IsZero(m.Token) { // not required
		return nil
	}

	if err := validate.Pattern("token", "body", string(m.Token), `^[a-f0-9]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IPLinkRedirect) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPLinkRedirect) UnmarshalBinary(b []byte) error {
	var res IPLinkRedirect
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
