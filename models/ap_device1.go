// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApDevice1 ap device 1
// swagger:model apDevice 1
type ApDevice1 struct {

	// id
	ID string `json:"id,omitempty"`

	// model
	Model string `json:"model,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// series
	// Required: true
	// Enum: [LTU classic G60]
	Series *string `json:"series"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this ap device 1
func (m *ApDevice1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSeries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var apDevice1TypeSeriesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LTU","classic","G60"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apDevice1TypeSeriesPropEnum = append(apDevice1TypeSeriesPropEnum, v)
	}
}

const (

	// ApDevice1SeriesLTU captures enum value "LTU"
	ApDevice1SeriesLTU string = "LTU"

	// ApDevice1SeriesClassic captures enum value "classic"
	ApDevice1SeriesClassic string = "classic"

	// ApDevice1SeriesG60 captures enum value "G60"
	ApDevice1SeriesG60 string = "G60"
)

// prop value enum
func (m *ApDevice1) validateSeriesEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, apDevice1TypeSeriesPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApDevice1) validateSeries(formats strfmt.Registry) error {

	if err := validate.Required("series", "body", m.Series); err != nil {
		return err
	}

	// value enum
	if err := m.validateSeriesEnum("series", "body", *m.Series); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApDevice1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApDevice1) UnmarshalBinary(b []byte) error {
	var res ApDevice1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
