// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TddFraming tdd framing
// swagger:model tddFraming
type TddFraming struct {

	// dl ratio
	// Required: true
	DlRatio *float64 `json:"dlRatio"`

	// duration
	// Required: true
	Duration *float64 `json:"duration"`

	// flex beta enabled
	// Required: true
	FlexBetaEnabled *bool `json:"flexBetaEnabled"`

	// rese enabled
	// Required: true
	ReseEnabled *bool `json:"reseEnabled"`
}

// Validate validates this tdd framing
func (m *TddFraming) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDlRatio(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFlexBetaEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReseEnabled(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TddFraming) validateDlRatio(formats strfmt.Registry) error {

	if err := validate.Required("dlRatio", "body", m.DlRatio); err != nil {
		return err
	}

	return nil
}

func (m *TddFraming) validateDuration(formats strfmt.Registry) error {

	if err := validate.Required("duration", "body", m.Duration); err != nil {
		return err
	}

	return nil
}

func (m *TddFraming) validateFlexBetaEnabled(formats strfmt.Registry) error {

	if err := validate.Required("flexBetaEnabled", "body", m.FlexBetaEnabled); err != nil {
		return err
	}

	return nil
}

func (m *TddFraming) validateReseEnabled(formats strfmt.Registry) error {

	if err := validate.Required("reseEnabled", "body", m.ReseEnabled); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TddFraming) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TddFraming) UnmarshalBinary(b []byte) error {
	var res TddFraming
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
