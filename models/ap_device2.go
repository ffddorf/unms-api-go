// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApDevice2 ap device 2
// swagger:model apDevice 2
type ApDevice2 struct {

	// id
	ID string `json:"id,omitempty"`

	// model
	Model string `json:"model,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// series
	// Required: true
	// Enum: [AC M G60]
	Series *string `json:"series"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this ap device 2
func (m *ApDevice2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSeries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var apDevice2TypeSeriesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AC","M","G60"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apDevice2TypeSeriesPropEnum = append(apDevice2TypeSeriesPropEnum, v)
	}
}

const (

	// ApDevice2SeriesAC captures enum value "AC"
	ApDevice2SeriesAC string = "AC"

	// ApDevice2SeriesM captures enum value "M"
	ApDevice2SeriesM string = "M"

	// ApDevice2SeriesG60 captures enum value "G60"
	ApDevice2SeriesG60 string = "G60"
)

// prop value enum
func (m *ApDevice2) validateSeriesEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, apDevice2TypeSeriesPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApDevice2) validateSeries(formats strfmt.Registry) error {

	if err := validate.Required("series", "body", m.Series); err != nil {
		return err
	}

	// value enum
	if err := m.validateSeriesEnum("series", "body", *m.Series); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApDevice2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApDevice2) UnmarshalBinary(b []byte) error {
	var res ApDevice2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
