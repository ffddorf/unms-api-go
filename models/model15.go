// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Model15 model 15
// swagger:model Model 15
type Model15 struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// priority
	Priority float64 `json:"priority,omitempty"`

	// receive
	Receive ListOfCoordinates `json:"receive,omitempty"`

	// transmit
	Transmit ListOfCoordinates `json:"transmit,omitempty"`
}

// Validate validates this model 15
func (m *Model15) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReceive(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTransmit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model15) validateReceive(formats strfmt.Registry) error {

	if swag.IsZero(m.Receive) { // not required
		return nil
	}

	if err := m.Receive.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("receive")
		}
		return err
	}

	return nil
}

func (m *Model15) validateTransmit(formats strfmt.Registry) error {

	if swag.IsZero(m.Transmit) { // not required
		return nil
	}

	if err := m.Transmit.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("transmit")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Model15) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model15) UnmarshalBinary(b []byte) error {
	var res Model15
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
