// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model69 model 69
// swagger:model Model 69
type Model69 struct {

	// auth
	// Required: true
	// Enum: [md5 plaintext-password off]
	Auth *string `json:"auth"`

	// auth key
	AuthKey string `json:"authKey,omitempty"`

	// cost
	// Required: true
	// Maximum: 255
	// Minimum: 1
	Cost *int64 `json:"cost"`
}

// Validate validates this model 69
func (m *Model69) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuth(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCost(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var model69TypeAuthPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["md5","plaintext-password","off"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model69TypeAuthPropEnum = append(model69TypeAuthPropEnum, v)
	}
}

const (

	// Model69AuthMd5 captures enum value "md5"
	Model69AuthMd5 string = "md5"

	// Model69AuthPlaintextPassword captures enum value "plaintext-password"
	Model69AuthPlaintextPassword string = "plaintext-password"

	// Model69AuthOff captures enum value "off"
	Model69AuthOff string = "off"
)

// prop value enum
func (m *Model69) validateAuthEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, model69TypeAuthPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Model69) validateAuth(formats strfmt.Registry) error {

	if err := validate.Required("auth", "body", m.Auth); err != nil {
		return err
	}

	// value enum
	if err := m.validateAuthEnum("auth", "body", *m.Auth); err != nil {
		return err
	}

	return nil
}

func (m *Model69) validateCost(formats strfmt.Registry) error {

	if err := validate.Required("cost", "body", m.Cost); err != nil {
		return err
	}

	if err := validate.MinimumInt("cost", "body", int64(*m.Cost), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("cost", "body", int64(*m.Cost), 255, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Model69) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model69) UnmarshalBinary(b []byte) error {
	var res Model69
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
