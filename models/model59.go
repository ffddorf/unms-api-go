// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model59 model 59
// swagger:model Model 59
type Model59 struct {

	// account
	Account string `json:"account,omitempty"`

	// interface
	// Required: true
	Interface *string `json:"interface"`

	// mtu
	// Required: true
	// Minimum: 1
	Mtu *float64 `json:"mtu"`

	// password
	// Required: true
	// Max Length: 20
	// Min Length: 4
	Password *string `json:"password"`

	// pppoe Id
	// Required: true
	PppoeID *int64 `json:"pppoeId"`
}

// Validate validates this model 59
func (m *Model59) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInterface(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMtu(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePppoeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model59) validateInterface(formats strfmt.Registry) error {

	if err := validate.Required("interface", "body", m.Interface); err != nil {
		return err
	}

	return nil
}

func (m *Model59) validateMtu(formats strfmt.Registry) error {

	if err := validate.Required("mtu", "body", m.Mtu); err != nil {
		return err
	}

	if err := validate.Minimum("mtu", "body", float64(*m.Mtu), 1, false); err != nil {
		return err
	}

	return nil
}

func (m *Model59) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("password", "body", m.Password); err != nil {
		return err
	}

	if err := validate.MinLength("password", "body", string(*m.Password), 4); err != nil {
		return err
	}

	if err := validate.MaxLength("password", "body", string(*m.Password), 20); err != nil {
		return err
	}

	return nil
}

func (m *Model59) validatePppoeID(formats strfmt.Registry) error {

	if err := validate.Required("pppoeId", "body", m.PppoeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Model59) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model59) UnmarshalBinary(b []byte) error {
	var res Model59
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
