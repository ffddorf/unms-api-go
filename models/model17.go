// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model17 model 17
// swagger:model Model 17
type Model17 struct {

	// Device ID.
	// Required: true
	DeviceID *string `json:"deviceId"`

	// device name
	DeviceName string `json:"deviceName,omitempty"`

	// device type
	// Enum: [onu olt erouter eswitch epower airCube airMax airFiber toughSwitch solarBeam blackBox]
	DeviceType string `json:"deviceType,omitempty"`

	// Interface name.
	InterfaceID string `json:"interfaceId,omitempty"`

	// ip
	IP string `json:"ip,omitempty"`
}

// Validate validates this model 17
func (m *Model17) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model17) validateDeviceID(formats strfmt.Registry) error {

	if err := validate.Required("deviceId", "body", m.DeviceID); err != nil {
		return err
	}

	return nil
}

var model17TypeDeviceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["onu","olt","erouter","eswitch","epower","airCube","airMax","airFiber","toughSwitch","solarBeam","blackBox"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model17TypeDeviceTypePropEnum = append(model17TypeDeviceTypePropEnum, v)
	}
}

const (

	// Model17DeviceTypeOnu captures enum value "onu"
	Model17DeviceTypeOnu string = "onu"

	// Model17DeviceTypeOlt captures enum value "olt"
	Model17DeviceTypeOlt string = "olt"

	// Model17DeviceTypeErouter captures enum value "erouter"
	Model17DeviceTypeErouter string = "erouter"

	// Model17DeviceTypeEswitch captures enum value "eswitch"
	Model17DeviceTypeEswitch string = "eswitch"

	// Model17DeviceTypeEpower captures enum value "epower"
	Model17DeviceTypeEpower string = "epower"

	// Model17DeviceTypeAirCube captures enum value "airCube"
	Model17DeviceTypeAirCube string = "airCube"

	// Model17DeviceTypeAirMax captures enum value "airMax"
	Model17DeviceTypeAirMax string = "airMax"

	// Model17DeviceTypeAirFiber captures enum value "airFiber"
	Model17DeviceTypeAirFiber string = "airFiber"

	// Model17DeviceTypeToughSwitch captures enum value "toughSwitch"
	Model17DeviceTypeToughSwitch string = "toughSwitch"

	// Model17DeviceTypeSolarBeam captures enum value "solarBeam"
	Model17DeviceTypeSolarBeam string = "solarBeam"

	// Model17DeviceTypeBlackBox captures enum value "blackBox"
	Model17DeviceTypeBlackBox string = "blackBox"
)

// prop value enum
func (m *Model17) validateDeviceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, model17TypeDeviceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Model17) validateDeviceType(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeviceTypeEnum("deviceType", "body", m.DeviceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Model17) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model17) UnmarshalBinary(b []byte) error {
	var res Model17
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
