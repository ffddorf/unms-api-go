// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PayloadSpeedTest payload speed test
// swagger:model PayloadSpeedTest
type PayloadSpeedTest struct {

	// direction
	// Required: true
	// Enum: [uplink downlink bidirectional]
	Direction *string `json:"direction"`

	// milliseconds
	// Required: true
	Duration *float64 `json:"duration"`

	// source
	// Required: true
	Source *string `json:"source"`

	// target
	// Required: true
	Target *string `json:"target"`
}

// Validate validates this payload speed test
func (m *PayloadSpeedTest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var payloadSpeedTestTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["uplink","downlink","bidirectional"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		payloadSpeedTestTypeDirectionPropEnum = append(payloadSpeedTestTypeDirectionPropEnum, v)
	}
}

const (

	// PayloadSpeedTestDirectionUplink captures enum value "uplink"
	PayloadSpeedTestDirectionUplink string = "uplink"

	// PayloadSpeedTestDirectionDownlink captures enum value "downlink"
	PayloadSpeedTestDirectionDownlink string = "downlink"

	// PayloadSpeedTestDirectionBidirectional captures enum value "bidirectional"
	PayloadSpeedTestDirectionBidirectional string = "bidirectional"
)

// prop value enum
func (m *PayloadSpeedTest) validateDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, payloadSpeedTestTypeDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PayloadSpeedTest) validateDirection(formats strfmt.Registry) error {

	if err := validate.Required("direction", "body", m.Direction); err != nil {
		return err
	}

	// value enum
	if err := m.validateDirectionEnum("direction", "body", *m.Direction); err != nil {
		return err
	}

	return nil
}

func (m *PayloadSpeedTest) validateDuration(formats strfmt.Registry) error {

	if err := validate.Required("duration", "body", m.Duration); err != nil {
		return err
	}

	return nil
}

func (m *PayloadSpeedTest) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("source", "body", m.Source); err != nil {
		return err
	}

	return nil
}

func (m *PayloadSpeedTest) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", m.Target); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PayloadSpeedTest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PayloadSpeedTest) UnmarshalBinary(b []byte) error {
	var res PayloadSpeedTest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
