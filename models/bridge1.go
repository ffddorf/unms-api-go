// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Bridge1 bridge 1
// swagger:model bridge 1
type Bridge1 struct {

	// include vlans
	// Required: true
	IncludeVlans IncludeVlans2 `json:"includeVlans"`

	// native vlan
	// Required: true
	NativeVlan NativeVlan `json:"nativeVlan"`
}

// Validate validates this bridge 1
func (m *Bridge1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIncludeVlans(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNativeVlan(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Bridge1) validateIncludeVlans(formats strfmt.Registry) error {

	if err := validate.Required("includeVlans", "body", m.IncludeVlans); err != nil {
		return err
	}

	return nil
}

func (m *Bridge1) validateNativeVlan(formats strfmt.Registry) error {

	if err := validate.Required("nativeVlan", "body", m.NativeVlan); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Bridge1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Bridge1) UnmarshalBinary(b []byte) error {
	var res Bridge1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
