// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Dhcp dhcp
// swagger:model dhcp
type Dhcp struct {

	// ignore
	// Required: true
	Ignore *bool `json:"ignore"`

	// interface
	Interface string `json:"interface,omitempty"`

	// lease time
	LeaseTime string `json:"leaseTime,omitempty"`

	// range end
	// Required: true
	RangeEnd *string `json:"rangeEnd"`

	// range start
	// Required: true
	RangeStart *string `json:"rangeStart"`
}

// Validate validates this dhcp
func (m *Dhcp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIgnore(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRangeEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRangeStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Dhcp) validateIgnore(formats strfmt.Registry) error {

	if err := validate.Required("ignore", "body", m.Ignore); err != nil {
		return err
	}

	return nil
}

func (m *Dhcp) validateRangeEnd(formats strfmt.Registry) error {

	if err := validate.Required("rangeEnd", "body", m.RangeEnd); err != nil {
		return err
	}

	return nil
}

func (m *Dhcp) validateRangeStart(formats strfmt.Registry) error {

	if err := validate.Required("rangeStart", "body", m.RangeStart); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Dhcp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Dhcp) UnmarshalBinary(b []byte) error {
	var res Dhcp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
