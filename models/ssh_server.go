// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SSHServer ssh server
// swagger:model sshServer
type SSHServer struct {

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// ssh port
	// Maximum: 65535
	// Minimum: 0
	SSHPort *int64 `json:"sshPort,omitempty"`
}

// Validate validates this ssh server
func (m *SSHServer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSSHPort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SSHServer) validateSSHPort(formats strfmt.Registry) error {

	if swag.IsZero(m.SSHPort) { // not required
		return nil
	}

	if err := validate.MinimumInt("sshPort", "body", int64(*m.SSHPort), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("sshPort", "body", int64(*m.SSHPort), 65535, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SSHServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SSHServer) UnmarshalBinary(b []byte) error {
	var res SSHServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
