// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeletedSite deleted site
// swagger:model DeletedSite
type DeletedSite struct {

	// Time when the site was deleted in ISO format.
	// Required: true
	// Format: date
	DeletedAt *strfmt.Date `json:"deletedAt"`

	// Site ID.
	// Required: true
	ID *string `json:"id"`

	// ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.
	// Required: true
	UcrmID *string `json:"ucrmId"`
}

// Validate validates this deleted site
func (m *DeletedSite) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUcrmID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeletedSite) validateDeletedAt(formats strfmt.Registry) error {

	if err := validate.Required("deletedAt", "body", m.DeletedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("deletedAt", "body", "date", m.DeletedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DeletedSite) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *DeletedSite) validateUcrmID(formats strfmt.Registry) error {

	if err := validate.Required("ucrmId", "body", m.UcrmID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeletedSite) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeletedSite) UnmarshalBinary(b []byte) error {
	var res DeletedSite
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
