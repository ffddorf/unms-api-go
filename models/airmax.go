// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Airmax airmax
// swagger:model airmax
type Airmax struct {

	// mode
	// Required: true
	Mode *string `json:"mode"`

	// wds
	// Required: true
	Wds *bool `json:"wds"`
}

// Validate validates this airmax
func (m *Airmax) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Airmax) validateMode(formats strfmt.Registry) error {

	if err := validate.Required("mode", "body", m.Mode); err != nil {
		return err
	}

	return nil
}

func (m *Airmax) validateWds(formats strfmt.Registry) error {

	if err := validate.Required("wds", "body", m.Wds); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Airmax) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Airmax) UnmarshalBinary(b []byte) error {
	var res Airmax
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
