// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Lan2 lan 2
// swagger:model lan 2
type Lan2 struct {

	// IPv6 static LAN address
	// Required: true
	LanAddress6 *string `json:"lanAddress6"`

	// IPv6 LAN mode
	// Required: true
	// Enum: [auto static]
	LanMode6 *string `json:"lanMode6"`

	// Router advertisement mode
	// Required: true
	// Enum: [auto static]
	RouterAdvertisementMode *string `json:"routerAdvertisementMode"`

	// Static prefix configuration in IPv6 CIDR
	// Required: true
	RouterAdvertisementPrefix *string `json:"routerAdvertisementPrefix"`
}

// Validate validates this lan 2
func (m *Lan2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLanAddress6(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLanMode6(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRouterAdvertisementMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRouterAdvertisementPrefix(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Lan2) validateLanAddress6(formats strfmt.Registry) error {

	if err := validate.Required("lanAddress6", "body", m.LanAddress6); err != nil {
		return err
	}

	return nil
}

var lan2TypeLanMode6PropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","static"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lan2TypeLanMode6PropEnum = append(lan2TypeLanMode6PropEnum, v)
	}
}

const (

	// Lan2LanMode6Auto captures enum value "auto"
	Lan2LanMode6Auto string = "auto"

	// Lan2LanMode6Static captures enum value "static"
	Lan2LanMode6Static string = "static"
)

// prop value enum
func (m *Lan2) validateLanMode6Enum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, lan2TypeLanMode6PropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Lan2) validateLanMode6(formats strfmt.Registry) error {

	if err := validate.Required("lanMode6", "body", m.LanMode6); err != nil {
		return err
	}

	// value enum
	if err := m.validateLanMode6Enum("lanMode6", "body", *m.LanMode6); err != nil {
		return err
	}

	return nil
}

var lan2TypeRouterAdvertisementModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","static"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lan2TypeRouterAdvertisementModePropEnum = append(lan2TypeRouterAdvertisementModePropEnum, v)
	}
}

const (

	// Lan2RouterAdvertisementModeAuto captures enum value "auto"
	Lan2RouterAdvertisementModeAuto string = "auto"

	// Lan2RouterAdvertisementModeStatic captures enum value "static"
	Lan2RouterAdvertisementModeStatic string = "static"
)

// prop value enum
func (m *Lan2) validateRouterAdvertisementModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, lan2TypeRouterAdvertisementModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Lan2) validateRouterAdvertisementMode(formats strfmt.Registry) error {

	if err := validate.Required("routerAdvertisementMode", "body", m.RouterAdvertisementMode); err != nil {
		return err
	}

	// value enum
	if err := m.validateRouterAdvertisementModeEnum("routerAdvertisementMode", "body", *m.RouterAdvertisementMode); err != nil {
		return err
	}

	return nil
}

func (m *Lan2) validateRouterAdvertisementPrefix(formats strfmt.Registry) error {

	if err := validate.Required("routerAdvertisementPrefix", "body", m.RouterAdvertisementPrefix); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Lan2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Lan2) UnmarshalBinary(b []byte) error {
	var res Lan2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
