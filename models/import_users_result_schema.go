// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ImportUsersResultSchema import users result schema
// swagger:model ImportUsersResultSchema
type ImportUsersResultSchema struct {

	// New username in case that the original CRM username is already taken in UNMS.
	NewUsername string `json:"newUsername,omitempty"`

	// User's id in CRM.
	// Required: true
	UcrmID *string `json:"ucrmId"`

	// User's id in UNMS.
	// Required: true
	UnmsID *string `json:"unmsId"`
}

// Validate validates this import users result schema
func (m *ImportUsersResultSchema) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUcrmID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnmsID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ImportUsersResultSchema) validateUcrmID(formats strfmt.Registry) error {

	if err := validate.Required("ucrmId", "body", m.UcrmID); err != nil {
		return err
	}

	return nil
}

func (m *ImportUsersResultSchema) validateUnmsID(formats strfmt.Registry) error {

	if err := validate.Required("unmsId", "body", m.UnmsID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ImportUsersResultSchema) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImportUsersResultSchema) UnmarshalBinary(b []byte) error {
	var res ImportUsersResultSchema
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
