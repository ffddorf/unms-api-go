// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NmsSettings nms settings
// swagger:model NmsSettings
type NmsSettings struct {

	// allow auto update ubnt firmwares
	// Required: true
	AllowAutoUpdateUbntFirmwares *bool `json:"allowAutoUpdateUbntFirmwares"`

	// allow beta firmwares
	// Required: true
	AllowBetaFirmwares *bool `json:"allowBetaFirmwares"`

	// allow logging to logentries
	// Required: true
	AllowLoggingToLogentries *bool `json:"allowLoggingToLogentries"`

	// allow logging to sentry
	// Required: true
	AllowLoggingToSentry *bool `json:"allowLoggingToSentry"`

	// When true UNMS will look for latest UNMS version among beta releases.
	AllowUnmsBetaVersion bool `json:"allowUnmsBetaVersion,omitempty"`

	// auto backups
	// Required: true
	AutoBackups *bool `json:"autoBackups"`

	// country
	// Required: true
	// Enum: [XX XY AF AX AL DZ AS AD AO AI AQ AG AR AM AW AU AT AZ BS BH BD BB BY BE BZ BJ BM BT BO BQ BA BW BV BR IO BN BG BF BI CV KH CM CA KY CF TD CL CN CX CC CO KM CK CR CI HR CW CY CZ CD DK DJ DM DO EC EG SV GQ ER EE SZ ET FK FO FJ FI FR GF PF TF GA GM GE DE GH GI GR GL GD GP GU GT GG GN GW GY HT HM HN HK HU IS IN ID IQ IE IM IL IT JM JP JE JO KZ KE KI KW KG LA LV LB LS LR LY LI LT LU MO MK MG MW MY MV ML MT MH MQ MR MU YT MX FM MD MC MN ME MS MA MZ MM NA NR NP NL NC NZ NI NE NG NU NF MP NO OM PK PW PA PG PY PE PH PN PL PT PR QA KR RS SC CG RE RO RU RW BL SH KN LC MF PM VC WS SM ST SA SN SL SG SX SK SI SB SO ZA GS SS ES LK PS SR SJ SE CH TW TJ TZ TH TL TG TK TO TT TN TR TM TC TV UG UA AE GB US UY UZ VU VA VE VN VG VI WF EH YE ZM ZW]
	Country *string `json:"country"`

	// date format
	// Required: true
	// Enum: [D MMM YYYY Do MMM YYYY DD MMM YYYY MMM D, YYYY MMM Do, YYYY MMM DD, YYYY YYYY-MM-DD DD-MM-YYYY D.M.YYYY DD.MM.YYYY D/M/YYYY DD/MM/YYYY M/D/YYYY MM/DD/YYYY]
	DateFormat *string `json:"dateFormat"`

	// default grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	DefaultGracePeriod *int64 `json:"defaultGracePeriod"`

	// default qos propagation
	// Required: true
	// Enum: [all gateway]
	DefaultQosPropagation *string `json:"defaultQosPropagation"`

	// device auto backups
	// Required: true
	DeviceAutoBackups *bool `json:"deviceAutoBackups"`

	// device number of backups
	// Maximum: 100
	// Minimum: 1
	DeviceNumberOfBackups int64 `json:"deviceNumberOfBackups,omitempty"`

	// device ping address
	// Required: true
	DevicePingAddress *string `json:"devicePingAddress"`

	// device ping address mode
	// Required: true
	// Enum: [auto custom]
	DevicePingAddressMode *string `json:"devicePingAddressMode"`

	// device ping interval normal
	// Required: true
	// Maximum: 200000
	// Minimum: 10000
	DevicePingIntervalNormal *float64 `json:"devicePingIntervalNormal"`

	// device ping interval outage
	// Required: true
	// Maximum: 100000
	// Minimum: 2000
	DevicePingIntervalOutage *float64 `json:"devicePingIntervalOutage"`

	// device transmission frequencies
	// Required: true
	DeviceTransmissionFrequencies *DeviceTransmissionFrequencies `json:"deviceTransmissionFrequencies"`

	// device transmission profile
	// Required: true
	// Enum: [auto custom]
	DeviceTransmissionProfile *string `json:"deviceTransmissionProfile"`

	// discovery allow local scan
	// Required: true
	DiscoveryAllowLocalScan *bool `json:"discoveryAllowLocalScan"`

	// discovery allow remote scan
	// Required: true
	DiscoveryAllowRemoteScan *bool `json:"discoveryAllowRemoteScan"`

	// discovery allow unsecured channels
	// Required: true
	DiscoveryAllowUnsecuredChannels *bool `json:"discoveryAllowUnsecuredChannels"`

	// discovery auto configuration
	// Required: true
	DiscoveryAutoConfiguration *bool `json:"discoveryAutoConfiguration"`

	// discovery hide black box
	// Required: true
	DiscoveryHideBlackBox *bool `json:"discoveryHideBlackBox"`

	// discovery snmp community
	// Required: true
	DiscoverySnmpCommunity *string `json:"discoverySnmpCommunity"`

	// google maps Api key
	// Required: true
	GoogleMapsAPIKey *string `json:"googleMapsApiKey"`

	// home page
	// Required: true
	// Enum: [unms ucrm]
	HomePage *string `json:"homePage"`

	// hostname
	// Required: true
	Hostname *string `json:"hostname"`

	// instance Id
	// Required: true
	InstanceID *string `json:"instanceId"`

	// is isp
	// Required: true
	IsIsp *bool `json:"isIsp"`

	// lets encrypt error
	// Required: true
	LetsEncryptError *string `json:"letsEncryptError"`

	// lets encrypt timestamp
	// Required: true
	LetsEncryptTimestamp *float64 `json:"letsEncryptTimestamp"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowFriday bool `json:"maintenanceWindowFriday,omitempty"`

	// Hour when maintenance window start.
	// Maximum: 24
	// Minimum: 0
	MaintenanceWindowFromTime *int64 `json:"maintenanceWindowFromTime,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowMonday bool `json:"maintenanceWindowMonday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowSaturday bool `json:"maintenanceWindowSaturday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowSunday bool `json:"maintenanceWindowSunday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowThursday bool `json:"maintenanceWindowThursday,omitempty"`

	// Hour when maintenance window end.
	// Maximum: 24
	// Minimum: 0
	MaintenanceWindowToTime *int64 `json:"maintenanceWindowToTime,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowTuesday bool `json:"maintenanceWindowTuesday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowWednesday bool `json:"maintenanceWindowWednesday,omitempty"`

	// maps provider
	// Required: true
	// Enum: [GoogleMaps OpenStreetMap]
	MapsProvider *string `json:"mapsProvider"`

	// When true reachability check will be skipped.
	// Required: true
	MigrationForceModeEnabled *bool `json:"migrationForceModeEnabled"`

	// migration hostname
	// Required: true
	MigrationHostname *string `json:"migrationHostname"`

	// When true all new device connections and connected devices will change UNMS Key.
	// Required: true
	MigrationModeEnabled *bool `json:"migrationModeEnabled"`

	// UNMS port to migrate to.
	// Required: true
	// Maximum: 65535
	// Minimum: 1
	MigrationPort *int64 `json:"migrationPort"`

	// restart grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	RestartGracePeriod *int64 `json:"restartGracePeriod"`

	// time format
	// Required: true
	// Enum: [H:mm h:mm a]
	TimeFormat *string `json:"timeFormat"`

	// timezone
	// Required: true
	// Enum: [Africa/Abidjan Africa/Accra Africa/Addis_Ababa Africa/Algiers Africa/Asmara Africa/Asmera Africa/Bamako Africa/Bangui Africa/Banjul Africa/Bissau Africa/Blantyre Africa/Brazzaville Africa/Bujumbura Africa/Cairo Africa/Casablanca Africa/Ceuta Africa/Conakry Africa/Dakar Africa/Dar_es_Salaam Africa/Djibouti Africa/Douala Africa/El_Aaiun Africa/Freetown Africa/Gaborone Africa/Harare Africa/Johannesburg Africa/Juba Africa/Kampala Africa/Khartoum Africa/Kigali Africa/Kinshasa Africa/Lagos Africa/Libreville Africa/Lome Africa/Luanda Africa/Lubumbashi Africa/Lusaka Africa/Malabo Africa/Maputo Africa/Maseru Africa/Mbabane Africa/Mogadishu Africa/Monrovia Africa/Nairobi Africa/Ndjamena Africa/Niamey Africa/Nouakchott Africa/Ouagadougou Africa/Porto-Novo Africa/Sao_Tome Africa/Timbuktu Africa/Tripoli Africa/Tunis Africa/Windhoek America/Adak America/Anchorage America/Anguilla America/Antigua America/Araguaina America/Argentina/Buenos_Aires America/Argentina/Catamarca America/Argentina/ComodRivadavia America/Argentina/Cordoba America/Argentina/Jujuy America/Argentina/La_Rioja America/Argentina/Mendoza America/Argentina/Rio_Gallegos America/Argentina/Salta America/Argentina/San_Juan America/Argentina/San_Luis America/Argentina/Tucuman America/Argentina/Ushuaia America/Aruba America/Asuncion America/Atikokan America/Atka America/Bahia America/Bahia_Banderas America/Barbados America/Belem America/Belize America/Blanc-Sablon America/Boa_Vista America/Bogota America/Boise America/Buenos_Aires America/Cambridge_Bay America/Campo_Grande America/Cancun America/Caracas America/Catamarca America/Cayenne America/Cayman America/Chicago America/Chihuahua America/Coral_Harbour America/Cordoba America/Costa_Rica America/Creston America/Cuiaba America/Curacao America/Danmarkshavn America/Dawson America/Dawson_Creek America/Denver America/Detroit America/Dominica America/Edmonton America/Eirunepe America/El_Salvador America/Ensenada America/Fort_Nelson America/Fort_Wayne America/Fortaleza America/Glace_Bay America/Godthab America/Goose_Bay America/Grand_Turk America/Grenada America/Guadeloupe America/Guatemala America/Guayaquil America/Guyana America/Halifax America/Havana America/Hermosillo America/Indiana/Indianapolis America/Indiana/Knox America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Tell_City America/Indiana/Vevay America/Indiana/Vincennes America/Indiana/Winamac America/Indianapolis America/Inuvik America/Iqaluit America/Jamaica America/Jujuy America/Juneau America/Kentucky/Louisville America/Kentucky/Monticello America/Knox_IN America/Kralendijk America/La_Paz America/Lima America/Los_Angeles America/Louisville America/Lower_Princes America/Maceio America/Managua America/Manaus America/Marigot America/Martinique America/Matamoros America/Mazatlan America/Mendoza America/Menominee America/Merida America/Metlakatla America/Mexico_City America/Miquelon America/Moncton America/Monterrey America/Montevideo America/Montreal America/Montserrat America/Nassau America/New_York America/Nipigon America/Nome America/Noronha America/North_Dakota/Beulah America/North_Dakota/Center America/North_Dakota/New_Salem America/Ojinaga America/Panama America/Pangnirtung America/Paramaribo America/Phoenix America/Port-au-Prince America/Port_of_Spain America/Porto_Acre America/Porto_Velho America/Puerto_Rico America/Punta_Arenas America/Rainy_River America/Rankin_Inlet America/Recife America/Regina America/Resolute America/Rio_Branco America/Rosario America/Santa_Isabel America/Santarem America/Santiago America/Santo_Domingo America/Sao_Paulo America/Scoresbysund America/Shiprock America/Sitka America/St_Barthelemy America/St_Johns America/St_Kitts America/St_Lucia America/St_Thomas America/St_Vincent America/Swift_Current America/Tegucigalpa America/Thule America/Thunder_Bay America/Tijuana America/Toronto America/Tortola America/Vancouver America/Virgin America/Whitehorse America/Winnipeg America/Yakutat America/Yellowknife Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Macquarie Antarctica/Mawson Antarctica/McMurdo Antarctica/Palmer Antarctica/Rothera Antarctica/South_Pole Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Arctic/Longyearbyen Asia/Aden Asia/Almaty Asia/Amman Asia/Anadyr Asia/Aqtau Asia/Aqtobe Asia/Ashgabat Asia/Ashkhabad Asia/Atyrau Asia/Baghdad Asia/Bahrain Asia/Baku Asia/Bangkok Asia/Barnaul Asia/Beirut Asia/Bishkek Asia/Brunei Asia/Calcutta Asia/Chita Asia/Choibalsan Asia/Chongqing Asia/Chungking Asia/Colombo Asia/Dacca Asia/Damascus Asia/Dhaka Asia/Dili Asia/Dubai Asia/Dushanbe Asia/Famagusta Asia/Gaza Asia/Harbin Asia/Hebron Asia/Ho_Chi_Minh Asia/Hong_Kong Asia/Hovd Asia/Irkutsk Asia/Istanbul Asia/Jakarta Asia/Jayapura Asia/Jerusalem Asia/Kabul Asia/Kamchatka Asia/Karachi Asia/Kashgar Asia/Kathmandu Asia/Katmandu Asia/Khandyga Asia/Kolkata Asia/Krasnoyarsk Asia/Kuala_Lumpur Asia/Kuching Asia/Kuwait Asia/Macao Asia/Macau Asia/Magadan Asia/Makassar Asia/Manila Asia/Muscat Asia/Nicosia Asia/Novokuznetsk Asia/Novosibirsk Asia/Omsk Asia/Oral Asia/Phnom_Penh Asia/Pontianak Asia/Pyongyang Asia/Qatar Asia/Qyzylorda Asia/Rangoon Asia/Riyadh Asia/Saigon Asia/Sakhalin Asia/Samarkand Asia/Seoul Asia/Shanghai Asia/Singapore Asia/Srednekolymsk Asia/Taipei Asia/Tashkent Asia/Tbilisi Asia/Tehran Asia/Tel_Aviv Asia/Thimbu Asia/Thimphu Asia/Tokyo Asia/Tomsk Asia/Ujung_Pandang Asia/Ulaanbaatar Asia/Ulan_Bator Asia/Urumqi Asia/Ust-Nera Asia/Vientiane Asia/Vladivostok Asia/Yakutsk Asia/Yangon Asia/Yekaterinburg Asia/Yerevan Atlantic/Azores Atlantic/Bermuda Atlantic/Canary Atlantic/Cape_Verde Atlantic/Faeroe Atlantic/Faroe Atlantic/Jan_Mayen Atlantic/Madeira Atlantic/Reykjavik Atlantic/South_Georgia Atlantic/St_Helena Atlantic/Stanley Australia/ACT Australia/Adelaide Australia/Brisbane Australia/Broken_Hill Australia/Canberra Australia/Currie Australia/Darwin Australia/Eucla Australia/Hobart Australia/LHI Australia/Lindeman Australia/Lord_Howe Australia/Melbourne Australia/NSW Australia/North Australia/Perth Australia/Queensland Australia/South Australia/Sydney Australia/Tasmania Australia/Victoria Australia/West Australia/Yancowinna Brazil/Acre Brazil/DeNoronha Brazil/East Brazil/West CET CST6CDT Canada/Atlantic Canada/Central Canada/Eastern Canada/Mountain Canada/Newfoundland Canada/Pacific Canada/Saskatchewan Canada/Yukon Chile/Continental Chile/EasterIsland Cuba EET EST EST5EDT Egypt Eire Etc/GMT Etc/GMT+0 Etc/GMT+1 Etc/GMT+10 Etc/GMT+11 Etc/GMT+12 Etc/GMT+2 Etc/GMT+3 Etc/GMT+4 Etc/GMT+5 Etc/GMT+6 Etc/GMT+7 Etc/GMT+8 Etc/GMT+9 Etc/GMT-0 Etc/GMT-1 Etc/GMT-10 Etc/GMT-11 Etc/GMT-12 Etc/GMT-13 Etc/GMT-14 Etc/GMT-2 Etc/GMT-3 Etc/GMT-4 Etc/GMT-5 Etc/GMT-6 Etc/GMT-7 Etc/GMT-8 Etc/GMT-9 Etc/GMT0 Etc/Greenwich Etc/UCT Etc/UTC Etc/Universal Etc/Zulu Europe/Amsterdam Europe/Andorra Europe/Astrakhan Europe/Athens Europe/Belfast Europe/Belgrade Europe/Berlin Europe/Bratislava Europe/Brussels Europe/Bucharest Europe/Budapest Europe/Busingen Europe/Chisinau Europe/Copenhagen Europe/Dublin Europe/Gibraltar Europe/Guernsey Europe/Helsinki Europe/Isle_of_Man Europe/Istanbul Europe/Jersey Europe/Kaliningrad Europe/Kiev Europe/Kirov Europe/Lisbon Europe/Ljubljana Europe/London Europe/Luxembourg Europe/Madrid Europe/Malta Europe/Mariehamn Europe/Minsk Europe/Monaco Europe/Moscow Europe/Nicosia Europe/Oslo Europe/Paris Europe/Podgorica Europe/Prague Europe/Riga Europe/Rome Europe/Samara Europe/San_Marino Europe/Sarajevo Europe/Saratov Europe/Simferopol Europe/Skopje Europe/Sofia Europe/Stockholm Europe/Tallinn Europe/Tirane Europe/Tiraspol Europe/Ulyanovsk Europe/Uzhgorod Europe/Vaduz Europe/Vatican Europe/Vienna Europe/Vilnius Europe/Volgograd Europe/Warsaw Europe/Zagreb Europe/Zaporozhye Europe/Zurich GB GB-Eire GMT GMT+0 GMT-0 GMT0 Greenwich HST Hongkong Iceland Indian/Antananarivo Indian/Chagos Indian/Christmas Indian/Cocos Indian/Comoro Indian/Kerguelen Indian/Mahe Indian/Maldives Indian/Mauritius Indian/Mayotte Indian/Reunion Iran Israel Jamaica Japan Kwajalein Libya MET MST MST7MDT Mexico/BajaNorte Mexico/BajaSur Mexico/General NZ NZ-CHAT Navajo PRC PST8PDT Pacific/Apia Pacific/Auckland Pacific/Bougainville Pacific/Chatham Pacific/Chuuk Pacific/Easter Pacific/Efate Pacific/Enderbury Pacific/Fakaofo Pacific/Fiji Pacific/Funafuti Pacific/Galapagos Pacific/Gambier Pacific/Guadalcanal Pacific/Guam Pacific/Honolulu Pacific/Johnston Pacific/Kiritimati Pacific/Kosrae Pacific/Kwajalein Pacific/Majuro Pacific/Marquesas Pacific/Midway Pacific/Nauru Pacific/Niue Pacific/Norfolk Pacific/Noumea Pacific/Pago_Pago Pacific/Palau Pacific/Pitcairn Pacific/Pohnpei Pacific/Ponape Pacific/Port_Moresby Pacific/Rarotonga Pacific/Saipan Pacific/Samoa Pacific/Tahiti Pacific/Tarawa Pacific/Tongatapu Pacific/Truk Pacific/Wake Pacific/Wallis Pacific/Yap Poland Portugal ROC ROK Singapore Turkey UCT US/Alaska US/Aleutian US/Arizona US/Central US/East-Indiana US/Eastern US/Hawaii US/Indiana-Starke US/Michigan US/Mountain US/Pacific US/Pacific-New US/Samoa UTC Universal W-SU WET Zulu]
	Timezone *string `json:"timezone"`

	// traffic shaping adjustment
	// Maximum: 100
	// Minimum: 1
	TrafficShapingAdjustment int64 `json:"trafficShapingAdjustment,omitempty"`

	// ucrm enabled
	// Required: true
	UcrmEnabled *bool `json:"ucrmEnabled"`

	// upgrade grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	UpgradeGracePeriod *int64 `json:"upgradeGracePeriod"`

	// use lets encrypt
	// Required: true
	UseLetsEncrypt *bool `json:"useLetsEncrypt"`
}

// Validate validates this nms settings
func (m *NmsSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllowAutoUpdateUbntFirmwares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowBetaFirmwares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowLoggingToLogentries(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowLoggingToSentry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAutoBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultQosPropagation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceAutoBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceNumberOfBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingAddressMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingIntervalNormal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingIntervalOutage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceTransmissionFrequencies(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceTransmissionProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowLocalScan(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowRemoteScan(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowUnsecuredChannels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAutoConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryHideBlackBox(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoverySnmpCommunity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGoogleMapsAPIKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHomePage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsIsp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLetsEncryptError(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLetsEncryptTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaintenanceWindowFromTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaintenanceWindowToTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMapsProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationForceModeEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationModeEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationPort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestartGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimeFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimezone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrafficShapingAdjustment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUcrmEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpgradeGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUseLetsEncrypt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NmsSettings) validateAllowAutoUpdateUbntFirmwares(formats strfmt.Registry) error {

	if err := validate.Required("allowAutoUpdateUbntFirmwares", "body", m.AllowAutoUpdateUbntFirmwares); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateAllowBetaFirmwares(formats strfmt.Registry) error {

	if err := validate.Required("allowBetaFirmwares", "body", m.AllowBetaFirmwares); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateAllowLoggingToLogentries(formats strfmt.Registry) error {

	if err := validate.Required("allowLoggingToLogentries", "body", m.AllowLoggingToLogentries); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateAllowLoggingToSentry(formats strfmt.Registry) error {

	if err := validate.Required("allowLoggingToSentry", "body", m.AllowLoggingToSentry); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateAutoBackups(formats strfmt.Registry) error {

	if err := validate.Required("autoBackups", "body", m.AutoBackups); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeCountryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["XX","XY","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","CV","KH","CM","CA","KY","CF","TD","CL","CN","CX","CC","CO","KM","CK","CR","CI","HR","CW","CY","CZ","CD","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","SZ","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","HN","HK","HU","IS","IN","ID","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","KR","RS","SC","CG","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","PS","SR","SJ","SE","CH","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UY","UZ","VU","VA","VE","VN","VG","VI","WF","EH","YE","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeCountryPropEnum = append(nmsSettingsTypeCountryPropEnum, v)
	}
}

const (

	// NmsSettingsCountryXX captures enum value "XX"
	NmsSettingsCountryXX string = "XX"

	// NmsSettingsCountryXY captures enum value "XY"
	NmsSettingsCountryXY string = "XY"

	// NmsSettingsCountryAF captures enum value "AF"
	NmsSettingsCountryAF string = "AF"

	// NmsSettingsCountryAX captures enum value "AX"
	NmsSettingsCountryAX string = "AX"

	// NmsSettingsCountryAL captures enum value "AL"
	NmsSettingsCountryAL string = "AL"

	// NmsSettingsCountryDZ captures enum value "DZ"
	NmsSettingsCountryDZ string = "DZ"

	// NmsSettingsCountryAS captures enum value "AS"
	NmsSettingsCountryAS string = "AS"

	// NmsSettingsCountryAD captures enum value "AD"
	NmsSettingsCountryAD string = "AD"

	// NmsSettingsCountryAO captures enum value "AO"
	NmsSettingsCountryAO string = "AO"

	// NmsSettingsCountryAI captures enum value "AI"
	NmsSettingsCountryAI string = "AI"

	// NmsSettingsCountryAQ captures enum value "AQ"
	NmsSettingsCountryAQ string = "AQ"

	// NmsSettingsCountryAG captures enum value "AG"
	NmsSettingsCountryAG string = "AG"

	// NmsSettingsCountryAR captures enum value "AR"
	NmsSettingsCountryAR string = "AR"

	// NmsSettingsCountryAM captures enum value "AM"
	NmsSettingsCountryAM string = "AM"

	// NmsSettingsCountryAW captures enum value "AW"
	NmsSettingsCountryAW string = "AW"

	// NmsSettingsCountryAU captures enum value "AU"
	NmsSettingsCountryAU string = "AU"

	// NmsSettingsCountryAT captures enum value "AT"
	NmsSettingsCountryAT string = "AT"

	// NmsSettingsCountryAZ captures enum value "AZ"
	NmsSettingsCountryAZ string = "AZ"

	// NmsSettingsCountryBS captures enum value "BS"
	NmsSettingsCountryBS string = "BS"

	// NmsSettingsCountryBH captures enum value "BH"
	NmsSettingsCountryBH string = "BH"

	// NmsSettingsCountryBD captures enum value "BD"
	NmsSettingsCountryBD string = "BD"

	// NmsSettingsCountryBB captures enum value "BB"
	NmsSettingsCountryBB string = "BB"

	// NmsSettingsCountryBY captures enum value "BY"
	NmsSettingsCountryBY string = "BY"

	// NmsSettingsCountryBE captures enum value "BE"
	NmsSettingsCountryBE string = "BE"

	// NmsSettingsCountryBZ captures enum value "BZ"
	NmsSettingsCountryBZ string = "BZ"

	// NmsSettingsCountryBJ captures enum value "BJ"
	NmsSettingsCountryBJ string = "BJ"

	// NmsSettingsCountryBM captures enum value "BM"
	NmsSettingsCountryBM string = "BM"

	// NmsSettingsCountryBT captures enum value "BT"
	NmsSettingsCountryBT string = "BT"

	// NmsSettingsCountryBO captures enum value "BO"
	NmsSettingsCountryBO string = "BO"

	// NmsSettingsCountryBQ captures enum value "BQ"
	NmsSettingsCountryBQ string = "BQ"

	// NmsSettingsCountryBA captures enum value "BA"
	NmsSettingsCountryBA string = "BA"

	// NmsSettingsCountryBW captures enum value "BW"
	NmsSettingsCountryBW string = "BW"

	// NmsSettingsCountryBV captures enum value "BV"
	NmsSettingsCountryBV string = "BV"

	// NmsSettingsCountryBR captures enum value "BR"
	NmsSettingsCountryBR string = "BR"

	// NmsSettingsCountryIO captures enum value "IO"
	NmsSettingsCountryIO string = "IO"

	// NmsSettingsCountryBN captures enum value "BN"
	NmsSettingsCountryBN string = "BN"

	// NmsSettingsCountryBG captures enum value "BG"
	NmsSettingsCountryBG string = "BG"

	// NmsSettingsCountryBF captures enum value "BF"
	NmsSettingsCountryBF string = "BF"

	// NmsSettingsCountryBI captures enum value "BI"
	NmsSettingsCountryBI string = "BI"

	// NmsSettingsCountryCV captures enum value "CV"
	NmsSettingsCountryCV string = "CV"

	// NmsSettingsCountryKH captures enum value "KH"
	NmsSettingsCountryKH string = "KH"

	// NmsSettingsCountryCM captures enum value "CM"
	NmsSettingsCountryCM string = "CM"

	// NmsSettingsCountryCA captures enum value "CA"
	NmsSettingsCountryCA string = "CA"

	// NmsSettingsCountryKY captures enum value "KY"
	NmsSettingsCountryKY string = "KY"

	// NmsSettingsCountryCF captures enum value "CF"
	NmsSettingsCountryCF string = "CF"

	// NmsSettingsCountryTD captures enum value "TD"
	NmsSettingsCountryTD string = "TD"

	// NmsSettingsCountryCL captures enum value "CL"
	NmsSettingsCountryCL string = "CL"

	// NmsSettingsCountryCN captures enum value "CN"
	NmsSettingsCountryCN string = "CN"

	// NmsSettingsCountryCX captures enum value "CX"
	NmsSettingsCountryCX string = "CX"

	// NmsSettingsCountryCC captures enum value "CC"
	NmsSettingsCountryCC string = "CC"

	// NmsSettingsCountryCO captures enum value "CO"
	NmsSettingsCountryCO string = "CO"

	// NmsSettingsCountryKM captures enum value "KM"
	NmsSettingsCountryKM string = "KM"

	// NmsSettingsCountryCK captures enum value "CK"
	NmsSettingsCountryCK string = "CK"

	// NmsSettingsCountryCR captures enum value "CR"
	NmsSettingsCountryCR string = "CR"

	// NmsSettingsCountryCI captures enum value "CI"
	NmsSettingsCountryCI string = "CI"

	// NmsSettingsCountryHR captures enum value "HR"
	NmsSettingsCountryHR string = "HR"

	// NmsSettingsCountryCW captures enum value "CW"
	NmsSettingsCountryCW string = "CW"

	// NmsSettingsCountryCY captures enum value "CY"
	NmsSettingsCountryCY string = "CY"

	// NmsSettingsCountryCZ captures enum value "CZ"
	NmsSettingsCountryCZ string = "CZ"

	// NmsSettingsCountryCD captures enum value "CD"
	NmsSettingsCountryCD string = "CD"

	// NmsSettingsCountryDK captures enum value "DK"
	NmsSettingsCountryDK string = "DK"

	// NmsSettingsCountryDJ captures enum value "DJ"
	NmsSettingsCountryDJ string = "DJ"

	// NmsSettingsCountryDM captures enum value "DM"
	NmsSettingsCountryDM string = "DM"

	// NmsSettingsCountryDO captures enum value "DO"
	NmsSettingsCountryDO string = "DO"

	// NmsSettingsCountryEC captures enum value "EC"
	NmsSettingsCountryEC string = "EC"

	// NmsSettingsCountryEG captures enum value "EG"
	NmsSettingsCountryEG string = "EG"

	// NmsSettingsCountrySV captures enum value "SV"
	NmsSettingsCountrySV string = "SV"

	// NmsSettingsCountryGQ captures enum value "GQ"
	NmsSettingsCountryGQ string = "GQ"

	// NmsSettingsCountryER captures enum value "ER"
	NmsSettingsCountryER string = "ER"

	// NmsSettingsCountryEE captures enum value "EE"
	NmsSettingsCountryEE string = "EE"

	// NmsSettingsCountrySZ captures enum value "SZ"
	NmsSettingsCountrySZ string = "SZ"

	// NmsSettingsCountryET captures enum value "ET"
	NmsSettingsCountryET string = "ET"

	// NmsSettingsCountryFK captures enum value "FK"
	NmsSettingsCountryFK string = "FK"

	// NmsSettingsCountryFO captures enum value "FO"
	NmsSettingsCountryFO string = "FO"

	// NmsSettingsCountryFJ captures enum value "FJ"
	NmsSettingsCountryFJ string = "FJ"

	// NmsSettingsCountryFI captures enum value "FI"
	NmsSettingsCountryFI string = "FI"

	// NmsSettingsCountryFR captures enum value "FR"
	NmsSettingsCountryFR string = "FR"

	// NmsSettingsCountryGF captures enum value "GF"
	NmsSettingsCountryGF string = "GF"

	// NmsSettingsCountryPF captures enum value "PF"
	NmsSettingsCountryPF string = "PF"

	// NmsSettingsCountryTF captures enum value "TF"
	NmsSettingsCountryTF string = "TF"

	// NmsSettingsCountryGA captures enum value "GA"
	NmsSettingsCountryGA string = "GA"

	// NmsSettingsCountryGM captures enum value "GM"
	NmsSettingsCountryGM string = "GM"

	// NmsSettingsCountryGE captures enum value "GE"
	NmsSettingsCountryGE string = "GE"

	// NmsSettingsCountryDE captures enum value "DE"
	NmsSettingsCountryDE string = "DE"

	// NmsSettingsCountryGH captures enum value "GH"
	NmsSettingsCountryGH string = "GH"

	// NmsSettingsCountryGI captures enum value "GI"
	NmsSettingsCountryGI string = "GI"

	// NmsSettingsCountryGR captures enum value "GR"
	NmsSettingsCountryGR string = "GR"

	// NmsSettingsCountryGL captures enum value "GL"
	NmsSettingsCountryGL string = "GL"

	// NmsSettingsCountryGD captures enum value "GD"
	NmsSettingsCountryGD string = "GD"

	// NmsSettingsCountryGP captures enum value "GP"
	NmsSettingsCountryGP string = "GP"

	// NmsSettingsCountryGU captures enum value "GU"
	NmsSettingsCountryGU string = "GU"

	// NmsSettingsCountryGT captures enum value "GT"
	NmsSettingsCountryGT string = "GT"

	// NmsSettingsCountryGG captures enum value "GG"
	NmsSettingsCountryGG string = "GG"

	// NmsSettingsCountryGN captures enum value "GN"
	NmsSettingsCountryGN string = "GN"

	// NmsSettingsCountryGW captures enum value "GW"
	NmsSettingsCountryGW string = "GW"

	// NmsSettingsCountryGY captures enum value "GY"
	NmsSettingsCountryGY string = "GY"

	// NmsSettingsCountryHT captures enum value "HT"
	NmsSettingsCountryHT string = "HT"

	// NmsSettingsCountryHM captures enum value "HM"
	NmsSettingsCountryHM string = "HM"

	// NmsSettingsCountryHN captures enum value "HN"
	NmsSettingsCountryHN string = "HN"

	// NmsSettingsCountryHK captures enum value "HK"
	NmsSettingsCountryHK string = "HK"

	// NmsSettingsCountryHU captures enum value "HU"
	NmsSettingsCountryHU string = "HU"

	// NmsSettingsCountryIS captures enum value "IS"
	NmsSettingsCountryIS string = "IS"

	// NmsSettingsCountryIN captures enum value "IN"
	NmsSettingsCountryIN string = "IN"

	// NmsSettingsCountryID captures enum value "ID"
	NmsSettingsCountryID string = "ID"

	// NmsSettingsCountryIQ captures enum value "IQ"
	NmsSettingsCountryIQ string = "IQ"

	// NmsSettingsCountryIE captures enum value "IE"
	NmsSettingsCountryIE string = "IE"

	// NmsSettingsCountryIM captures enum value "IM"
	NmsSettingsCountryIM string = "IM"

	// NmsSettingsCountryIL captures enum value "IL"
	NmsSettingsCountryIL string = "IL"

	// NmsSettingsCountryIT captures enum value "IT"
	NmsSettingsCountryIT string = "IT"

	// NmsSettingsCountryJM captures enum value "JM"
	NmsSettingsCountryJM string = "JM"

	// NmsSettingsCountryJP captures enum value "JP"
	NmsSettingsCountryJP string = "JP"

	// NmsSettingsCountryJE captures enum value "JE"
	NmsSettingsCountryJE string = "JE"

	// NmsSettingsCountryJO captures enum value "JO"
	NmsSettingsCountryJO string = "JO"

	// NmsSettingsCountryKZ captures enum value "KZ"
	NmsSettingsCountryKZ string = "KZ"

	// NmsSettingsCountryKE captures enum value "KE"
	NmsSettingsCountryKE string = "KE"

	// NmsSettingsCountryKI captures enum value "KI"
	NmsSettingsCountryKI string = "KI"

	// NmsSettingsCountryKW captures enum value "KW"
	NmsSettingsCountryKW string = "KW"

	// NmsSettingsCountryKG captures enum value "KG"
	NmsSettingsCountryKG string = "KG"

	// NmsSettingsCountryLA captures enum value "LA"
	NmsSettingsCountryLA string = "LA"

	// NmsSettingsCountryLV captures enum value "LV"
	NmsSettingsCountryLV string = "LV"

	// NmsSettingsCountryLB captures enum value "LB"
	NmsSettingsCountryLB string = "LB"

	// NmsSettingsCountryLS captures enum value "LS"
	NmsSettingsCountryLS string = "LS"

	// NmsSettingsCountryLR captures enum value "LR"
	NmsSettingsCountryLR string = "LR"

	// NmsSettingsCountryLY captures enum value "LY"
	NmsSettingsCountryLY string = "LY"

	// NmsSettingsCountryLI captures enum value "LI"
	NmsSettingsCountryLI string = "LI"

	// NmsSettingsCountryLT captures enum value "LT"
	NmsSettingsCountryLT string = "LT"

	// NmsSettingsCountryLU captures enum value "LU"
	NmsSettingsCountryLU string = "LU"

	// NmsSettingsCountryMO captures enum value "MO"
	NmsSettingsCountryMO string = "MO"

	// NmsSettingsCountryMK captures enum value "MK"
	NmsSettingsCountryMK string = "MK"

	// NmsSettingsCountryMG captures enum value "MG"
	NmsSettingsCountryMG string = "MG"

	// NmsSettingsCountryMW captures enum value "MW"
	NmsSettingsCountryMW string = "MW"

	// NmsSettingsCountryMY captures enum value "MY"
	NmsSettingsCountryMY string = "MY"

	// NmsSettingsCountryMV captures enum value "MV"
	NmsSettingsCountryMV string = "MV"

	// NmsSettingsCountryML captures enum value "ML"
	NmsSettingsCountryML string = "ML"

	// NmsSettingsCountryMT captures enum value "MT"
	NmsSettingsCountryMT string = "MT"

	// NmsSettingsCountryMH captures enum value "MH"
	NmsSettingsCountryMH string = "MH"

	// NmsSettingsCountryMQ captures enum value "MQ"
	NmsSettingsCountryMQ string = "MQ"

	// NmsSettingsCountryMR captures enum value "MR"
	NmsSettingsCountryMR string = "MR"

	// NmsSettingsCountryMU captures enum value "MU"
	NmsSettingsCountryMU string = "MU"

	// NmsSettingsCountryYT captures enum value "YT"
	NmsSettingsCountryYT string = "YT"

	// NmsSettingsCountryMX captures enum value "MX"
	NmsSettingsCountryMX string = "MX"

	// NmsSettingsCountryFM captures enum value "FM"
	NmsSettingsCountryFM string = "FM"

	// NmsSettingsCountryMD captures enum value "MD"
	NmsSettingsCountryMD string = "MD"

	// NmsSettingsCountryMC captures enum value "MC"
	NmsSettingsCountryMC string = "MC"

	// NmsSettingsCountryMN captures enum value "MN"
	NmsSettingsCountryMN string = "MN"

	// NmsSettingsCountryME captures enum value "ME"
	NmsSettingsCountryME string = "ME"

	// NmsSettingsCountryMS captures enum value "MS"
	NmsSettingsCountryMS string = "MS"

	// NmsSettingsCountryMA captures enum value "MA"
	NmsSettingsCountryMA string = "MA"

	// NmsSettingsCountryMZ captures enum value "MZ"
	NmsSettingsCountryMZ string = "MZ"

	// NmsSettingsCountryMM captures enum value "MM"
	NmsSettingsCountryMM string = "MM"

	// NmsSettingsCountryNA captures enum value "NA"
	NmsSettingsCountryNA string = "NA"

	// NmsSettingsCountryNR captures enum value "NR"
	NmsSettingsCountryNR string = "NR"

	// NmsSettingsCountryNP captures enum value "NP"
	NmsSettingsCountryNP string = "NP"

	// NmsSettingsCountryNL captures enum value "NL"
	NmsSettingsCountryNL string = "NL"

	// NmsSettingsCountryNC captures enum value "NC"
	NmsSettingsCountryNC string = "NC"

	// NmsSettingsCountryNZ captures enum value "NZ"
	NmsSettingsCountryNZ string = "NZ"

	// NmsSettingsCountryNI captures enum value "NI"
	NmsSettingsCountryNI string = "NI"

	// NmsSettingsCountryNE captures enum value "NE"
	NmsSettingsCountryNE string = "NE"

	// NmsSettingsCountryNG captures enum value "NG"
	NmsSettingsCountryNG string = "NG"

	// NmsSettingsCountryNU captures enum value "NU"
	NmsSettingsCountryNU string = "NU"

	// NmsSettingsCountryNF captures enum value "NF"
	NmsSettingsCountryNF string = "NF"

	// NmsSettingsCountryMP captures enum value "MP"
	NmsSettingsCountryMP string = "MP"

	// NmsSettingsCountryNO captures enum value "NO"
	NmsSettingsCountryNO string = "NO"

	// NmsSettingsCountryOM captures enum value "OM"
	NmsSettingsCountryOM string = "OM"

	// NmsSettingsCountryPK captures enum value "PK"
	NmsSettingsCountryPK string = "PK"

	// NmsSettingsCountryPW captures enum value "PW"
	NmsSettingsCountryPW string = "PW"

	// NmsSettingsCountryPA captures enum value "PA"
	NmsSettingsCountryPA string = "PA"

	// NmsSettingsCountryPG captures enum value "PG"
	NmsSettingsCountryPG string = "PG"

	// NmsSettingsCountryPY captures enum value "PY"
	NmsSettingsCountryPY string = "PY"

	// NmsSettingsCountryPE captures enum value "PE"
	NmsSettingsCountryPE string = "PE"

	// NmsSettingsCountryPH captures enum value "PH"
	NmsSettingsCountryPH string = "PH"

	// NmsSettingsCountryPN captures enum value "PN"
	NmsSettingsCountryPN string = "PN"

	// NmsSettingsCountryPL captures enum value "PL"
	NmsSettingsCountryPL string = "PL"

	// NmsSettingsCountryPT captures enum value "PT"
	NmsSettingsCountryPT string = "PT"

	// NmsSettingsCountryPR captures enum value "PR"
	NmsSettingsCountryPR string = "PR"

	// NmsSettingsCountryQA captures enum value "QA"
	NmsSettingsCountryQA string = "QA"

	// NmsSettingsCountryKR captures enum value "KR"
	NmsSettingsCountryKR string = "KR"

	// NmsSettingsCountryRS captures enum value "RS"
	NmsSettingsCountryRS string = "RS"

	// NmsSettingsCountrySC captures enum value "SC"
	NmsSettingsCountrySC string = "SC"

	// NmsSettingsCountryCG captures enum value "CG"
	NmsSettingsCountryCG string = "CG"

	// NmsSettingsCountryRE captures enum value "RE"
	NmsSettingsCountryRE string = "RE"

	// NmsSettingsCountryRO captures enum value "RO"
	NmsSettingsCountryRO string = "RO"

	// NmsSettingsCountryRU captures enum value "RU"
	NmsSettingsCountryRU string = "RU"

	// NmsSettingsCountryRW captures enum value "RW"
	NmsSettingsCountryRW string = "RW"

	// NmsSettingsCountryBL captures enum value "BL"
	NmsSettingsCountryBL string = "BL"

	// NmsSettingsCountrySH captures enum value "SH"
	NmsSettingsCountrySH string = "SH"

	// NmsSettingsCountryKN captures enum value "KN"
	NmsSettingsCountryKN string = "KN"

	// NmsSettingsCountryLC captures enum value "LC"
	NmsSettingsCountryLC string = "LC"

	// NmsSettingsCountryMF captures enum value "MF"
	NmsSettingsCountryMF string = "MF"

	// NmsSettingsCountryPM captures enum value "PM"
	NmsSettingsCountryPM string = "PM"

	// NmsSettingsCountryVC captures enum value "VC"
	NmsSettingsCountryVC string = "VC"

	// NmsSettingsCountryWS captures enum value "WS"
	NmsSettingsCountryWS string = "WS"

	// NmsSettingsCountrySM captures enum value "SM"
	NmsSettingsCountrySM string = "SM"

	// NmsSettingsCountryST captures enum value "ST"
	NmsSettingsCountryST string = "ST"

	// NmsSettingsCountrySA captures enum value "SA"
	NmsSettingsCountrySA string = "SA"

	// NmsSettingsCountrySN captures enum value "SN"
	NmsSettingsCountrySN string = "SN"

	// NmsSettingsCountrySL captures enum value "SL"
	NmsSettingsCountrySL string = "SL"

	// NmsSettingsCountrySG captures enum value "SG"
	NmsSettingsCountrySG string = "SG"

	// NmsSettingsCountrySX captures enum value "SX"
	NmsSettingsCountrySX string = "SX"

	// NmsSettingsCountrySK captures enum value "SK"
	NmsSettingsCountrySK string = "SK"

	// NmsSettingsCountrySI captures enum value "SI"
	NmsSettingsCountrySI string = "SI"

	// NmsSettingsCountrySB captures enum value "SB"
	NmsSettingsCountrySB string = "SB"

	// NmsSettingsCountrySO captures enum value "SO"
	NmsSettingsCountrySO string = "SO"

	// NmsSettingsCountryZA captures enum value "ZA"
	NmsSettingsCountryZA string = "ZA"

	// NmsSettingsCountryGS captures enum value "GS"
	NmsSettingsCountryGS string = "GS"

	// NmsSettingsCountrySS captures enum value "SS"
	NmsSettingsCountrySS string = "SS"

	// NmsSettingsCountryES captures enum value "ES"
	NmsSettingsCountryES string = "ES"

	// NmsSettingsCountryLK captures enum value "LK"
	NmsSettingsCountryLK string = "LK"

	// NmsSettingsCountryPS captures enum value "PS"
	NmsSettingsCountryPS string = "PS"

	// NmsSettingsCountrySR captures enum value "SR"
	NmsSettingsCountrySR string = "SR"

	// NmsSettingsCountrySJ captures enum value "SJ"
	NmsSettingsCountrySJ string = "SJ"

	// NmsSettingsCountrySE captures enum value "SE"
	NmsSettingsCountrySE string = "SE"

	// NmsSettingsCountryCH captures enum value "CH"
	NmsSettingsCountryCH string = "CH"

	// NmsSettingsCountryTW captures enum value "TW"
	NmsSettingsCountryTW string = "TW"

	// NmsSettingsCountryTJ captures enum value "TJ"
	NmsSettingsCountryTJ string = "TJ"

	// NmsSettingsCountryTZ captures enum value "TZ"
	NmsSettingsCountryTZ string = "TZ"

	// NmsSettingsCountryTH captures enum value "TH"
	NmsSettingsCountryTH string = "TH"

	// NmsSettingsCountryTL captures enum value "TL"
	NmsSettingsCountryTL string = "TL"

	// NmsSettingsCountryTG captures enum value "TG"
	NmsSettingsCountryTG string = "TG"

	// NmsSettingsCountryTK captures enum value "TK"
	NmsSettingsCountryTK string = "TK"

	// NmsSettingsCountryTO captures enum value "TO"
	NmsSettingsCountryTO string = "TO"

	// NmsSettingsCountryTT captures enum value "TT"
	NmsSettingsCountryTT string = "TT"

	// NmsSettingsCountryTN captures enum value "TN"
	NmsSettingsCountryTN string = "TN"

	// NmsSettingsCountryTR captures enum value "TR"
	NmsSettingsCountryTR string = "TR"

	// NmsSettingsCountryTM captures enum value "TM"
	NmsSettingsCountryTM string = "TM"

	// NmsSettingsCountryTC captures enum value "TC"
	NmsSettingsCountryTC string = "TC"

	// NmsSettingsCountryTV captures enum value "TV"
	NmsSettingsCountryTV string = "TV"

	// NmsSettingsCountryUG captures enum value "UG"
	NmsSettingsCountryUG string = "UG"

	// NmsSettingsCountryUA captures enum value "UA"
	NmsSettingsCountryUA string = "UA"

	// NmsSettingsCountryAE captures enum value "AE"
	NmsSettingsCountryAE string = "AE"

	// NmsSettingsCountryGB captures enum value "GB"
	NmsSettingsCountryGB string = "GB"

	// NmsSettingsCountryUS captures enum value "US"
	NmsSettingsCountryUS string = "US"

	// NmsSettingsCountryUY captures enum value "UY"
	NmsSettingsCountryUY string = "UY"

	// NmsSettingsCountryUZ captures enum value "UZ"
	NmsSettingsCountryUZ string = "UZ"

	// NmsSettingsCountryVU captures enum value "VU"
	NmsSettingsCountryVU string = "VU"

	// NmsSettingsCountryVA captures enum value "VA"
	NmsSettingsCountryVA string = "VA"

	// NmsSettingsCountryVE captures enum value "VE"
	NmsSettingsCountryVE string = "VE"

	// NmsSettingsCountryVN captures enum value "VN"
	NmsSettingsCountryVN string = "VN"

	// NmsSettingsCountryVG captures enum value "VG"
	NmsSettingsCountryVG string = "VG"

	// NmsSettingsCountryVI captures enum value "VI"
	NmsSettingsCountryVI string = "VI"

	// NmsSettingsCountryWF captures enum value "WF"
	NmsSettingsCountryWF string = "WF"

	// NmsSettingsCountryEH captures enum value "EH"
	NmsSettingsCountryEH string = "EH"

	// NmsSettingsCountryYE captures enum value "YE"
	NmsSettingsCountryYE string = "YE"

	// NmsSettingsCountryZM captures enum value "ZM"
	NmsSettingsCountryZM string = "ZM"

	// NmsSettingsCountryZW captures enum value "ZW"
	NmsSettingsCountryZW string = "ZW"
)

// prop value enum
func (m *NmsSettings) validateCountryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	// value enum
	if err := m.validateCountryEnum("country", "body", *m.Country); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeDateFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["D MMM YYYY","Do MMM YYYY","DD MMM YYYY","MMM D, YYYY","MMM Do, YYYY","MMM DD, YYYY","YYYY-MM-DD","DD-MM-YYYY","D.M.YYYY","DD.MM.YYYY","D/M/YYYY","DD/MM/YYYY","M/D/YYYY","MM/DD/YYYY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeDateFormatPropEnum = append(nmsSettingsTypeDateFormatPropEnum, v)
	}
}

const (

	// NmsSettingsDateFormatDMMMYYYY captures enum value "D MMM YYYY"
	NmsSettingsDateFormatDMMMYYYY string = "D MMM YYYY"

	// NmsSettingsDateFormatDoMMMYYYY captures enum value "Do MMM YYYY"
	NmsSettingsDateFormatDoMMMYYYY string = "Do MMM YYYY"

	// NmsSettingsDateFormatDDMMMYYYY captures enum value "DD MMM YYYY"
	NmsSettingsDateFormatDDMMMYYYY string = "DD MMM YYYY"

	// NmsSettingsDateFormatMMMDYYYY captures enum value "MMM D, YYYY"
	NmsSettingsDateFormatMMMDYYYY string = "MMM D, YYYY"

	// NmsSettingsDateFormatMMMDoYYYY captures enum value "MMM Do, YYYY"
	NmsSettingsDateFormatMMMDoYYYY string = "MMM Do, YYYY"

	// NmsSettingsDateFormatMMMDDYYYY captures enum value "MMM DD, YYYY"
	NmsSettingsDateFormatMMMDDYYYY string = "MMM DD, YYYY"

	// NmsSettingsDateFormatYYYYMMDD captures enum value "YYYY-MM-DD"
	NmsSettingsDateFormatYYYYMMDD string = "YYYY-MM-DD"

	// NmsSettingsDateFormatDDMMYYYY captures enum value "DD-MM-YYYY"
	NmsSettingsDateFormatDDMMYYYY string = "DD-MM-YYYY"

	// NmsSettingsDateFormatDMYYYY captures enum value "D.M.YYYY"
	NmsSettingsDateFormatDMYYYY string = "D.M.YYYY"

	// NmsSettingsDateFormatDDMMYYYY captures enum value "DD.MM.YYYY"
	NmsSettingsDateFormatDDMMYYYY string = "DD.MM.YYYY"

	// NmsSettingsDateFormatDMYYYY captures enum value "D/M/YYYY"
	NmsSettingsDateFormatDMYYYY string = "D/M/YYYY"

	// NmsSettingsDateFormatDDMMYYYY captures enum value "DD/MM/YYYY"
	NmsSettingsDateFormatDDMMYYYY string = "DD/MM/YYYY"

	// NmsSettingsDateFormatMDYYYY captures enum value "M/D/YYYY"
	NmsSettingsDateFormatMDYYYY string = "M/D/YYYY"

	// NmsSettingsDateFormatMMDDYYYY captures enum value "MM/DD/YYYY"
	NmsSettingsDateFormatMMDDYYYY string = "MM/DD/YYYY"
)

// prop value enum
func (m *NmsSettings) validateDateFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeDateFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateDateFormat(formats strfmt.Registry) error {

	if err := validate.Required("dateFormat", "body", m.DateFormat); err != nil {
		return err
	}

	// value enum
	if err := m.validateDateFormatEnum("dateFormat", "body", *m.DateFormat); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDefaultGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("defaultGracePeriod", "body", m.DefaultGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("defaultGracePeriod", "body", int64(*m.DefaultGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("defaultGracePeriod", "body", int64(*m.DefaultGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeDefaultQosPropagationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["all","gateway"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeDefaultQosPropagationPropEnum = append(nmsSettingsTypeDefaultQosPropagationPropEnum, v)
	}
}

const (

	// NmsSettingsDefaultQosPropagationAll captures enum value "all"
	NmsSettingsDefaultQosPropagationAll string = "all"

	// NmsSettingsDefaultQosPropagationGateway captures enum value "gateway"
	NmsSettingsDefaultQosPropagationGateway string = "gateway"
)

// prop value enum
func (m *NmsSettings) validateDefaultQosPropagationEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeDefaultQosPropagationPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateDefaultQosPropagation(formats strfmt.Registry) error {

	if err := validate.Required("defaultQosPropagation", "body", m.DefaultQosPropagation); err != nil {
		return err
	}

	// value enum
	if err := m.validateDefaultQosPropagationEnum("defaultQosPropagation", "body", *m.DefaultQosPropagation); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDeviceAutoBackups(formats strfmt.Registry) error {

	if err := validate.Required("deviceAutoBackups", "body", m.DeviceAutoBackups); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDeviceNumberOfBackups(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceNumberOfBackups) { // not required
		return nil
	}

	if err := validate.MinimumInt("deviceNumberOfBackups", "body", int64(m.DeviceNumberOfBackups), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("deviceNumberOfBackups", "body", int64(m.DeviceNumberOfBackups), 100, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDevicePingAddress(formats strfmt.Registry) error {

	if err := validate.Required("devicePingAddress", "body", m.DevicePingAddress); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeDevicePingAddressModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeDevicePingAddressModePropEnum = append(nmsSettingsTypeDevicePingAddressModePropEnum, v)
	}
}

const (

	// NmsSettingsDevicePingAddressModeAuto captures enum value "auto"
	NmsSettingsDevicePingAddressModeAuto string = "auto"

	// NmsSettingsDevicePingAddressModeCustom captures enum value "custom"
	NmsSettingsDevicePingAddressModeCustom string = "custom"
)

// prop value enum
func (m *NmsSettings) validateDevicePingAddressModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeDevicePingAddressModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateDevicePingAddressMode(formats strfmt.Registry) error {

	if err := validate.Required("devicePingAddressMode", "body", m.DevicePingAddressMode); err != nil {
		return err
	}

	// value enum
	if err := m.validateDevicePingAddressModeEnum("devicePingAddressMode", "body", *m.DevicePingAddressMode); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDevicePingIntervalNormal(formats strfmt.Registry) error {

	if err := validate.Required("devicePingIntervalNormal", "body", m.DevicePingIntervalNormal); err != nil {
		return err
	}

	if err := validate.Minimum("devicePingIntervalNormal", "body", float64(*m.DevicePingIntervalNormal), 10000, false); err != nil {
		return err
	}

	if err := validate.Maximum("devicePingIntervalNormal", "body", float64(*m.DevicePingIntervalNormal), 200000, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDevicePingIntervalOutage(formats strfmt.Registry) error {

	if err := validate.Required("devicePingIntervalOutage", "body", m.DevicePingIntervalOutage); err != nil {
		return err
	}

	if err := validate.Minimum("devicePingIntervalOutage", "body", float64(*m.DevicePingIntervalOutage), 2000, false); err != nil {
		return err
	}

	if err := validate.Maximum("devicePingIntervalOutage", "body", float64(*m.DevicePingIntervalOutage), 100000, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDeviceTransmissionFrequencies(formats strfmt.Registry) error {

	if err := validate.Required("deviceTransmissionFrequencies", "body", m.DeviceTransmissionFrequencies); err != nil {
		return err
	}

	if m.DeviceTransmissionFrequencies != nil {
		if err := m.DeviceTransmissionFrequencies.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deviceTransmissionFrequencies")
			}
			return err
		}
	}

	return nil
}

var nmsSettingsTypeDeviceTransmissionProfilePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeDeviceTransmissionProfilePropEnum = append(nmsSettingsTypeDeviceTransmissionProfilePropEnum, v)
	}
}

const (

	// NmsSettingsDeviceTransmissionProfileAuto captures enum value "auto"
	NmsSettingsDeviceTransmissionProfileAuto string = "auto"

	// NmsSettingsDeviceTransmissionProfileCustom captures enum value "custom"
	NmsSettingsDeviceTransmissionProfileCustom string = "custom"
)

// prop value enum
func (m *NmsSettings) validateDeviceTransmissionProfileEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeDeviceTransmissionProfilePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateDeviceTransmissionProfile(formats strfmt.Registry) error {

	if err := validate.Required("deviceTransmissionProfile", "body", m.DeviceTransmissionProfile); err != nil {
		return err
	}

	// value enum
	if err := m.validateDeviceTransmissionProfileEnum("deviceTransmissionProfile", "body", *m.DeviceTransmissionProfile); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoveryAllowLocalScan(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowLocalScan", "body", m.DiscoveryAllowLocalScan); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoveryAllowRemoteScan(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowRemoteScan", "body", m.DiscoveryAllowRemoteScan); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoveryAllowUnsecuredChannels(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowUnsecuredChannels", "body", m.DiscoveryAllowUnsecuredChannels); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoveryAutoConfiguration(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAutoConfiguration", "body", m.DiscoveryAutoConfiguration); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoveryHideBlackBox(formats strfmt.Registry) error {

	if err := validate.Required("discoveryHideBlackBox", "body", m.DiscoveryHideBlackBox); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateDiscoverySnmpCommunity(formats strfmt.Registry) error {

	if err := validate.Required("discoverySnmpCommunity", "body", m.DiscoverySnmpCommunity); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateGoogleMapsAPIKey(formats strfmt.Registry) error {

	if err := validate.Required("googleMapsApiKey", "body", m.GoogleMapsAPIKey); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeHomePagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["unms","ucrm"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeHomePagePropEnum = append(nmsSettingsTypeHomePagePropEnum, v)
	}
}

const (

	// NmsSettingsHomePageUnms captures enum value "unms"
	NmsSettingsHomePageUnms string = "unms"

	// NmsSettingsHomePageUcrm captures enum value "ucrm"
	NmsSettingsHomePageUcrm string = "ucrm"
)

// prop value enum
func (m *NmsSettings) validateHomePageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeHomePagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateHomePage(formats strfmt.Registry) error {

	if err := validate.Required("homePage", "body", m.HomePage); err != nil {
		return err
	}

	// value enum
	if err := m.validateHomePageEnum("homePage", "body", *m.HomePage); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateHostname(formats strfmt.Registry) error {

	if err := validate.Required("hostname", "body", m.Hostname); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateInstanceID(formats strfmt.Registry) error {

	if err := validate.Required("instanceId", "body", m.InstanceID); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateIsIsp(formats strfmt.Registry) error {

	if err := validate.Required("isIsp", "body", m.IsIsp); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateLetsEncryptError(formats strfmt.Registry) error {

	if err := validate.Required("letsEncryptError", "body", m.LetsEncryptError); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateLetsEncryptTimestamp(formats strfmt.Registry) error {

	if err := validate.Required("letsEncryptTimestamp", "body", m.LetsEncryptTimestamp); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMaintenanceWindowFromTime(formats strfmt.Registry) error {

	if swag.IsZero(m.MaintenanceWindowFromTime) { // not required
		return nil
	}

	if err := validate.MinimumInt("maintenanceWindowFromTime", "body", int64(*m.MaintenanceWindowFromTime), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("maintenanceWindowFromTime", "body", int64(*m.MaintenanceWindowFromTime), 24, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMaintenanceWindowToTime(formats strfmt.Registry) error {

	if swag.IsZero(m.MaintenanceWindowToTime) { // not required
		return nil
	}

	if err := validate.MinimumInt("maintenanceWindowToTime", "body", int64(*m.MaintenanceWindowToTime), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("maintenanceWindowToTime", "body", int64(*m.MaintenanceWindowToTime), 24, false); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeMapsProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GoogleMaps","OpenStreetMap"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeMapsProviderPropEnum = append(nmsSettingsTypeMapsProviderPropEnum, v)
	}
}

const (

	// NmsSettingsMapsProviderGoogleMaps captures enum value "GoogleMaps"
	NmsSettingsMapsProviderGoogleMaps string = "GoogleMaps"

	// NmsSettingsMapsProviderOpenStreetMap captures enum value "OpenStreetMap"
	NmsSettingsMapsProviderOpenStreetMap string = "OpenStreetMap"
)

// prop value enum
func (m *NmsSettings) validateMapsProviderEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeMapsProviderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateMapsProvider(formats strfmt.Registry) error {

	if err := validate.Required("mapsProvider", "body", m.MapsProvider); err != nil {
		return err
	}

	// value enum
	if err := m.validateMapsProviderEnum("mapsProvider", "body", *m.MapsProvider); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMigrationForceModeEnabled(formats strfmt.Registry) error {

	if err := validate.Required("migrationForceModeEnabled", "body", m.MigrationForceModeEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMigrationHostname(formats strfmt.Registry) error {

	if err := validate.Required("migrationHostname", "body", m.MigrationHostname); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMigrationModeEnabled(formats strfmt.Registry) error {

	if err := validate.Required("migrationModeEnabled", "body", m.MigrationModeEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateMigrationPort(formats strfmt.Registry) error {

	if err := validate.Required("migrationPort", "body", m.MigrationPort); err != nil {
		return err
	}

	if err := validate.MinimumInt("migrationPort", "body", int64(*m.MigrationPort), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("migrationPort", "body", int64(*m.MigrationPort), 65535, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateRestartGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("restartGracePeriod", "body", m.RestartGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("restartGracePeriod", "body", int64(*m.RestartGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("restartGracePeriod", "body", int64(*m.RestartGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeTimeFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["H:mm","h:mm a"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeTimeFormatPropEnum = append(nmsSettingsTypeTimeFormatPropEnum, v)
	}
}

const (

	// NmsSettingsTimeFormatHMm captures enum value "H:mm"
	NmsSettingsTimeFormatHMm string = "H:mm"

	// NmsSettingsTimeFormatHMma captures enum value "h:mm a"
	NmsSettingsTimeFormatHMma string = "h:mm a"
)

// prop value enum
func (m *NmsSettings) validateTimeFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeTimeFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateTimeFormat(formats strfmt.Registry) error {

	if err := validate.Required("timeFormat", "body", m.TimeFormat); err != nil {
		return err
	}

	// value enum
	if err := m.validateTimeFormatEnum("timeFormat", "body", *m.TimeFormat); err != nil {
		return err
	}

	return nil
}

var nmsSettingsTypeTimezonePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","CET","CST6CDT","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Cuba","EET","EST","EST5EDT","Egypt","Eire","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT-0","GMT0","Greenwich","HST","Hongkong","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","NZ","NZ-CHAT","Navajo","PRC","PST8PDT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","Universal","W-SU","WET","Zulu"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettingsTypeTimezonePropEnum = append(nmsSettingsTypeTimezonePropEnum, v)
	}
}

const (

	// NmsSettingsTimezoneAfricaAbidjan captures enum value "Africa/Abidjan"
	NmsSettingsTimezoneAfricaAbidjan string = "Africa/Abidjan"

	// NmsSettingsTimezoneAfricaAccra captures enum value "Africa/Accra"
	NmsSettingsTimezoneAfricaAccra string = "Africa/Accra"

	// NmsSettingsTimezoneAfricaAddisAbaba captures enum value "Africa/Addis_Ababa"
	NmsSettingsTimezoneAfricaAddisAbaba string = "Africa/Addis_Ababa"

	// NmsSettingsTimezoneAfricaAlgiers captures enum value "Africa/Algiers"
	NmsSettingsTimezoneAfricaAlgiers string = "Africa/Algiers"

	// NmsSettingsTimezoneAfricaAsmara captures enum value "Africa/Asmara"
	NmsSettingsTimezoneAfricaAsmara string = "Africa/Asmara"

	// NmsSettingsTimezoneAfricaAsmera captures enum value "Africa/Asmera"
	NmsSettingsTimezoneAfricaAsmera string = "Africa/Asmera"

	// NmsSettingsTimezoneAfricaBamako captures enum value "Africa/Bamako"
	NmsSettingsTimezoneAfricaBamako string = "Africa/Bamako"

	// NmsSettingsTimezoneAfricaBangui captures enum value "Africa/Bangui"
	NmsSettingsTimezoneAfricaBangui string = "Africa/Bangui"

	// NmsSettingsTimezoneAfricaBanjul captures enum value "Africa/Banjul"
	NmsSettingsTimezoneAfricaBanjul string = "Africa/Banjul"

	// NmsSettingsTimezoneAfricaBissau captures enum value "Africa/Bissau"
	NmsSettingsTimezoneAfricaBissau string = "Africa/Bissau"

	// NmsSettingsTimezoneAfricaBlantyre captures enum value "Africa/Blantyre"
	NmsSettingsTimezoneAfricaBlantyre string = "Africa/Blantyre"

	// NmsSettingsTimezoneAfricaBrazzaville captures enum value "Africa/Brazzaville"
	NmsSettingsTimezoneAfricaBrazzaville string = "Africa/Brazzaville"

	// NmsSettingsTimezoneAfricaBujumbura captures enum value "Africa/Bujumbura"
	NmsSettingsTimezoneAfricaBujumbura string = "Africa/Bujumbura"

	// NmsSettingsTimezoneAfricaCairo captures enum value "Africa/Cairo"
	NmsSettingsTimezoneAfricaCairo string = "Africa/Cairo"

	// NmsSettingsTimezoneAfricaCasablanca captures enum value "Africa/Casablanca"
	NmsSettingsTimezoneAfricaCasablanca string = "Africa/Casablanca"

	// NmsSettingsTimezoneAfricaCeuta captures enum value "Africa/Ceuta"
	NmsSettingsTimezoneAfricaCeuta string = "Africa/Ceuta"

	// NmsSettingsTimezoneAfricaConakry captures enum value "Africa/Conakry"
	NmsSettingsTimezoneAfricaConakry string = "Africa/Conakry"

	// NmsSettingsTimezoneAfricaDakar captures enum value "Africa/Dakar"
	NmsSettingsTimezoneAfricaDakar string = "Africa/Dakar"

	// NmsSettingsTimezoneAfricaDarEsSalaam captures enum value "Africa/Dar_es_Salaam"
	NmsSettingsTimezoneAfricaDarEsSalaam string = "Africa/Dar_es_Salaam"

	// NmsSettingsTimezoneAfricaDjibouti captures enum value "Africa/Djibouti"
	NmsSettingsTimezoneAfricaDjibouti string = "Africa/Djibouti"

	// NmsSettingsTimezoneAfricaDouala captures enum value "Africa/Douala"
	NmsSettingsTimezoneAfricaDouala string = "Africa/Douala"

	// NmsSettingsTimezoneAfricaElAaiun captures enum value "Africa/El_Aaiun"
	NmsSettingsTimezoneAfricaElAaiun string = "Africa/El_Aaiun"

	// NmsSettingsTimezoneAfricaFreetown captures enum value "Africa/Freetown"
	NmsSettingsTimezoneAfricaFreetown string = "Africa/Freetown"

	// NmsSettingsTimezoneAfricaGaborone captures enum value "Africa/Gaborone"
	NmsSettingsTimezoneAfricaGaborone string = "Africa/Gaborone"

	// NmsSettingsTimezoneAfricaHarare captures enum value "Africa/Harare"
	NmsSettingsTimezoneAfricaHarare string = "Africa/Harare"

	// NmsSettingsTimezoneAfricaJohannesburg captures enum value "Africa/Johannesburg"
	NmsSettingsTimezoneAfricaJohannesburg string = "Africa/Johannesburg"

	// NmsSettingsTimezoneAfricaJuba captures enum value "Africa/Juba"
	NmsSettingsTimezoneAfricaJuba string = "Africa/Juba"

	// NmsSettingsTimezoneAfricaKampala captures enum value "Africa/Kampala"
	NmsSettingsTimezoneAfricaKampala string = "Africa/Kampala"

	// NmsSettingsTimezoneAfricaKhartoum captures enum value "Africa/Khartoum"
	NmsSettingsTimezoneAfricaKhartoum string = "Africa/Khartoum"

	// NmsSettingsTimezoneAfricaKigali captures enum value "Africa/Kigali"
	NmsSettingsTimezoneAfricaKigali string = "Africa/Kigali"

	// NmsSettingsTimezoneAfricaKinshasa captures enum value "Africa/Kinshasa"
	NmsSettingsTimezoneAfricaKinshasa string = "Africa/Kinshasa"

	// NmsSettingsTimezoneAfricaLagos captures enum value "Africa/Lagos"
	NmsSettingsTimezoneAfricaLagos string = "Africa/Lagos"

	// NmsSettingsTimezoneAfricaLibreville captures enum value "Africa/Libreville"
	NmsSettingsTimezoneAfricaLibreville string = "Africa/Libreville"

	// NmsSettingsTimezoneAfricaLome captures enum value "Africa/Lome"
	NmsSettingsTimezoneAfricaLome string = "Africa/Lome"

	// NmsSettingsTimezoneAfricaLuanda captures enum value "Africa/Luanda"
	NmsSettingsTimezoneAfricaLuanda string = "Africa/Luanda"

	// NmsSettingsTimezoneAfricaLubumbashi captures enum value "Africa/Lubumbashi"
	NmsSettingsTimezoneAfricaLubumbashi string = "Africa/Lubumbashi"

	// NmsSettingsTimezoneAfricaLusaka captures enum value "Africa/Lusaka"
	NmsSettingsTimezoneAfricaLusaka string = "Africa/Lusaka"

	// NmsSettingsTimezoneAfricaMalabo captures enum value "Africa/Malabo"
	NmsSettingsTimezoneAfricaMalabo string = "Africa/Malabo"

	// NmsSettingsTimezoneAfricaMaputo captures enum value "Africa/Maputo"
	NmsSettingsTimezoneAfricaMaputo string = "Africa/Maputo"

	// NmsSettingsTimezoneAfricaMaseru captures enum value "Africa/Maseru"
	NmsSettingsTimezoneAfricaMaseru string = "Africa/Maseru"

	// NmsSettingsTimezoneAfricaMbabane captures enum value "Africa/Mbabane"
	NmsSettingsTimezoneAfricaMbabane string = "Africa/Mbabane"

	// NmsSettingsTimezoneAfricaMogadishu captures enum value "Africa/Mogadishu"
	NmsSettingsTimezoneAfricaMogadishu string = "Africa/Mogadishu"

	// NmsSettingsTimezoneAfricaMonrovia captures enum value "Africa/Monrovia"
	NmsSettingsTimezoneAfricaMonrovia string = "Africa/Monrovia"

	// NmsSettingsTimezoneAfricaNairobi captures enum value "Africa/Nairobi"
	NmsSettingsTimezoneAfricaNairobi string = "Africa/Nairobi"

	// NmsSettingsTimezoneAfricaNdjamena captures enum value "Africa/Ndjamena"
	NmsSettingsTimezoneAfricaNdjamena string = "Africa/Ndjamena"

	// NmsSettingsTimezoneAfricaNiamey captures enum value "Africa/Niamey"
	NmsSettingsTimezoneAfricaNiamey string = "Africa/Niamey"

	// NmsSettingsTimezoneAfricaNouakchott captures enum value "Africa/Nouakchott"
	NmsSettingsTimezoneAfricaNouakchott string = "Africa/Nouakchott"

	// NmsSettingsTimezoneAfricaOuagadougou captures enum value "Africa/Ouagadougou"
	NmsSettingsTimezoneAfricaOuagadougou string = "Africa/Ouagadougou"

	// NmsSettingsTimezoneAfricaPortoNovo captures enum value "Africa/Porto-Novo"
	NmsSettingsTimezoneAfricaPortoNovo string = "Africa/Porto-Novo"

	// NmsSettingsTimezoneAfricaSaoTome captures enum value "Africa/Sao_Tome"
	NmsSettingsTimezoneAfricaSaoTome string = "Africa/Sao_Tome"

	// NmsSettingsTimezoneAfricaTimbuktu captures enum value "Africa/Timbuktu"
	NmsSettingsTimezoneAfricaTimbuktu string = "Africa/Timbuktu"

	// NmsSettingsTimezoneAfricaTripoli captures enum value "Africa/Tripoli"
	NmsSettingsTimezoneAfricaTripoli string = "Africa/Tripoli"

	// NmsSettingsTimezoneAfricaTunis captures enum value "Africa/Tunis"
	NmsSettingsTimezoneAfricaTunis string = "Africa/Tunis"

	// NmsSettingsTimezoneAfricaWindhoek captures enum value "Africa/Windhoek"
	NmsSettingsTimezoneAfricaWindhoek string = "Africa/Windhoek"

	// NmsSettingsTimezoneAmericaAdak captures enum value "America/Adak"
	NmsSettingsTimezoneAmericaAdak string = "America/Adak"

	// NmsSettingsTimezoneAmericaAnchorage captures enum value "America/Anchorage"
	NmsSettingsTimezoneAmericaAnchorage string = "America/Anchorage"

	// NmsSettingsTimezoneAmericaAnguilla captures enum value "America/Anguilla"
	NmsSettingsTimezoneAmericaAnguilla string = "America/Anguilla"

	// NmsSettingsTimezoneAmericaAntigua captures enum value "America/Antigua"
	NmsSettingsTimezoneAmericaAntigua string = "America/Antigua"

	// NmsSettingsTimezoneAmericaAraguaina captures enum value "America/Araguaina"
	NmsSettingsTimezoneAmericaAraguaina string = "America/Araguaina"

	// NmsSettingsTimezoneAmericaArgentinaBuenosAires captures enum value "America/Argentina/Buenos_Aires"
	NmsSettingsTimezoneAmericaArgentinaBuenosAires string = "America/Argentina/Buenos_Aires"

	// NmsSettingsTimezoneAmericaArgentinaCatamarca captures enum value "America/Argentina/Catamarca"
	NmsSettingsTimezoneAmericaArgentinaCatamarca string = "America/Argentina/Catamarca"

	// NmsSettingsTimezoneAmericaArgentinaComodRivadavia captures enum value "America/Argentina/ComodRivadavia"
	NmsSettingsTimezoneAmericaArgentinaComodRivadavia string = "America/Argentina/ComodRivadavia"

	// NmsSettingsTimezoneAmericaArgentinaCordoba captures enum value "America/Argentina/Cordoba"
	NmsSettingsTimezoneAmericaArgentinaCordoba string = "America/Argentina/Cordoba"

	// NmsSettingsTimezoneAmericaArgentinaJujuy captures enum value "America/Argentina/Jujuy"
	NmsSettingsTimezoneAmericaArgentinaJujuy string = "America/Argentina/Jujuy"

	// NmsSettingsTimezoneAmericaArgentinaLaRioja captures enum value "America/Argentina/La_Rioja"
	NmsSettingsTimezoneAmericaArgentinaLaRioja string = "America/Argentina/La_Rioja"

	// NmsSettingsTimezoneAmericaArgentinaMendoza captures enum value "America/Argentina/Mendoza"
	NmsSettingsTimezoneAmericaArgentinaMendoza string = "America/Argentina/Mendoza"

	// NmsSettingsTimezoneAmericaArgentinaRioGallegos captures enum value "America/Argentina/Rio_Gallegos"
	NmsSettingsTimezoneAmericaArgentinaRioGallegos string = "America/Argentina/Rio_Gallegos"

	// NmsSettingsTimezoneAmericaArgentinaSalta captures enum value "America/Argentina/Salta"
	NmsSettingsTimezoneAmericaArgentinaSalta string = "America/Argentina/Salta"

	// NmsSettingsTimezoneAmericaArgentinaSanJuan captures enum value "America/Argentina/San_Juan"
	NmsSettingsTimezoneAmericaArgentinaSanJuan string = "America/Argentina/San_Juan"

	// NmsSettingsTimezoneAmericaArgentinaSanLuis captures enum value "America/Argentina/San_Luis"
	NmsSettingsTimezoneAmericaArgentinaSanLuis string = "America/Argentina/San_Luis"

	// NmsSettingsTimezoneAmericaArgentinaTucuman captures enum value "America/Argentina/Tucuman"
	NmsSettingsTimezoneAmericaArgentinaTucuman string = "America/Argentina/Tucuman"

	// NmsSettingsTimezoneAmericaArgentinaUshuaia captures enum value "America/Argentina/Ushuaia"
	NmsSettingsTimezoneAmericaArgentinaUshuaia string = "America/Argentina/Ushuaia"

	// NmsSettingsTimezoneAmericaAruba captures enum value "America/Aruba"
	NmsSettingsTimezoneAmericaAruba string = "America/Aruba"

	// NmsSettingsTimezoneAmericaAsuncion captures enum value "America/Asuncion"
	NmsSettingsTimezoneAmericaAsuncion string = "America/Asuncion"

	// NmsSettingsTimezoneAmericaAtikokan captures enum value "America/Atikokan"
	NmsSettingsTimezoneAmericaAtikokan string = "America/Atikokan"

	// NmsSettingsTimezoneAmericaAtka captures enum value "America/Atka"
	NmsSettingsTimezoneAmericaAtka string = "America/Atka"

	// NmsSettingsTimezoneAmericaBahia captures enum value "America/Bahia"
	NmsSettingsTimezoneAmericaBahia string = "America/Bahia"

	// NmsSettingsTimezoneAmericaBahiaBanderas captures enum value "America/Bahia_Banderas"
	NmsSettingsTimezoneAmericaBahiaBanderas string = "America/Bahia_Banderas"

	// NmsSettingsTimezoneAmericaBarbados captures enum value "America/Barbados"
	NmsSettingsTimezoneAmericaBarbados string = "America/Barbados"

	// NmsSettingsTimezoneAmericaBelem captures enum value "America/Belem"
	NmsSettingsTimezoneAmericaBelem string = "America/Belem"

	// NmsSettingsTimezoneAmericaBelize captures enum value "America/Belize"
	NmsSettingsTimezoneAmericaBelize string = "America/Belize"

	// NmsSettingsTimezoneAmericaBlancSablon captures enum value "America/Blanc-Sablon"
	NmsSettingsTimezoneAmericaBlancSablon string = "America/Blanc-Sablon"

	// NmsSettingsTimezoneAmericaBoaVista captures enum value "America/Boa_Vista"
	NmsSettingsTimezoneAmericaBoaVista string = "America/Boa_Vista"

	// NmsSettingsTimezoneAmericaBogota captures enum value "America/Bogota"
	NmsSettingsTimezoneAmericaBogota string = "America/Bogota"

	// NmsSettingsTimezoneAmericaBoise captures enum value "America/Boise"
	NmsSettingsTimezoneAmericaBoise string = "America/Boise"

	// NmsSettingsTimezoneAmericaBuenosAires captures enum value "America/Buenos_Aires"
	NmsSettingsTimezoneAmericaBuenosAires string = "America/Buenos_Aires"

	// NmsSettingsTimezoneAmericaCambridgeBay captures enum value "America/Cambridge_Bay"
	NmsSettingsTimezoneAmericaCambridgeBay string = "America/Cambridge_Bay"

	// NmsSettingsTimezoneAmericaCampoGrande captures enum value "America/Campo_Grande"
	NmsSettingsTimezoneAmericaCampoGrande string = "America/Campo_Grande"

	// NmsSettingsTimezoneAmericaCancun captures enum value "America/Cancun"
	NmsSettingsTimezoneAmericaCancun string = "America/Cancun"

	// NmsSettingsTimezoneAmericaCaracas captures enum value "America/Caracas"
	NmsSettingsTimezoneAmericaCaracas string = "America/Caracas"

	// NmsSettingsTimezoneAmericaCatamarca captures enum value "America/Catamarca"
	NmsSettingsTimezoneAmericaCatamarca string = "America/Catamarca"

	// NmsSettingsTimezoneAmericaCayenne captures enum value "America/Cayenne"
	NmsSettingsTimezoneAmericaCayenne string = "America/Cayenne"

	// NmsSettingsTimezoneAmericaCayman captures enum value "America/Cayman"
	NmsSettingsTimezoneAmericaCayman string = "America/Cayman"

	// NmsSettingsTimezoneAmericaChicago captures enum value "America/Chicago"
	NmsSettingsTimezoneAmericaChicago string = "America/Chicago"

	// NmsSettingsTimezoneAmericaChihuahua captures enum value "America/Chihuahua"
	NmsSettingsTimezoneAmericaChihuahua string = "America/Chihuahua"

	// NmsSettingsTimezoneAmericaCoralHarbour captures enum value "America/Coral_Harbour"
	NmsSettingsTimezoneAmericaCoralHarbour string = "America/Coral_Harbour"

	// NmsSettingsTimezoneAmericaCordoba captures enum value "America/Cordoba"
	NmsSettingsTimezoneAmericaCordoba string = "America/Cordoba"

	// NmsSettingsTimezoneAmericaCostaRica captures enum value "America/Costa_Rica"
	NmsSettingsTimezoneAmericaCostaRica string = "America/Costa_Rica"

	// NmsSettingsTimezoneAmericaCreston captures enum value "America/Creston"
	NmsSettingsTimezoneAmericaCreston string = "America/Creston"

	// NmsSettingsTimezoneAmericaCuiaba captures enum value "America/Cuiaba"
	NmsSettingsTimezoneAmericaCuiaba string = "America/Cuiaba"

	// NmsSettingsTimezoneAmericaCuracao captures enum value "America/Curacao"
	NmsSettingsTimezoneAmericaCuracao string = "America/Curacao"

	// NmsSettingsTimezoneAmericaDanmarkshavn captures enum value "America/Danmarkshavn"
	NmsSettingsTimezoneAmericaDanmarkshavn string = "America/Danmarkshavn"

	// NmsSettingsTimezoneAmericaDawson captures enum value "America/Dawson"
	NmsSettingsTimezoneAmericaDawson string = "America/Dawson"

	// NmsSettingsTimezoneAmericaDawsonCreek captures enum value "America/Dawson_Creek"
	NmsSettingsTimezoneAmericaDawsonCreek string = "America/Dawson_Creek"

	// NmsSettingsTimezoneAmericaDenver captures enum value "America/Denver"
	NmsSettingsTimezoneAmericaDenver string = "America/Denver"

	// NmsSettingsTimezoneAmericaDetroit captures enum value "America/Detroit"
	NmsSettingsTimezoneAmericaDetroit string = "America/Detroit"

	// NmsSettingsTimezoneAmericaDominica captures enum value "America/Dominica"
	NmsSettingsTimezoneAmericaDominica string = "America/Dominica"

	// NmsSettingsTimezoneAmericaEdmonton captures enum value "America/Edmonton"
	NmsSettingsTimezoneAmericaEdmonton string = "America/Edmonton"

	// NmsSettingsTimezoneAmericaEirunepe captures enum value "America/Eirunepe"
	NmsSettingsTimezoneAmericaEirunepe string = "America/Eirunepe"

	// NmsSettingsTimezoneAmericaElSalvador captures enum value "America/El_Salvador"
	NmsSettingsTimezoneAmericaElSalvador string = "America/El_Salvador"

	// NmsSettingsTimezoneAmericaEnsenada captures enum value "America/Ensenada"
	NmsSettingsTimezoneAmericaEnsenada string = "America/Ensenada"

	// NmsSettingsTimezoneAmericaFortNelson captures enum value "America/Fort_Nelson"
	NmsSettingsTimezoneAmericaFortNelson string = "America/Fort_Nelson"

	// NmsSettingsTimezoneAmericaFortWayne captures enum value "America/Fort_Wayne"
	NmsSettingsTimezoneAmericaFortWayne string = "America/Fort_Wayne"

	// NmsSettingsTimezoneAmericaFortaleza captures enum value "America/Fortaleza"
	NmsSettingsTimezoneAmericaFortaleza string = "America/Fortaleza"

	// NmsSettingsTimezoneAmericaGlaceBay captures enum value "America/Glace_Bay"
	NmsSettingsTimezoneAmericaGlaceBay string = "America/Glace_Bay"

	// NmsSettingsTimezoneAmericaGodthab captures enum value "America/Godthab"
	NmsSettingsTimezoneAmericaGodthab string = "America/Godthab"

	// NmsSettingsTimezoneAmericaGooseBay captures enum value "America/Goose_Bay"
	NmsSettingsTimezoneAmericaGooseBay string = "America/Goose_Bay"

	// NmsSettingsTimezoneAmericaGrandTurk captures enum value "America/Grand_Turk"
	NmsSettingsTimezoneAmericaGrandTurk string = "America/Grand_Turk"

	// NmsSettingsTimezoneAmericaGrenada captures enum value "America/Grenada"
	NmsSettingsTimezoneAmericaGrenada string = "America/Grenada"

	// NmsSettingsTimezoneAmericaGuadeloupe captures enum value "America/Guadeloupe"
	NmsSettingsTimezoneAmericaGuadeloupe string = "America/Guadeloupe"

	// NmsSettingsTimezoneAmericaGuatemala captures enum value "America/Guatemala"
	NmsSettingsTimezoneAmericaGuatemala string = "America/Guatemala"

	// NmsSettingsTimezoneAmericaGuayaquil captures enum value "America/Guayaquil"
	NmsSettingsTimezoneAmericaGuayaquil string = "America/Guayaquil"

	// NmsSettingsTimezoneAmericaGuyana captures enum value "America/Guyana"
	NmsSettingsTimezoneAmericaGuyana string = "America/Guyana"

	// NmsSettingsTimezoneAmericaHalifax captures enum value "America/Halifax"
	NmsSettingsTimezoneAmericaHalifax string = "America/Halifax"

	// NmsSettingsTimezoneAmericaHavana captures enum value "America/Havana"
	NmsSettingsTimezoneAmericaHavana string = "America/Havana"

	// NmsSettingsTimezoneAmericaHermosillo captures enum value "America/Hermosillo"
	NmsSettingsTimezoneAmericaHermosillo string = "America/Hermosillo"

	// NmsSettingsTimezoneAmericaIndianaIndianapolis captures enum value "America/Indiana/Indianapolis"
	NmsSettingsTimezoneAmericaIndianaIndianapolis string = "America/Indiana/Indianapolis"

	// NmsSettingsTimezoneAmericaIndianaKnox captures enum value "America/Indiana/Knox"
	NmsSettingsTimezoneAmericaIndianaKnox string = "America/Indiana/Knox"

	// NmsSettingsTimezoneAmericaIndianaMarengo captures enum value "America/Indiana/Marengo"
	NmsSettingsTimezoneAmericaIndianaMarengo string = "America/Indiana/Marengo"

	// NmsSettingsTimezoneAmericaIndianaPetersburg captures enum value "America/Indiana/Petersburg"
	NmsSettingsTimezoneAmericaIndianaPetersburg string = "America/Indiana/Petersburg"

	// NmsSettingsTimezoneAmericaIndianaTellCity captures enum value "America/Indiana/Tell_City"
	NmsSettingsTimezoneAmericaIndianaTellCity string = "America/Indiana/Tell_City"

	// NmsSettingsTimezoneAmericaIndianaVevay captures enum value "America/Indiana/Vevay"
	NmsSettingsTimezoneAmericaIndianaVevay string = "America/Indiana/Vevay"

	// NmsSettingsTimezoneAmericaIndianaVincennes captures enum value "America/Indiana/Vincennes"
	NmsSettingsTimezoneAmericaIndianaVincennes string = "America/Indiana/Vincennes"

	// NmsSettingsTimezoneAmericaIndianaWinamac captures enum value "America/Indiana/Winamac"
	NmsSettingsTimezoneAmericaIndianaWinamac string = "America/Indiana/Winamac"

	// NmsSettingsTimezoneAmericaIndianapolis captures enum value "America/Indianapolis"
	NmsSettingsTimezoneAmericaIndianapolis string = "America/Indianapolis"

	// NmsSettingsTimezoneAmericaInuvik captures enum value "America/Inuvik"
	NmsSettingsTimezoneAmericaInuvik string = "America/Inuvik"

	// NmsSettingsTimezoneAmericaIqaluit captures enum value "America/Iqaluit"
	NmsSettingsTimezoneAmericaIqaluit string = "America/Iqaluit"

	// NmsSettingsTimezoneAmericaJamaica captures enum value "America/Jamaica"
	NmsSettingsTimezoneAmericaJamaica string = "America/Jamaica"

	// NmsSettingsTimezoneAmericaJujuy captures enum value "America/Jujuy"
	NmsSettingsTimezoneAmericaJujuy string = "America/Jujuy"

	// NmsSettingsTimezoneAmericaJuneau captures enum value "America/Juneau"
	NmsSettingsTimezoneAmericaJuneau string = "America/Juneau"

	// NmsSettingsTimezoneAmericaKentuckyLouisville captures enum value "America/Kentucky/Louisville"
	NmsSettingsTimezoneAmericaKentuckyLouisville string = "America/Kentucky/Louisville"

	// NmsSettingsTimezoneAmericaKentuckyMonticello captures enum value "America/Kentucky/Monticello"
	NmsSettingsTimezoneAmericaKentuckyMonticello string = "America/Kentucky/Monticello"

	// NmsSettingsTimezoneAmericaKnoxIN captures enum value "America/Knox_IN"
	NmsSettingsTimezoneAmericaKnoxIN string = "America/Knox_IN"

	// NmsSettingsTimezoneAmericaKralendijk captures enum value "America/Kralendijk"
	NmsSettingsTimezoneAmericaKralendijk string = "America/Kralendijk"

	// NmsSettingsTimezoneAmericaLaPaz captures enum value "America/La_Paz"
	NmsSettingsTimezoneAmericaLaPaz string = "America/La_Paz"

	// NmsSettingsTimezoneAmericaLima captures enum value "America/Lima"
	NmsSettingsTimezoneAmericaLima string = "America/Lima"

	// NmsSettingsTimezoneAmericaLosAngeles captures enum value "America/Los_Angeles"
	NmsSettingsTimezoneAmericaLosAngeles string = "America/Los_Angeles"

	// NmsSettingsTimezoneAmericaLouisville captures enum value "America/Louisville"
	NmsSettingsTimezoneAmericaLouisville string = "America/Louisville"

	// NmsSettingsTimezoneAmericaLowerPrinces captures enum value "America/Lower_Princes"
	NmsSettingsTimezoneAmericaLowerPrinces string = "America/Lower_Princes"

	// NmsSettingsTimezoneAmericaMaceio captures enum value "America/Maceio"
	NmsSettingsTimezoneAmericaMaceio string = "America/Maceio"

	// NmsSettingsTimezoneAmericaManagua captures enum value "America/Managua"
	NmsSettingsTimezoneAmericaManagua string = "America/Managua"

	// NmsSettingsTimezoneAmericaManaus captures enum value "America/Manaus"
	NmsSettingsTimezoneAmericaManaus string = "America/Manaus"

	// NmsSettingsTimezoneAmericaMarigot captures enum value "America/Marigot"
	NmsSettingsTimezoneAmericaMarigot string = "America/Marigot"

	// NmsSettingsTimezoneAmericaMartinique captures enum value "America/Martinique"
	NmsSettingsTimezoneAmericaMartinique string = "America/Martinique"

	// NmsSettingsTimezoneAmericaMatamoros captures enum value "America/Matamoros"
	NmsSettingsTimezoneAmericaMatamoros string = "America/Matamoros"

	// NmsSettingsTimezoneAmericaMazatlan captures enum value "America/Mazatlan"
	NmsSettingsTimezoneAmericaMazatlan string = "America/Mazatlan"

	// NmsSettingsTimezoneAmericaMendoza captures enum value "America/Mendoza"
	NmsSettingsTimezoneAmericaMendoza string = "America/Mendoza"

	// NmsSettingsTimezoneAmericaMenominee captures enum value "America/Menominee"
	NmsSettingsTimezoneAmericaMenominee string = "America/Menominee"

	// NmsSettingsTimezoneAmericaMerida captures enum value "America/Merida"
	NmsSettingsTimezoneAmericaMerida string = "America/Merida"

	// NmsSettingsTimezoneAmericaMetlakatla captures enum value "America/Metlakatla"
	NmsSettingsTimezoneAmericaMetlakatla string = "America/Metlakatla"

	// NmsSettingsTimezoneAmericaMexicoCity captures enum value "America/Mexico_City"
	NmsSettingsTimezoneAmericaMexicoCity string = "America/Mexico_City"

	// NmsSettingsTimezoneAmericaMiquelon captures enum value "America/Miquelon"
	NmsSettingsTimezoneAmericaMiquelon string = "America/Miquelon"

	// NmsSettingsTimezoneAmericaMoncton captures enum value "America/Moncton"
	NmsSettingsTimezoneAmericaMoncton string = "America/Moncton"

	// NmsSettingsTimezoneAmericaMonterrey captures enum value "America/Monterrey"
	NmsSettingsTimezoneAmericaMonterrey string = "America/Monterrey"

	// NmsSettingsTimezoneAmericaMontevideo captures enum value "America/Montevideo"
	NmsSettingsTimezoneAmericaMontevideo string = "America/Montevideo"

	// NmsSettingsTimezoneAmericaMontreal captures enum value "America/Montreal"
	NmsSettingsTimezoneAmericaMontreal string = "America/Montreal"

	// NmsSettingsTimezoneAmericaMontserrat captures enum value "America/Montserrat"
	NmsSettingsTimezoneAmericaMontserrat string = "America/Montserrat"

	// NmsSettingsTimezoneAmericaNassau captures enum value "America/Nassau"
	NmsSettingsTimezoneAmericaNassau string = "America/Nassau"

	// NmsSettingsTimezoneAmericaNewYork captures enum value "America/New_York"
	NmsSettingsTimezoneAmericaNewYork string = "America/New_York"

	// NmsSettingsTimezoneAmericaNipigon captures enum value "America/Nipigon"
	NmsSettingsTimezoneAmericaNipigon string = "America/Nipigon"

	// NmsSettingsTimezoneAmericaNome captures enum value "America/Nome"
	NmsSettingsTimezoneAmericaNome string = "America/Nome"

	// NmsSettingsTimezoneAmericaNoronha captures enum value "America/Noronha"
	NmsSettingsTimezoneAmericaNoronha string = "America/Noronha"

	// NmsSettingsTimezoneAmericaNorthDakotaBeulah captures enum value "America/North_Dakota/Beulah"
	NmsSettingsTimezoneAmericaNorthDakotaBeulah string = "America/North_Dakota/Beulah"

	// NmsSettingsTimezoneAmericaNorthDakotaCenter captures enum value "America/North_Dakota/Center"
	NmsSettingsTimezoneAmericaNorthDakotaCenter string = "America/North_Dakota/Center"

	// NmsSettingsTimezoneAmericaNorthDakotaNewSalem captures enum value "America/North_Dakota/New_Salem"
	NmsSettingsTimezoneAmericaNorthDakotaNewSalem string = "America/North_Dakota/New_Salem"

	// NmsSettingsTimezoneAmericaOjinaga captures enum value "America/Ojinaga"
	NmsSettingsTimezoneAmericaOjinaga string = "America/Ojinaga"

	// NmsSettingsTimezoneAmericaPanama captures enum value "America/Panama"
	NmsSettingsTimezoneAmericaPanama string = "America/Panama"

	// NmsSettingsTimezoneAmericaPangnirtung captures enum value "America/Pangnirtung"
	NmsSettingsTimezoneAmericaPangnirtung string = "America/Pangnirtung"

	// NmsSettingsTimezoneAmericaParamaribo captures enum value "America/Paramaribo"
	NmsSettingsTimezoneAmericaParamaribo string = "America/Paramaribo"

	// NmsSettingsTimezoneAmericaPhoenix captures enum value "America/Phoenix"
	NmsSettingsTimezoneAmericaPhoenix string = "America/Phoenix"

	// NmsSettingsTimezoneAmericaPortAuPrince captures enum value "America/Port-au-Prince"
	NmsSettingsTimezoneAmericaPortAuPrince string = "America/Port-au-Prince"

	// NmsSettingsTimezoneAmericaPortOfSpain captures enum value "America/Port_of_Spain"
	NmsSettingsTimezoneAmericaPortOfSpain string = "America/Port_of_Spain"

	// NmsSettingsTimezoneAmericaPortoAcre captures enum value "America/Porto_Acre"
	NmsSettingsTimezoneAmericaPortoAcre string = "America/Porto_Acre"

	// NmsSettingsTimezoneAmericaPortoVelho captures enum value "America/Porto_Velho"
	NmsSettingsTimezoneAmericaPortoVelho string = "America/Porto_Velho"

	// NmsSettingsTimezoneAmericaPuertoRico captures enum value "America/Puerto_Rico"
	NmsSettingsTimezoneAmericaPuertoRico string = "America/Puerto_Rico"

	// NmsSettingsTimezoneAmericaPuntaArenas captures enum value "America/Punta_Arenas"
	NmsSettingsTimezoneAmericaPuntaArenas string = "America/Punta_Arenas"

	// NmsSettingsTimezoneAmericaRainyRiver captures enum value "America/Rainy_River"
	NmsSettingsTimezoneAmericaRainyRiver string = "America/Rainy_River"

	// NmsSettingsTimezoneAmericaRankinInlet captures enum value "America/Rankin_Inlet"
	NmsSettingsTimezoneAmericaRankinInlet string = "America/Rankin_Inlet"

	// NmsSettingsTimezoneAmericaRecife captures enum value "America/Recife"
	NmsSettingsTimezoneAmericaRecife string = "America/Recife"

	// NmsSettingsTimezoneAmericaRegina captures enum value "America/Regina"
	NmsSettingsTimezoneAmericaRegina string = "America/Regina"

	// NmsSettingsTimezoneAmericaResolute captures enum value "America/Resolute"
	NmsSettingsTimezoneAmericaResolute string = "America/Resolute"

	// NmsSettingsTimezoneAmericaRioBranco captures enum value "America/Rio_Branco"
	NmsSettingsTimezoneAmericaRioBranco string = "America/Rio_Branco"

	// NmsSettingsTimezoneAmericaRosario captures enum value "America/Rosario"
	NmsSettingsTimezoneAmericaRosario string = "America/Rosario"

	// NmsSettingsTimezoneAmericaSantaIsabel captures enum value "America/Santa_Isabel"
	NmsSettingsTimezoneAmericaSantaIsabel string = "America/Santa_Isabel"

	// NmsSettingsTimezoneAmericaSantarem captures enum value "America/Santarem"
	NmsSettingsTimezoneAmericaSantarem string = "America/Santarem"

	// NmsSettingsTimezoneAmericaSantiago captures enum value "America/Santiago"
	NmsSettingsTimezoneAmericaSantiago string = "America/Santiago"

	// NmsSettingsTimezoneAmericaSantoDomingo captures enum value "America/Santo_Domingo"
	NmsSettingsTimezoneAmericaSantoDomingo string = "America/Santo_Domingo"

	// NmsSettingsTimezoneAmericaSaoPaulo captures enum value "America/Sao_Paulo"
	NmsSettingsTimezoneAmericaSaoPaulo string = "America/Sao_Paulo"

	// NmsSettingsTimezoneAmericaScoresbysund captures enum value "America/Scoresbysund"
	NmsSettingsTimezoneAmericaScoresbysund string = "America/Scoresbysund"

	// NmsSettingsTimezoneAmericaShiprock captures enum value "America/Shiprock"
	NmsSettingsTimezoneAmericaShiprock string = "America/Shiprock"

	// NmsSettingsTimezoneAmericaSitka captures enum value "America/Sitka"
	NmsSettingsTimezoneAmericaSitka string = "America/Sitka"

	// NmsSettingsTimezoneAmericaStBarthelemy captures enum value "America/St_Barthelemy"
	NmsSettingsTimezoneAmericaStBarthelemy string = "America/St_Barthelemy"

	// NmsSettingsTimezoneAmericaStJohns captures enum value "America/St_Johns"
	NmsSettingsTimezoneAmericaStJohns string = "America/St_Johns"

	// NmsSettingsTimezoneAmericaStKitts captures enum value "America/St_Kitts"
	NmsSettingsTimezoneAmericaStKitts string = "America/St_Kitts"

	// NmsSettingsTimezoneAmericaStLucia captures enum value "America/St_Lucia"
	NmsSettingsTimezoneAmericaStLucia string = "America/St_Lucia"

	// NmsSettingsTimezoneAmericaStThomas captures enum value "America/St_Thomas"
	NmsSettingsTimezoneAmericaStThomas string = "America/St_Thomas"

	// NmsSettingsTimezoneAmericaStVincent captures enum value "America/St_Vincent"
	NmsSettingsTimezoneAmericaStVincent string = "America/St_Vincent"

	// NmsSettingsTimezoneAmericaSwiftCurrent captures enum value "America/Swift_Current"
	NmsSettingsTimezoneAmericaSwiftCurrent string = "America/Swift_Current"

	// NmsSettingsTimezoneAmericaTegucigalpa captures enum value "America/Tegucigalpa"
	NmsSettingsTimezoneAmericaTegucigalpa string = "America/Tegucigalpa"

	// NmsSettingsTimezoneAmericaThule captures enum value "America/Thule"
	NmsSettingsTimezoneAmericaThule string = "America/Thule"

	// NmsSettingsTimezoneAmericaThunderBay captures enum value "America/Thunder_Bay"
	NmsSettingsTimezoneAmericaThunderBay string = "America/Thunder_Bay"

	// NmsSettingsTimezoneAmericaTijuana captures enum value "America/Tijuana"
	NmsSettingsTimezoneAmericaTijuana string = "America/Tijuana"

	// NmsSettingsTimezoneAmericaToronto captures enum value "America/Toronto"
	NmsSettingsTimezoneAmericaToronto string = "America/Toronto"

	// NmsSettingsTimezoneAmericaTortola captures enum value "America/Tortola"
	NmsSettingsTimezoneAmericaTortola string = "America/Tortola"

	// NmsSettingsTimezoneAmericaVancouver captures enum value "America/Vancouver"
	NmsSettingsTimezoneAmericaVancouver string = "America/Vancouver"

	// NmsSettingsTimezoneAmericaVirgin captures enum value "America/Virgin"
	NmsSettingsTimezoneAmericaVirgin string = "America/Virgin"

	// NmsSettingsTimezoneAmericaWhitehorse captures enum value "America/Whitehorse"
	NmsSettingsTimezoneAmericaWhitehorse string = "America/Whitehorse"

	// NmsSettingsTimezoneAmericaWinnipeg captures enum value "America/Winnipeg"
	NmsSettingsTimezoneAmericaWinnipeg string = "America/Winnipeg"

	// NmsSettingsTimezoneAmericaYakutat captures enum value "America/Yakutat"
	NmsSettingsTimezoneAmericaYakutat string = "America/Yakutat"

	// NmsSettingsTimezoneAmericaYellowknife captures enum value "America/Yellowknife"
	NmsSettingsTimezoneAmericaYellowknife string = "America/Yellowknife"

	// NmsSettingsTimezoneAntarcticaCasey captures enum value "Antarctica/Casey"
	NmsSettingsTimezoneAntarcticaCasey string = "Antarctica/Casey"

	// NmsSettingsTimezoneAntarcticaDavis captures enum value "Antarctica/Davis"
	NmsSettingsTimezoneAntarcticaDavis string = "Antarctica/Davis"

	// NmsSettingsTimezoneAntarcticaDumontDUrville captures enum value "Antarctica/DumontDUrville"
	NmsSettingsTimezoneAntarcticaDumontDUrville string = "Antarctica/DumontDUrville"

	// NmsSettingsTimezoneAntarcticaMacquarie captures enum value "Antarctica/Macquarie"
	NmsSettingsTimezoneAntarcticaMacquarie string = "Antarctica/Macquarie"

	// NmsSettingsTimezoneAntarcticaMawson captures enum value "Antarctica/Mawson"
	NmsSettingsTimezoneAntarcticaMawson string = "Antarctica/Mawson"

	// NmsSettingsTimezoneAntarcticaMcMurdo captures enum value "Antarctica/McMurdo"
	NmsSettingsTimezoneAntarcticaMcMurdo string = "Antarctica/McMurdo"

	// NmsSettingsTimezoneAntarcticaPalmer captures enum value "Antarctica/Palmer"
	NmsSettingsTimezoneAntarcticaPalmer string = "Antarctica/Palmer"

	// NmsSettingsTimezoneAntarcticaRothera captures enum value "Antarctica/Rothera"
	NmsSettingsTimezoneAntarcticaRothera string = "Antarctica/Rothera"

	// NmsSettingsTimezoneAntarcticaSouthPole captures enum value "Antarctica/South_Pole"
	NmsSettingsTimezoneAntarcticaSouthPole string = "Antarctica/South_Pole"

	// NmsSettingsTimezoneAntarcticaSyowa captures enum value "Antarctica/Syowa"
	NmsSettingsTimezoneAntarcticaSyowa string = "Antarctica/Syowa"

	// NmsSettingsTimezoneAntarcticaTroll captures enum value "Antarctica/Troll"
	NmsSettingsTimezoneAntarcticaTroll string = "Antarctica/Troll"

	// NmsSettingsTimezoneAntarcticaVostok captures enum value "Antarctica/Vostok"
	NmsSettingsTimezoneAntarcticaVostok string = "Antarctica/Vostok"

	// NmsSettingsTimezoneArcticLongyearbyen captures enum value "Arctic/Longyearbyen"
	NmsSettingsTimezoneArcticLongyearbyen string = "Arctic/Longyearbyen"

	// NmsSettingsTimezoneAsiaAden captures enum value "Asia/Aden"
	NmsSettingsTimezoneAsiaAden string = "Asia/Aden"

	// NmsSettingsTimezoneAsiaAlmaty captures enum value "Asia/Almaty"
	NmsSettingsTimezoneAsiaAlmaty string = "Asia/Almaty"

	// NmsSettingsTimezoneAsiaAmman captures enum value "Asia/Amman"
	NmsSettingsTimezoneAsiaAmman string = "Asia/Amman"

	// NmsSettingsTimezoneAsiaAnadyr captures enum value "Asia/Anadyr"
	NmsSettingsTimezoneAsiaAnadyr string = "Asia/Anadyr"

	// NmsSettingsTimezoneAsiaAqtau captures enum value "Asia/Aqtau"
	NmsSettingsTimezoneAsiaAqtau string = "Asia/Aqtau"

	// NmsSettingsTimezoneAsiaAqtobe captures enum value "Asia/Aqtobe"
	NmsSettingsTimezoneAsiaAqtobe string = "Asia/Aqtobe"

	// NmsSettingsTimezoneAsiaAshgabat captures enum value "Asia/Ashgabat"
	NmsSettingsTimezoneAsiaAshgabat string = "Asia/Ashgabat"

	// NmsSettingsTimezoneAsiaAshkhabad captures enum value "Asia/Ashkhabad"
	NmsSettingsTimezoneAsiaAshkhabad string = "Asia/Ashkhabad"

	// NmsSettingsTimezoneAsiaAtyrau captures enum value "Asia/Atyrau"
	NmsSettingsTimezoneAsiaAtyrau string = "Asia/Atyrau"

	// NmsSettingsTimezoneAsiaBaghdad captures enum value "Asia/Baghdad"
	NmsSettingsTimezoneAsiaBaghdad string = "Asia/Baghdad"

	// NmsSettingsTimezoneAsiaBahrain captures enum value "Asia/Bahrain"
	NmsSettingsTimezoneAsiaBahrain string = "Asia/Bahrain"

	// NmsSettingsTimezoneAsiaBaku captures enum value "Asia/Baku"
	NmsSettingsTimezoneAsiaBaku string = "Asia/Baku"

	// NmsSettingsTimezoneAsiaBangkok captures enum value "Asia/Bangkok"
	NmsSettingsTimezoneAsiaBangkok string = "Asia/Bangkok"

	// NmsSettingsTimezoneAsiaBarnaul captures enum value "Asia/Barnaul"
	NmsSettingsTimezoneAsiaBarnaul string = "Asia/Barnaul"

	// NmsSettingsTimezoneAsiaBeirut captures enum value "Asia/Beirut"
	NmsSettingsTimezoneAsiaBeirut string = "Asia/Beirut"

	// NmsSettingsTimezoneAsiaBishkek captures enum value "Asia/Bishkek"
	NmsSettingsTimezoneAsiaBishkek string = "Asia/Bishkek"

	// NmsSettingsTimezoneAsiaBrunei captures enum value "Asia/Brunei"
	NmsSettingsTimezoneAsiaBrunei string = "Asia/Brunei"

	// NmsSettingsTimezoneAsiaCalcutta captures enum value "Asia/Calcutta"
	NmsSettingsTimezoneAsiaCalcutta string = "Asia/Calcutta"

	// NmsSettingsTimezoneAsiaChita captures enum value "Asia/Chita"
	NmsSettingsTimezoneAsiaChita string = "Asia/Chita"

	// NmsSettingsTimezoneAsiaChoibalsan captures enum value "Asia/Choibalsan"
	NmsSettingsTimezoneAsiaChoibalsan string = "Asia/Choibalsan"

	// NmsSettingsTimezoneAsiaChongqing captures enum value "Asia/Chongqing"
	NmsSettingsTimezoneAsiaChongqing string = "Asia/Chongqing"

	// NmsSettingsTimezoneAsiaChungking captures enum value "Asia/Chungking"
	NmsSettingsTimezoneAsiaChungking string = "Asia/Chungking"

	// NmsSettingsTimezoneAsiaColombo captures enum value "Asia/Colombo"
	NmsSettingsTimezoneAsiaColombo string = "Asia/Colombo"

	// NmsSettingsTimezoneAsiaDacca captures enum value "Asia/Dacca"
	NmsSettingsTimezoneAsiaDacca string = "Asia/Dacca"

	// NmsSettingsTimezoneAsiaDamascus captures enum value "Asia/Damascus"
	NmsSettingsTimezoneAsiaDamascus string = "Asia/Damascus"

	// NmsSettingsTimezoneAsiaDhaka captures enum value "Asia/Dhaka"
	NmsSettingsTimezoneAsiaDhaka string = "Asia/Dhaka"

	// NmsSettingsTimezoneAsiaDili captures enum value "Asia/Dili"
	NmsSettingsTimezoneAsiaDili string = "Asia/Dili"

	// NmsSettingsTimezoneAsiaDubai captures enum value "Asia/Dubai"
	NmsSettingsTimezoneAsiaDubai string = "Asia/Dubai"

	// NmsSettingsTimezoneAsiaDushanbe captures enum value "Asia/Dushanbe"
	NmsSettingsTimezoneAsiaDushanbe string = "Asia/Dushanbe"

	// NmsSettingsTimezoneAsiaFamagusta captures enum value "Asia/Famagusta"
	NmsSettingsTimezoneAsiaFamagusta string = "Asia/Famagusta"

	// NmsSettingsTimezoneAsiaGaza captures enum value "Asia/Gaza"
	NmsSettingsTimezoneAsiaGaza string = "Asia/Gaza"

	// NmsSettingsTimezoneAsiaHarbin captures enum value "Asia/Harbin"
	NmsSettingsTimezoneAsiaHarbin string = "Asia/Harbin"

	// NmsSettingsTimezoneAsiaHebron captures enum value "Asia/Hebron"
	NmsSettingsTimezoneAsiaHebron string = "Asia/Hebron"

	// NmsSettingsTimezoneAsiaHoChiMinh captures enum value "Asia/Ho_Chi_Minh"
	NmsSettingsTimezoneAsiaHoChiMinh string = "Asia/Ho_Chi_Minh"

	// NmsSettingsTimezoneAsiaHongKong captures enum value "Asia/Hong_Kong"
	NmsSettingsTimezoneAsiaHongKong string = "Asia/Hong_Kong"

	// NmsSettingsTimezoneAsiaHovd captures enum value "Asia/Hovd"
	NmsSettingsTimezoneAsiaHovd string = "Asia/Hovd"

	// NmsSettingsTimezoneAsiaIrkutsk captures enum value "Asia/Irkutsk"
	NmsSettingsTimezoneAsiaIrkutsk string = "Asia/Irkutsk"

	// NmsSettingsTimezoneAsiaIstanbul captures enum value "Asia/Istanbul"
	NmsSettingsTimezoneAsiaIstanbul string = "Asia/Istanbul"

	// NmsSettingsTimezoneAsiaJakarta captures enum value "Asia/Jakarta"
	NmsSettingsTimezoneAsiaJakarta string = "Asia/Jakarta"

	// NmsSettingsTimezoneAsiaJayapura captures enum value "Asia/Jayapura"
	NmsSettingsTimezoneAsiaJayapura string = "Asia/Jayapura"

	// NmsSettingsTimezoneAsiaJerusalem captures enum value "Asia/Jerusalem"
	NmsSettingsTimezoneAsiaJerusalem string = "Asia/Jerusalem"

	// NmsSettingsTimezoneAsiaKabul captures enum value "Asia/Kabul"
	NmsSettingsTimezoneAsiaKabul string = "Asia/Kabul"

	// NmsSettingsTimezoneAsiaKamchatka captures enum value "Asia/Kamchatka"
	NmsSettingsTimezoneAsiaKamchatka string = "Asia/Kamchatka"

	// NmsSettingsTimezoneAsiaKarachi captures enum value "Asia/Karachi"
	NmsSettingsTimezoneAsiaKarachi string = "Asia/Karachi"

	// NmsSettingsTimezoneAsiaKashgar captures enum value "Asia/Kashgar"
	NmsSettingsTimezoneAsiaKashgar string = "Asia/Kashgar"

	// NmsSettingsTimezoneAsiaKathmandu captures enum value "Asia/Kathmandu"
	NmsSettingsTimezoneAsiaKathmandu string = "Asia/Kathmandu"

	// NmsSettingsTimezoneAsiaKatmandu captures enum value "Asia/Katmandu"
	NmsSettingsTimezoneAsiaKatmandu string = "Asia/Katmandu"

	// NmsSettingsTimezoneAsiaKhandyga captures enum value "Asia/Khandyga"
	NmsSettingsTimezoneAsiaKhandyga string = "Asia/Khandyga"

	// NmsSettingsTimezoneAsiaKolkata captures enum value "Asia/Kolkata"
	NmsSettingsTimezoneAsiaKolkata string = "Asia/Kolkata"

	// NmsSettingsTimezoneAsiaKrasnoyarsk captures enum value "Asia/Krasnoyarsk"
	NmsSettingsTimezoneAsiaKrasnoyarsk string = "Asia/Krasnoyarsk"

	// NmsSettingsTimezoneAsiaKualaLumpur captures enum value "Asia/Kuala_Lumpur"
	NmsSettingsTimezoneAsiaKualaLumpur string = "Asia/Kuala_Lumpur"

	// NmsSettingsTimezoneAsiaKuching captures enum value "Asia/Kuching"
	NmsSettingsTimezoneAsiaKuching string = "Asia/Kuching"

	// NmsSettingsTimezoneAsiaKuwait captures enum value "Asia/Kuwait"
	NmsSettingsTimezoneAsiaKuwait string = "Asia/Kuwait"

	// NmsSettingsTimezoneAsiaMacao captures enum value "Asia/Macao"
	NmsSettingsTimezoneAsiaMacao string = "Asia/Macao"

	// NmsSettingsTimezoneAsiaMacau captures enum value "Asia/Macau"
	NmsSettingsTimezoneAsiaMacau string = "Asia/Macau"

	// NmsSettingsTimezoneAsiaMagadan captures enum value "Asia/Magadan"
	NmsSettingsTimezoneAsiaMagadan string = "Asia/Magadan"

	// NmsSettingsTimezoneAsiaMakassar captures enum value "Asia/Makassar"
	NmsSettingsTimezoneAsiaMakassar string = "Asia/Makassar"

	// NmsSettingsTimezoneAsiaManila captures enum value "Asia/Manila"
	NmsSettingsTimezoneAsiaManila string = "Asia/Manila"

	// NmsSettingsTimezoneAsiaMuscat captures enum value "Asia/Muscat"
	NmsSettingsTimezoneAsiaMuscat string = "Asia/Muscat"

	// NmsSettingsTimezoneAsiaNicosia captures enum value "Asia/Nicosia"
	NmsSettingsTimezoneAsiaNicosia string = "Asia/Nicosia"

	// NmsSettingsTimezoneAsiaNovokuznetsk captures enum value "Asia/Novokuznetsk"
	NmsSettingsTimezoneAsiaNovokuznetsk string = "Asia/Novokuznetsk"

	// NmsSettingsTimezoneAsiaNovosibirsk captures enum value "Asia/Novosibirsk"
	NmsSettingsTimezoneAsiaNovosibirsk string = "Asia/Novosibirsk"

	// NmsSettingsTimezoneAsiaOmsk captures enum value "Asia/Omsk"
	NmsSettingsTimezoneAsiaOmsk string = "Asia/Omsk"

	// NmsSettingsTimezoneAsiaOral captures enum value "Asia/Oral"
	NmsSettingsTimezoneAsiaOral string = "Asia/Oral"

	// NmsSettingsTimezoneAsiaPhnomPenh captures enum value "Asia/Phnom_Penh"
	NmsSettingsTimezoneAsiaPhnomPenh string = "Asia/Phnom_Penh"

	// NmsSettingsTimezoneAsiaPontianak captures enum value "Asia/Pontianak"
	NmsSettingsTimezoneAsiaPontianak string = "Asia/Pontianak"

	// NmsSettingsTimezoneAsiaPyongyang captures enum value "Asia/Pyongyang"
	NmsSettingsTimezoneAsiaPyongyang string = "Asia/Pyongyang"

	// NmsSettingsTimezoneAsiaQatar captures enum value "Asia/Qatar"
	NmsSettingsTimezoneAsiaQatar string = "Asia/Qatar"

	// NmsSettingsTimezoneAsiaQyzylorda captures enum value "Asia/Qyzylorda"
	NmsSettingsTimezoneAsiaQyzylorda string = "Asia/Qyzylorda"

	// NmsSettingsTimezoneAsiaRangoon captures enum value "Asia/Rangoon"
	NmsSettingsTimezoneAsiaRangoon string = "Asia/Rangoon"

	// NmsSettingsTimezoneAsiaRiyadh captures enum value "Asia/Riyadh"
	NmsSettingsTimezoneAsiaRiyadh string = "Asia/Riyadh"

	// NmsSettingsTimezoneAsiaSaigon captures enum value "Asia/Saigon"
	NmsSettingsTimezoneAsiaSaigon string = "Asia/Saigon"

	// NmsSettingsTimezoneAsiaSakhalin captures enum value "Asia/Sakhalin"
	NmsSettingsTimezoneAsiaSakhalin string = "Asia/Sakhalin"

	// NmsSettingsTimezoneAsiaSamarkand captures enum value "Asia/Samarkand"
	NmsSettingsTimezoneAsiaSamarkand string = "Asia/Samarkand"

	// NmsSettingsTimezoneAsiaSeoul captures enum value "Asia/Seoul"
	NmsSettingsTimezoneAsiaSeoul string = "Asia/Seoul"

	// NmsSettingsTimezoneAsiaShanghai captures enum value "Asia/Shanghai"
	NmsSettingsTimezoneAsiaShanghai string = "Asia/Shanghai"

	// NmsSettingsTimezoneAsiaSingapore captures enum value "Asia/Singapore"
	NmsSettingsTimezoneAsiaSingapore string = "Asia/Singapore"

	// NmsSettingsTimezoneAsiaSrednekolymsk captures enum value "Asia/Srednekolymsk"
	NmsSettingsTimezoneAsiaSrednekolymsk string = "Asia/Srednekolymsk"

	// NmsSettingsTimezoneAsiaTaipei captures enum value "Asia/Taipei"
	NmsSettingsTimezoneAsiaTaipei string = "Asia/Taipei"

	// NmsSettingsTimezoneAsiaTashkent captures enum value "Asia/Tashkent"
	NmsSettingsTimezoneAsiaTashkent string = "Asia/Tashkent"

	// NmsSettingsTimezoneAsiaTbilisi captures enum value "Asia/Tbilisi"
	NmsSettingsTimezoneAsiaTbilisi string = "Asia/Tbilisi"

	// NmsSettingsTimezoneAsiaTehran captures enum value "Asia/Tehran"
	NmsSettingsTimezoneAsiaTehran string = "Asia/Tehran"

	// NmsSettingsTimezoneAsiaTelAviv captures enum value "Asia/Tel_Aviv"
	NmsSettingsTimezoneAsiaTelAviv string = "Asia/Tel_Aviv"

	// NmsSettingsTimezoneAsiaThimbu captures enum value "Asia/Thimbu"
	NmsSettingsTimezoneAsiaThimbu string = "Asia/Thimbu"

	// NmsSettingsTimezoneAsiaThimphu captures enum value "Asia/Thimphu"
	NmsSettingsTimezoneAsiaThimphu string = "Asia/Thimphu"

	// NmsSettingsTimezoneAsiaTokyo captures enum value "Asia/Tokyo"
	NmsSettingsTimezoneAsiaTokyo string = "Asia/Tokyo"

	// NmsSettingsTimezoneAsiaTomsk captures enum value "Asia/Tomsk"
	NmsSettingsTimezoneAsiaTomsk string = "Asia/Tomsk"

	// NmsSettingsTimezoneAsiaUjungPandang captures enum value "Asia/Ujung_Pandang"
	NmsSettingsTimezoneAsiaUjungPandang string = "Asia/Ujung_Pandang"

	// NmsSettingsTimezoneAsiaUlaanbaatar captures enum value "Asia/Ulaanbaatar"
	NmsSettingsTimezoneAsiaUlaanbaatar string = "Asia/Ulaanbaatar"

	// NmsSettingsTimezoneAsiaUlanBator captures enum value "Asia/Ulan_Bator"
	NmsSettingsTimezoneAsiaUlanBator string = "Asia/Ulan_Bator"

	// NmsSettingsTimezoneAsiaUrumqi captures enum value "Asia/Urumqi"
	NmsSettingsTimezoneAsiaUrumqi string = "Asia/Urumqi"

	// NmsSettingsTimezoneAsiaUstNera captures enum value "Asia/Ust-Nera"
	NmsSettingsTimezoneAsiaUstNera string = "Asia/Ust-Nera"

	// NmsSettingsTimezoneAsiaVientiane captures enum value "Asia/Vientiane"
	NmsSettingsTimezoneAsiaVientiane string = "Asia/Vientiane"

	// NmsSettingsTimezoneAsiaVladivostok captures enum value "Asia/Vladivostok"
	NmsSettingsTimezoneAsiaVladivostok string = "Asia/Vladivostok"

	// NmsSettingsTimezoneAsiaYakutsk captures enum value "Asia/Yakutsk"
	NmsSettingsTimezoneAsiaYakutsk string = "Asia/Yakutsk"

	// NmsSettingsTimezoneAsiaYangon captures enum value "Asia/Yangon"
	NmsSettingsTimezoneAsiaYangon string = "Asia/Yangon"

	// NmsSettingsTimezoneAsiaYekaterinburg captures enum value "Asia/Yekaterinburg"
	NmsSettingsTimezoneAsiaYekaterinburg string = "Asia/Yekaterinburg"

	// NmsSettingsTimezoneAsiaYerevan captures enum value "Asia/Yerevan"
	NmsSettingsTimezoneAsiaYerevan string = "Asia/Yerevan"

	// NmsSettingsTimezoneAtlanticAzores captures enum value "Atlantic/Azores"
	NmsSettingsTimezoneAtlanticAzores string = "Atlantic/Azores"

	// NmsSettingsTimezoneAtlanticBermuda captures enum value "Atlantic/Bermuda"
	NmsSettingsTimezoneAtlanticBermuda string = "Atlantic/Bermuda"

	// NmsSettingsTimezoneAtlanticCanary captures enum value "Atlantic/Canary"
	NmsSettingsTimezoneAtlanticCanary string = "Atlantic/Canary"

	// NmsSettingsTimezoneAtlanticCapeVerde captures enum value "Atlantic/Cape_Verde"
	NmsSettingsTimezoneAtlanticCapeVerde string = "Atlantic/Cape_Verde"

	// NmsSettingsTimezoneAtlanticFaeroe captures enum value "Atlantic/Faeroe"
	NmsSettingsTimezoneAtlanticFaeroe string = "Atlantic/Faeroe"

	// NmsSettingsTimezoneAtlanticFaroe captures enum value "Atlantic/Faroe"
	NmsSettingsTimezoneAtlanticFaroe string = "Atlantic/Faroe"

	// NmsSettingsTimezoneAtlanticJanMayen captures enum value "Atlantic/Jan_Mayen"
	NmsSettingsTimezoneAtlanticJanMayen string = "Atlantic/Jan_Mayen"

	// NmsSettingsTimezoneAtlanticMadeira captures enum value "Atlantic/Madeira"
	NmsSettingsTimezoneAtlanticMadeira string = "Atlantic/Madeira"

	// NmsSettingsTimezoneAtlanticReykjavik captures enum value "Atlantic/Reykjavik"
	NmsSettingsTimezoneAtlanticReykjavik string = "Atlantic/Reykjavik"

	// NmsSettingsTimezoneAtlanticSouthGeorgia captures enum value "Atlantic/South_Georgia"
	NmsSettingsTimezoneAtlanticSouthGeorgia string = "Atlantic/South_Georgia"

	// NmsSettingsTimezoneAtlanticStHelena captures enum value "Atlantic/St_Helena"
	NmsSettingsTimezoneAtlanticStHelena string = "Atlantic/St_Helena"

	// NmsSettingsTimezoneAtlanticStanley captures enum value "Atlantic/Stanley"
	NmsSettingsTimezoneAtlanticStanley string = "Atlantic/Stanley"

	// NmsSettingsTimezoneAustraliaACT captures enum value "Australia/ACT"
	NmsSettingsTimezoneAustraliaACT string = "Australia/ACT"

	// NmsSettingsTimezoneAustraliaAdelaide captures enum value "Australia/Adelaide"
	NmsSettingsTimezoneAustraliaAdelaide string = "Australia/Adelaide"

	// NmsSettingsTimezoneAustraliaBrisbane captures enum value "Australia/Brisbane"
	NmsSettingsTimezoneAustraliaBrisbane string = "Australia/Brisbane"

	// NmsSettingsTimezoneAustraliaBrokenHill captures enum value "Australia/Broken_Hill"
	NmsSettingsTimezoneAustraliaBrokenHill string = "Australia/Broken_Hill"

	// NmsSettingsTimezoneAustraliaCanberra captures enum value "Australia/Canberra"
	NmsSettingsTimezoneAustraliaCanberra string = "Australia/Canberra"

	// NmsSettingsTimezoneAustraliaCurrie captures enum value "Australia/Currie"
	NmsSettingsTimezoneAustraliaCurrie string = "Australia/Currie"

	// NmsSettingsTimezoneAustraliaDarwin captures enum value "Australia/Darwin"
	NmsSettingsTimezoneAustraliaDarwin string = "Australia/Darwin"

	// NmsSettingsTimezoneAustraliaEucla captures enum value "Australia/Eucla"
	NmsSettingsTimezoneAustraliaEucla string = "Australia/Eucla"

	// NmsSettingsTimezoneAustraliaHobart captures enum value "Australia/Hobart"
	NmsSettingsTimezoneAustraliaHobart string = "Australia/Hobart"

	// NmsSettingsTimezoneAustraliaLHI captures enum value "Australia/LHI"
	NmsSettingsTimezoneAustraliaLHI string = "Australia/LHI"

	// NmsSettingsTimezoneAustraliaLindeman captures enum value "Australia/Lindeman"
	NmsSettingsTimezoneAustraliaLindeman string = "Australia/Lindeman"

	// NmsSettingsTimezoneAustraliaLordHowe captures enum value "Australia/Lord_Howe"
	NmsSettingsTimezoneAustraliaLordHowe string = "Australia/Lord_Howe"

	// NmsSettingsTimezoneAustraliaMelbourne captures enum value "Australia/Melbourne"
	NmsSettingsTimezoneAustraliaMelbourne string = "Australia/Melbourne"

	// NmsSettingsTimezoneAustraliaNSW captures enum value "Australia/NSW"
	NmsSettingsTimezoneAustraliaNSW string = "Australia/NSW"

	// NmsSettingsTimezoneAustraliaNorth captures enum value "Australia/North"
	NmsSettingsTimezoneAustraliaNorth string = "Australia/North"

	// NmsSettingsTimezoneAustraliaPerth captures enum value "Australia/Perth"
	NmsSettingsTimezoneAustraliaPerth string = "Australia/Perth"

	// NmsSettingsTimezoneAustraliaQueensland captures enum value "Australia/Queensland"
	NmsSettingsTimezoneAustraliaQueensland string = "Australia/Queensland"

	// NmsSettingsTimezoneAustraliaSouth captures enum value "Australia/South"
	NmsSettingsTimezoneAustraliaSouth string = "Australia/South"

	// NmsSettingsTimezoneAustraliaSydney captures enum value "Australia/Sydney"
	NmsSettingsTimezoneAustraliaSydney string = "Australia/Sydney"

	// NmsSettingsTimezoneAustraliaTasmania captures enum value "Australia/Tasmania"
	NmsSettingsTimezoneAustraliaTasmania string = "Australia/Tasmania"

	// NmsSettingsTimezoneAustraliaVictoria captures enum value "Australia/Victoria"
	NmsSettingsTimezoneAustraliaVictoria string = "Australia/Victoria"

	// NmsSettingsTimezoneAustraliaWest captures enum value "Australia/West"
	NmsSettingsTimezoneAustraliaWest string = "Australia/West"

	// NmsSettingsTimezoneAustraliaYancowinna captures enum value "Australia/Yancowinna"
	NmsSettingsTimezoneAustraliaYancowinna string = "Australia/Yancowinna"

	// NmsSettingsTimezoneBrazilAcre captures enum value "Brazil/Acre"
	NmsSettingsTimezoneBrazilAcre string = "Brazil/Acre"

	// NmsSettingsTimezoneBrazilDeNoronha captures enum value "Brazil/DeNoronha"
	NmsSettingsTimezoneBrazilDeNoronha string = "Brazil/DeNoronha"

	// NmsSettingsTimezoneBrazilEast captures enum value "Brazil/East"
	NmsSettingsTimezoneBrazilEast string = "Brazil/East"

	// NmsSettingsTimezoneBrazilWest captures enum value "Brazil/West"
	NmsSettingsTimezoneBrazilWest string = "Brazil/West"

	// NmsSettingsTimezoneCET captures enum value "CET"
	NmsSettingsTimezoneCET string = "CET"

	// NmsSettingsTimezoneCST6CDT captures enum value "CST6CDT"
	NmsSettingsTimezoneCST6CDT string = "CST6CDT"

	// NmsSettingsTimezoneCanadaAtlantic captures enum value "Canada/Atlantic"
	NmsSettingsTimezoneCanadaAtlantic string = "Canada/Atlantic"

	// NmsSettingsTimezoneCanadaCentral captures enum value "Canada/Central"
	NmsSettingsTimezoneCanadaCentral string = "Canada/Central"

	// NmsSettingsTimezoneCanadaEastern captures enum value "Canada/Eastern"
	NmsSettingsTimezoneCanadaEastern string = "Canada/Eastern"

	// NmsSettingsTimezoneCanadaMountain captures enum value "Canada/Mountain"
	NmsSettingsTimezoneCanadaMountain string = "Canada/Mountain"

	// NmsSettingsTimezoneCanadaNewfoundland captures enum value "Canada/Newfoundland"
	NmsSettingsTimezoneCanadaNewfoundland string = "Canada/Newfoundland"

	// NmsSettingsTimezoneCanadaPacific captures enum value "Canada/Pacific"
	NmsSettingsTimezoneCanadaPacific string = "Canada/Pacific"

	// NmsSettingsTimezoneCanadaSaskatchewan captures enum value "Canada/Saskatchewan"
	NmsSettingsTimezoneCanadaSaskatchewan string = "Canada/Saskatchewan"

	// NmsSettingsTimezoneCanadaYukon captures enum value "Canada/Yukon"
	NmsSettingsTimezoneCanadaYukon string = "Canada/Yukon"

	// NmsSettingsTimezoneChileContinental captures enum value "Chile/Continental"
	NmsSettingsTimezoneChileContinental string = "Chile/Continental"

	// NmsSettingsTimezoneChileEasterIsland captures enum value "Chile/EasterIsland"
	NmsSettingsTimezoneChileEasterIsland string = "Chile/EasterIsland"

	// NmsSettingsTimezoneCuba captures enum value "Cuba"
	NmsSettingsTimezoneCuba string = "Cuba"

	// NmsSettingsTimezoneEET captures enum value "EET"
	NmsSettingsTimezoneEET string = "EET"

	// NmsSettingsTimezoneEST captures enum value "EST"
	NmsSettingsTimezoneEST string = "EST"

	// NmsSettingsTimezoneEST5EDT captures enum value "EST5EDT"
	NmsSettingsTimezoneEST5EDT string = "EST5EDT"

	// NmsSettingsTimezoneEgypt captures enum value "Egypt"
	NmsSettingsTimezoneEgypt string = "Egypt"

	// NmsSettingsTimezoneEire captures enum value "Eire"
	NmsSettingsTimezoneEire string = "Eire"

	// NmsSettingsTimezoneEtcGMT captures enum value "Etc/GMT"
	NmsSettingsTimezoneEtcGMT string = "Etc/GMT"

	// NmsSettingsTimezoneEtcGMT0 captures enum value "Etc/GMT+0"
	NmsSettingsTimezoneEtcGMT0 string = "Etc/GMT+0"

	// NmsSettingsTimezoneEtcGMT1 captures enum value "Etc/GMT+1"
	NmsSettingsTimezoneEtcGMT1 string = "Etc/GMT+1"

	// NmsSettingsTimezoneEtcGMT10 captures enum value "Etc/GMT+10"
	NmsSettingsTimezoneEtcGMT10 string = "Etc/GMT+10"

	// NmsSettingsTimezoneEtcGMT11 captures enum value "Etc/GMT+11"
	NmsSettingsTimezoneEtcGMT11 string = "Etc/GMT+11"

	// NmsSettingsTimezoneEtcGMT12 captures enum value "Etc/GMT+12"
	NmsSettingsTimezoneEtcGMT12 string = "Etc/GMT+12"

	// NmsSettingsTimezoneEtcGMT2 captures enum value "Etc/GMT+2"
	NmsSettingsTimezoneEtcGMT2 string = "Etc/GMT+2"

	// NmsSettingsTimezoneEtcGMT3 captures enum value "Etc/GMT+3"
	NmsSettingsTimezoneEtcGMT3 string = "Etc/GMT+3"

	// NmsSettingsTimezoneEtcGMT4 captures enum value "Etc/GMT+4"
	NmsSettingsTimezoneEtcGMT4 string = "Etc/GMT+4"

	// NmsSettingsTimezoneEtcGMT5 captures enum value "Etc/GMT+5"
	NmsSettingsTimezoneEtcGMT5 string = "Etc/GMT+5"

	// NmsSettingsTimezoneEtcGMT6 captures enum value "Etc/GMT+6"
	NmsSettingsTimezoneEtcGMT6 string = "Etc/GMT+6"

	// NmsSettingsTimezoneEtcGMT7 captures enum value "Etc/GMT+7"
	NmsSettingsTimezoneEtcGMT7 string = "Etc/GMT+7"

	// NmsSettingsTimezoneEtcGMT8 captures enum value "Etc/GMT+8"
	NmsSettingsTimezoneEtcGMT8 string = "Etc/GMT+8"

	// NmsSettingsTimezoneEtcGMT9 captures enum value "Etc/GMT+9"
	NmsSettingsTimezoneEtcGMT9 string = "Etc/GMT+9"

	// NmsSettingsTimezoneEtcGMT0 captures enum value "Etc/GMT-0"
	NmsSettingsTimezoneEtcGMT0 string = "Etc/GMT-0"

	// NmsSettingsTimezoneEtcGMT1 captures enum value "Etc/GMT-1"
	NmsSettingsTimezoneEtcGMT1 string = "Etc/GMT-1"

	// NmsSettingsTimezoneEtcGMT10 captures enum value "Etc/GMT-10"
	NmsSettingsTimezoneEtcGMT10 string = "Etc/GMT-10"

	// NmsSettingsTimezoneEtcGMT11 captures enum value "Etc/GMT-11"
	NmsSettingsTimezoneEtcGMT11 string = "Etc/GMT-11"

	// NmsSettingsTimezoneEtcGMT12 captures enum value "Etc/GMT-12"
	NmsSettingsTimezoneEtcGMT12 string = "Etc/GMT-12"

	// NmsSettingsTimezoneEtcGMT13 captures enum value "Etc/GMT-13"
	NmsSettingsTimezoneEtcGMT13 string = "Etc/GMT-13"

	// NmsSettingsTimezoneEtcGMT14 captures enum value "Etc/GMT-14"
	NmsSettingsTimezoneEtcGMT14 string = "Etc/GMT-14"

	// NmsSettingsTimezoneEtcGMT2 captures enum value "Etc/GMT-2"
	NmsSettingsTimezoneEtcGMT2 string = "Etc/GMT-2"

	// NmsSettingsTimezoneEtcGMT3 captures enum value "Etc/GMT-3"
	NmsSettingsTimezoneEtcGMT3 string = "Etc/GMT-3"

	// NmsSettingsTimezoneEtcGMT4 captures enum value "Etc/GMT-4"
	NmsSettingsTimezoneEtcGMT4 string = "Etc/GMT-4"

	// NmsSettingsTimezoneEtcGMT5 captures enum value "Etc/GMT-5"
	NmsSettingsTimezoneEtcGMT5 string = "Etc/GMT-5"

	// NmsSettingsTimezoneEtcGMT6 captures enum value "Etc/GMT-6"
	NmsSettingsTimezoneEtcGMT6 string = "Etc/GMT-6"

	// NmsSettingsTimezoneEtcGMT7 captures enum value "Etc/GMT-7"
	NmsSettingsTimezoneEtcGMT7 string = "Etc/GMT-7"

	// NmsSettingsTimezoneEtcGMT8 captures enum value "Etc/GMT-8"
	NmsSettingsTimezoneEtcGMT8 string = "Etc/GMT-8"

	// NmsSettingsTimezoneEtcGMT9 captures enum value "Etc/GMT-9"
	NmsSettingsTimezoneEtcGMT9 string = "Etc/GMT-9"

	// NmsSettingsTimezoneEtcGMT0 captures enum value "Etc/GMT0"
	NmsSettingsTimezoneEtcGMT0 string = "Etc/GMT0"

	// NmsSettingsTimezoneEtcGreenwich captures enum value "Etc/Greenwich"
	NmsSettingsTimezoneEtcGreenwich string = "Etc/Greenwich"

	// NmsSettingsTimezoneEtcUCT captures enum value "Etc/UCT"
	NmsSettingsTimezoneEtcUCT string = "Etc/UCT"

	// NmsSettingsTimezoneEtcUTC captures enum value "Etc/UTC"
	NmsSettingsTimezoneEtcUTC string = "Etc/UTC"

	// NmsSettingsTimezoneEtcUniversal captures enum value "Etc/Universal"
	NmsSettingsTimezoneEtcUniversal string = "Etc/Universal"

	// NmsSettingsTimezoneEtcZulu captures enum value "Etc/Zulu"
	NmsSettingsTimezoneEtcZulu string = "Etc/Zulu"

	// NmsSettingsTimezoneEuropeAmsterdam captures enum value "Europe/Amsterdam"
	NmsSettingsTimezoneEuropeAmsterdam string = "Europe/Amsterdam"

	// NmsSettingsTimezoneEuropeAndorra captures enum value "Europe/Andorra"
	NmsSettingsTimezoneEuropeAndorra string = "Europe/Andorra"

	// NmsSettingsTimezoneEuropeAstrakhan captures enum value "Europe/Astrakhan"
	NmsSettingsTimezoneEuropeAstrakhan string = "Europe/Astrakhan"

	// NmsSettingsTimezoneEuropeAthens captures enum value "Europe/Athens"
	NmsSettingsTimezoneEuropeAthens string = "Europe/Athens"

	// NmsSettingsTimezoneEuropeBelfast captures enum value "Europe/Belfast"
	NmsSettingsTimezoneEuropeBelfast string = "Europe/Belfast"

	// NmsSettingsTimezoneEuropeBelgrade captures enum value "Europe/Belgrade"
	NmsSettingsTimezoneEuropeBelgrade string = "Europe/Belgrade"

	// NmsSettingsTimezoneEuropeBerlin captures enum value "Europe/Berlin"
	NmsSettingsTimezoneEuropeBerlin string = "Europe/Berlin"

	// NmsSettingsTimezoneEuropeBratislava captures enum value "Europe/Bratislava"
	NmsSettingsTimezoneEuropeBratislava string = "Europe/Bratislava"

	// NmsSettingsTimezoneEuropeBrussels captures enum value "Europe/Brussels"
	NmsSettingsTimezoneEuropeBrussels string = "Europe/Brussels"

	// NmsSettingsTimezoneEuropeBucharest captures enum value "Europe/Bucharest"
	NmsSettingsTimezoneEuropeBucharest string = "Europe/Bucharest"

	// NmsSettingsTimezoneEuropeBudapest captures enum value "Europe/Budapest"
	NmsSettingsTimezoneEuropeBudapest string = "Europe/Budapest"

	// NmsSettingsTimezoneEuropeBusingen captures enum value "Europe/Busingen"
	NmsSettingsTimezoneEuropeBusingen string = "Europe/Busingen"

	// NmsSettingsTimezoneEuropeChisinau captures enum value "Europe/Chisinau"
	NmsSettingsTimezoneEuropeChisinau string = "Europe/Chisinau"

	// NmsSettingsTimezoneEuropeCopenhagen captures enum value "Europe/Copenhagen"
	NmsSettingsTimezoneEuropeCopenhagen string = "Europe/Copenhagen"

	// NmsSettingsTimezoneEuropeDublin captures enum value "Europe/Dublin"
	NmsSettingsTimezoneEuropeDublin string = "Europe/Dublin"

	// NmsSettingsTimezoneEuropeGibraltar captures enum value "Europe/Gibraltar"
	NmsSettingsTimezoneEuropeGibraltar string = "Europe/Gibraltar"

	// NmsSettingsTimezoneEuropeGuernsey captures enum value "Europe/Guernsey"
	NmsSettingsTimezoneEuropeGuernsey string = "Europe/Guernsey"

	// NmsSettingsTimezoneEuropeHelsinki captures enum value "Europe/Helsinki"
	NmsSettingsTimezoneEuropeHelsinki string = "Europe/Helsinki"

	// NmsSettingsTimezoneEuropeIsleOfMan captures enum value "Europe/Isle_of_Man"
	NmsSettingsTimezoneEuropeIsleOfMan string = "Europe/Isle_of_Man"

	// NmsSettingsTimezoneEuropeIstanbul captures enum value "Europe/Istanbul"
	NmsSettingsTimezoneEuropeIstanbul string = "Europe/Istanbul"

	// NmsSettingsTimezoneEuropeJersey captures enum value "Europe/Jersey"
	NmsSettingsTimezoneEuropeJersey string = "Europe/Jersey"

	// NmsSettingsTimezoneEuropeKaliningrad captures enum value "Europe/Kaliningrad"
	NmsSettingsTimezoneEuropeKaliningrad string = "Europe/Kaliningrad"

	// NmsSettingsTimezoneEuropeKiev captures enum value "Europe/Kiev"
	NmsSettingsTimezoneEuropeKiev string = "Europe/Kiev"

	// NmsSettingsTimezoneEuropeKirov captures enum value "Europe/Kirov"
	NmsSettingsTimezoneEuropeKirov string = "Europe/Kirov"

	// NmsSettingsTimezoneEuropeLisbon captures enum value "Europe/Lisbon"
	NmsSettingsTimezoneEuropeLisbon string = "Europe/Lisbon"

	// NmsSettingsTimezoneEuropeLjubljana captures enum value "Europe/Ljubljana"
	NmsSettingsTimezoneEuropeLjubljana string = "Europe/Ljubljana"

	// NmsSettingsTimezoneEuropeLondon captures enum value "Europe/London"
	NmsSettingsTimezoneEuropeLondon string = "Europe/London"

	// NmsSettingsTimezoneEuropeLuxembourg captures enum value "Europe/Luxembourg"
	NmsSettingsTimezoneEuropeLuxembourg string = "Europe/Luxembourg"

	// NmsSettingsTimezoneEuropeMadrid captures enum value "Europe/Madrid"
	NmsSettingsTimezoneEuropeMadrid string = "Europe/Madrid"

	// NmsSettingsTimezoneEuropeMalta captures enum value "Europe/Malta"
	NmsSettingsTimezoneEuropeMalta string = "Europe/Malta"

	// NmsSettingsTimezoneEuropeMariehamn captures enum value "Europe/Mariehamn"
	NmsSettingsTimezoneEuropeMariehamn string = "Europe/Mariehamn"

	// NmsSettingsTimezoneEuropeMinsk captures enum value "Europe/Minsk"
	NmsSettingsTimezoneEuropeMinsk string = "Europe/Minsk"

	// NmsSettingsTimezoneEuropeMonaco captures enum value "Europe/Monaco"
	NmsSettingsTimezoneEuropeMonaco string = "Europe/Monaco"

	// NmsSettingsTimezoneEuropeMoscow captures enum value "Europe/Moscow"
	NmsSettingsTimezoneEuropeMoscow string = "Europe/Moscow"

	// NmsSettingsTimezoneEuropeNicosia captures enum value "Europe/Nicosia"
	NmsSettingsTimezoneEuropeNicosia string = "Europe/Nicosia"

	// NmsSettingsTimezoneEuropeOslo captures enum value "Europe/Oslo"
	NmsSettingsTimezoneEuropeOslo string = "Europe/Oslo"

	// NmsSettingsTimezoneEuropeParis captures enum value "Europe/Paris"
	NmsSettingsTimezoneEuropeParis string = "Europe/Paris"

	// NmsSettingsTimezoneEuropePodgorica captures enum value "Europe/Podgorica"
	NmsSettingsTimezoneEuropePodgorica string = "Europe/Podgorica"

	// NmsSettingsTimezoneEuropePrague captures enum value "Europe/Prague"
	NmsSettingsTimezoneEuropePrague string = "Europe/Prague"

	// NmsSettingsTimezoneEuropeRiga captures enum value "Europe/Riga"
	NmsSettingsTimezoneEuropeRiga string = "Europe/Riga"

	// NmsSettingsTimezoneEuropeRome captures enum value "Europe/Rome"
	NmsSettingsTimezoneEuropeRome string = "Europe/Rome"

	// NmsSettingsTimezoneEuropeSamara captures enum value "Europe/Samara"
	NmsSettingsTimezoneEuropeSamara string = "Europe/Samara"

	// NmsSettingsTimezoneEuropeSanMarino captures enum value "Europe/San_Marino"
	NmsSettingsTimezoneEuropeSanMarino string = "Europe/San_Marino"

	// NmsSettingsTimezoneEuropeSarajevo captures enum value "Europe/Sarajevo"
	NmsSettingsTimezoneEuropeSarajevo string = "Europe/Sarajevo"

	// NmsSettingsTimezoneEuropeSaratov captures enum value "Europe/Saratov"
	NmsSettingsTimezoneEuropeSaratov string = "Europe/Saratov"

	// NmsSettingsTimezoneEuropeSimferopol captures enum value "Europe/Simferopol"
	NmsSettingsTimezoneEuropeSimferopol string = "Europe/Simferopol"

	// NmsSettingsTimezoneEuropeSkopje captures enum value "Europe/Skopje"
	NmsSettingsTimezoneEuropeSkopje string = "Europe/Skopje"

	// NmsSettingsTimezoneEuropeSofia captures enum value "Europe/Sofia"
	NmsSettingsTimezoneEuropeSofia string = "Europe/Sofia"

	// NmsSettingsTimezoneEuropeStockholm captures enum value "Europe/Stockholm"
	NmsSettingsTimezoneEuropeStockholm string = "Europe/Stockholm"

	// NmsSettingsTimezoneEuropeTallinn captures enum value "Europe/Tallinn"
	NmsSettingsTimezoneEuropeTallinn string = "Europe/Tallinn"

	// NmsSettingsTimezoneEuropeTirane captures enum value "Europe/Tirane"
	NmsSettingsTimezoneEuropeTirane string = "Europe/Tirane"

	// NmsSettingsTimezoneEuropeTiraspol captures enum value "Europe/Tiraspol"
	NmsSettingsTimezoneEuropeTiraspol string = "Europe/Tiraspol"

	// NmsSettingsTimezoneEuropeUlyanovsk captures enum value "Europe/Ulyanovsk"
	NmsSettingsTimezoneEuropeUlyanovsk string = "Europe/Ulyanovsk"

	// NmsSettingsTimezoneEuropeUzhgorod captures enum value "Europe/Uzhgorod"
	NmsSettingsTimezoneEuropeUzhgorod string = "Europe/Uzhgorod"

	// NmsSettingsTimezoneEuropeVaduz captures enum value "Europe/Vaduz"
	NmsSettingsTimezoneEuropeVaduz string = "Europe/Vaduz"

	// NmsSettingsTimezoneEuropeVatican captures enum value "Europe/Vatican"
	NmsSettingsTimezoneEuropeVatican string = "Europe/Vatican"

	// NmsSettingsTimezoneEuropeVienna captures enum value "Europe/Vienna"
	NmsSettingsTimezoneEuropeVienna string = "Europe/Vienna"

	// NmsSettingsTimezoneEuropeVilnius captures enum value "Europe/Vilnius"
	NmsSettingsTimezoneEuropeVilnius string = "Europe/Vilnius"

	// NmsSettingsTimezoneEuropeVolgograd captures enum value "Europe/Volgograd"
	NmsSettingsTimezoneEuropeVolgograd string = "Europe/Volgograd"

	// NmsSettingsTimezoneEuropeWarsaw captures enum value "Europe/Warsaw"
	NmsSettingsTimezoneEuropeWarsaw string = "Europe/Warsaw"

	// NmsSettingsTimezoneEuropeZagreb captures enum value "Europe/Zagreb"
	NmsSettingsTimezoneEuropeZagreb string = "Europe/Zagreb"

	// NmsSettingsTimezoneEuropeZaporozhye captures enum value "Europe/Zaporozhye"
	NmsSettingsTimezoneEuropeZaporozhye string = "Europe/Zaporozhye"

	// NmsSettingsTimezoneEuropeZurich captures enum value "Europe/Zurich"
	NmsSettingsTimezoneEuropeZurich string = "Europe/Zurich"

	// NmsSettingsTimezoneGB captures enum value "GB"
	NmsSettingsTimezoneGB string = "GB"

	// NmsSettingsTimezoneGBEire captures enum value "GB-Eire"
	NmsSettingsTimezoneGBEire string = "GB-Eire"

	// NmsSettingsTimezoneGMT captures enum value "GMT"
	NmsSettingsTimezoneGMT string = "GMT"

	// NmsSettingsTimezoneGMT0 captures enum value "GMT+0"
	NmsSettingsTimezoneGMT0 string = "GMT+0"

	// NmsSettingsTimezoneGMT0 captures enum value "GMT-0"
	NmsSettingsTimezoneGMT0 string = "GMT-0"

	// NmsSettingsTimezoneGMT0 captures enum value "GMT0"
	NmsSettingsTimezoneGMT0 string = "GMT0"

	// NmsSettingsTimezoneGreenwich captures enum value "Greenwich"
	NmsSettingsTimezoneGreenwich string = "Greenwich"

	// NmsSettingsTimezoneHST captures enum value "HST"
	NmsSettingsTimezoneHST string = "HST"

	// NmsSettingsTimezoneHongkong captures enum value "Hongkong"
	NmsSettingsTimezoneHongkong string = "Hongkong"

	// NmsSettingsTimezoneIceland captures enum value "Iceland"
	NmsSettingsTimezoneIceland string = "Iceland"

	// NmsSettingsTimezoneIndianAntananarivo captures enum value "Indian/Antananarivo"
	NmsSettingsTimezoneIndianAntananarivo string = "Indian/Antananarivo"

	// NmsSettingsTimezoneIndianChagos captures enum value "Indian/Chagos"
	NmsSettingsTimezoneIndianChagos string = "Indian/Chagos"

	// NmsSettingsTimezoneIndianChristmas captures enum value "Indian/Christmas"
	NmsSettingsTimezoneIndianChristmas string = "Indian/Christmas"

	// NmsSettingsTimezoneIndianCocos captures enum value "Indian/Cocos"
	NmsSettingsTimezoneIndianCocos string = "Indian/Cocos"

	// NmsSettingsTimezoneIndianComoro captures enum value "Indian/Comoro"
	NmsSettingsTimezoneIndianComoro string = "Indian/Comoro"

	// NmsSettingsTimezoneIndianKerguelen captures enum value "Indian/Kerguelen"
	NmsSettingsTimezoneIndianKerguelen string = "Indian/Kerguelen"

	// NmsSettingsTimezoneIndianMahe captures enum value "Indian/Mahe"
	NmsSettingsTimezoneIndianMahe string = "Indian/Mahe"

	// NmsSettingsTimezoneIndianMaldives captures enum value "Indian/Maldives"
	NmsSettingsTimezoneIndianMaldives string = "Indian/Maldives"

	// NmsSettingsTimezoneIndianMauritius captures enum value "Indian/Mauritius"
	NmsSettingsTimezoneIndianMauritius string = "Indian/Mauritius"

	// NmsSettingsTimezoneIndianMayotte captures enum value "Indian/Mayotte"
	NmsSettingsTimezoneIndianMayotte string = "Indian/Mayotte"

	// NmsSettingsTimezoneIndianReunion captures enum value "Indian/Reunion"
	NmsSettingsTimezoneIndianReunion string = "Indian/Reunion"

	// NmsSettingsTimezoneIran captures enum value "Iran"
	NmsSettingsTimezoneIran string = "Iran"

	// NmsSettingsTimezoneIsrael captures enum value "Israel"
	NmsSettingsTimezoneIsrael string = "Israel"

	// NmsSettingsTimezoneJamaica captures enum value "Jamaica"
	NmsSettingsTimezoneJamaica string = "Jamaica"

	// NmsSettingsTimezoneJapan captures enum value "Japan"
	NmsSettingsTimezoneJapan string = "Japan"

	// NmsSettingsTimezoneKwajalein captures enum value "Kwajalein"
	NmsSettingsTimezoneKwajalein string = "Kwajalein"

	// NmsSettingsTimezoneLibya captures enum value "Libya"
	NmsSettingsTimezoneLibya string = "Libya"

	// NmsSettingsTimezoneMET captures enum value "MET"
	NmsSettingsTimezoneMET string = "MET"

	// NmsSettingsTimezoneMST captures enum value "MST"
	NmsSettingsTimezoneMST string = "MST"

	// NmsSettingsTimezoneMST7MDT captures enum value "MST7MDT"
	NmsSettingsTimezoneMST7MDT string = "MST7MDT"

	// NmsSettingsTimezoneMexicoBajaNorte captures enum value "Mexico/BajaNorte"
	NmsSettingsTimezoneMexicoBajaNorte string = "Mexico/BajaNorte"

	// NmsSettingsTimezoneMexicoBajaSur captures enum value "Mexico/BajaSur"
	NmsSettingsTimezoneMexicoBajaSur string = "Mexico/BajaSur"

	// NmsSettingsTimezoneMexicoGeneral captures enum value "Mexico/General"
	NmsSettingsTimezoneMexicoGeneral string = "Mexico/General"

	// NmsSettingsTimezoneNZ captures enum value "NZ"
	NmsSettingsTimezoneNZ string = "NZ"

	// NmsSettingsTimezoneNZCHAT captures enum value "NZ-CHAT"
	NmsSettingsTimezoneNZCHAT string = "NZ-CHAT"

	// NmsSettingsTimezoneNavajo captures enum value "Navajo"
	NmsSettingsTimezoneNavajo string = "Navajo"

	// NmsSettingsTimezonePRC captures enum value "PRC"
	NmsSettingsTimezonePRC string = "PRC"

	// NmsSettingsTimezonePST8PDT captures enum value "PST8PDT"
	NmsSettingsTimezonePST8PDT string = "PST8PDT"

	// NmsSettingsTimezonePacificApia captures enum value "Pacific/Apia"
	NmsSettingsTimezonePacificApia string = "Pacific/Apia"

	// NmsSettingsTimezonePacificAuckland captures enum value "Pacific/Auckland"
	NmsSettingsTimezonePacificAuckland string = "Pacific/Auckland"

	// NmsSettingsTimezonePacificBougainville captures enum value "Pacific/Bougainville"
	NmsSettingsTimezonePacificBougainville string = "Pacific/Bougainville"

	// NmsSettingsTimezonePacificChatham captures enum value "Pacific/Chatham"
	NmsSettingsTimezonePacificChatham string = "Pacific/Chatham"

	// NmsSettingsTimezonePacificChuuk captures enum value "Pacific/Chuuk"
	NmsSettingsTimezonePacificChuuk string = "Pacific/Chuuk"

	// NmsSettingsTimezonePacificEaster captures enum value "Pacific/Easter"
	NmsSettingsTimezonePacificEaster string = "Pacific/Easter"

	// NmsSettingsTimezonePacificEfate captures enum value "Pacific/Efate"
	NmsSettingsTimezonePacificEfate string = "Pacific/Efate"

	// NmsSettingsTimezonePacificEnderbury captures enum value "Pacific/Enderbury"
	NmsSettingsTimezonePacificEnderbury string = "Pacific/Enderbury"

	// NmsSettingsTimezonePacificFakaofo captures enum value "Pacific/Fakaofo"
	NmsSettingsTimezonePacificFakaofo string = "Pacific/Fakaofo"

	// NmsSettingsTimezonePacificFiji captures enum value "Pacific/Fiji"
	NmsSettingsTimezonePacificFiji string = "Pacific/Fiji"

	// NmsSettingsTimezonePacificFunafuti captures enum value "Pacific/Funafuti"
	NmsSettingsTimezonePacificFunafuti string = "Pacific/Funafuti"

	// NmsSettingsTimezonePacificGalapagos captures enum value "Pacific/Galapagos"
	NmsSettingsTimezonePacificGalapagos string = "Pacific/Galapagos"

	// NmsSettingsTimezonePacificGambier captures enum value "Pacific/Gambier"
	NmsSettingsTimezonePacificGambier string = "Pacific/Gambier"

	// NmsSettingsTimezonePacificGuadalcanal captures enum value "Pacific/Guadalcanal"
	NmsSettingsTimezonePacificGuadalcanal string = "Pacific/Guadalcanal"

	// NmsSettingsTimezonePacificGuam captures enum value "Pacific/Guam"
	NmsSettingsTimezonePacificGuam string = "Pacific/Guam"

	// NmsSettingsTimezonePacificHonolulu captures enum value "Pacific/Honolulu"
	NmsSettingsTimezonePacificHonolulu string = "Pacific/Honolulu"

	// NmsSettingsTimezonePacificJohnston captures enum value "Pacific/Johnston"
	NmsSettingsTimezonePacificJohnston string = "Pacific/Johnston"

	// NmsSettingsTimezonePacificKiritimati captures enum value "Pacific/Kiritimati"
	NmsSettingsTimezonePacificKiritimati string = "Pacific/Kiritimati"

	// NmsSettingsTimezonePacificKosrae captures enum value "Pacific/Kosrae"
	NmsSettingsTimezonePacificKosrae string = "Pacific/Kosrae"

	// NmsSettingsTimezonePacificKwajalein captures enum value "Pacific/Kwajalein"
	NmsSettingsTimezonePacificKwajalein string = "Pacific/Kwajalein"

	// NmsSettingsTimezonePacificMajuro captures enum value "Pacific/Majuro"
	NmsSettingsTimezonePacificMajuro string = "Pacific/Majuro"

	// NmsSettingsTimezonePacificMarquesas captures enum value "Pacific/Marquesas"
	NmsSettingsTimezonePacificMarquesas string = "Pacific/Marquesas"

	// NmsSettingsTimezonePacificMidway captures enum value "Pacific/Midway"
	NmsSettingsTimezonePacificMidway string = "Pacific/Midway"

	// NmsSettingsTimezonePacificNauru captures enum value "Pacific/Nauru"
	NmsSettingsTimezonePacificNauru string = "Pacific/Nauru"

	// NmsSettingsTimezonePacificNiue captures enum value "Pacific/Niue"
	NmsSettingsTimezonePacificNiue string = "Pacific/Niue"

	// NmsSettingsTimezonePacificNorfolk captures enum value "Pacific/Norfolk"
	NmsSettingsTimezonePacificNorfolk string = "Pacific/Norfolk"

	// NmsSettingsTimezonePacificNoumea captures enum value "Pacific/Noumea"
	NmsSettingsTimezonePacificNoumea string = "Pacific/Noumea"

	// NmsSettingsTimezonePacificPagoPago captures enum value "Pacific/Pago_Pago"
	NmsSettingsTimezonePacificPagoPago string = "Pacific/Pago_Pago"

	// NmsSettingsTimezonePacificPalau captures enum value "Pacific/Palau"
	NmsSettingsTimezonePacificPalau string = "Pacific/Palau"

	// NmsSettingsTimezonePacificPitcairn captures enum value "Pacific/Pitcairn"
	NmsSettingsTimezonePacificPitcairn string = "Pacific/Pitcairn"

	// NmsSettingsTimezonePacificPohnpei captures enum value "Pacific/Pohnpei"
	NmsSettingsTimezonePacificPohnpei string = "Pacific/Pohnpei"

	// NmsSettingsTimezonePacificPonape captures enum value "Pacific/Ponape"
	NmsSettingsTimezonePacificPonape string = "Pacific/Ponape"

	// NmsSettingsTimezonePacificPortMoresby captures enum value "Pacific/Port_Moresby"
	NmsSettingsTimezonePacificPortMoresby string = "Pacific/Port_Moresby"

	// NmsSettingsTimezonePacificRarotonga captures enum value "Pacific/Rarotonga"
	NmsSettingsTimezonePacificRarotonga string = "Pacific/Rarotonga"

	// NmsSettingsTimezonePacificSaipan captures enum value "Pacific/Saipan"
	NmsSettingsTimezonePacificSaipan string = "Pacific/Saipan"

	// NmsSettingsTimezonePacificSamoa captures enum value "Pacific/Samoa"
	NmsSettingsTimezonePacificSamoa string = "Pacific/Samoa"

	// NmsSettingsTimezonePacificTahiti captures enum value "Pacific/Tahiti"
	NmsSettingsTimezonePacificTahiti string = "Pacific/Tahiti"

	// NmsSettingsTimezonePacificTarawa captures enum value "Pacific/Tarawa"
	NmsSettingsTimezonePacificTarawa string = "Pacific/Tarawa"

	// NmsSettingsTimezonePacificTongatapu captures enum value "Pacific/Tongatapu"
	NmsSettingsTimezonePacificTongatapu string = "Pacific/Tongatapu"

	// NmsSettingsTimezonePacificTruk captures enum value "Pacific/Truk"
	NmsSettingsTimezonePacificTruk string = "Pacific/Truk"

	// NmsSettingsTimezonePacificWake captures enum value "Pacific/Wake"
	NmsSettingsTimezonePacificWake string = "Pacific/Wake"

	// NmsSettingsTimezonePacificWallis captures enum value "Pacific/Wallis"
	NmsSettingsTimezonePacificWallis string = "Pacific/Wallis"

	// NmsSettingsTimezonePacificYap captures enum value "Pacific/Yap"
	NmsSettingsTimezonePacificYap string = "Pacific/Yap"

	// NmsSettingsTimezonePoland captures enum value "Poland"
	NmsSettingsTimezonePoland string = "Poland"

	// NmsSettingsTimezonePortugal captures enum value "Portugal"
	NmsSettingsTimezonePortugal string = "Portugal"

	// NmsSettingsTimezoneROC captures enum value "ROC"
	NmsSettingsTimezoneROC string = "ROC"

	// NmsSettingsTimezoneROK captures enum value "ROK"
	NmsSettingsTimezoneROK string = "ROK"

	// NmsSettingsTimezoneSingapore captures enum value "Singapore"
	NmsSettingsTimezoneSingapore string = "Singapore"

	// NmsSettingsTimezoneTurkey captures enum value "Turkey"
	NmsSettingsTimezoneTurkey string = "Turkey"

	// NmsSettingsTimezoneUCT captures enum value "UCT"
	NmsSettingsTimezoneUCT string = "UCT"

	// NmsSettingsTimezoneUSAlaska captures enum value "US/Alaska"
	NmsSettingsTimezoneUSAlaska string = "US/Alaska"

	// NmsSettingsTimezoneUSAleutian captures enum value "US/Aleutian"
	NmsSettingsTimezoneUSAleutian string = "US/Aleutian"

	// NmsSettingsTimezoneUSArizona captures enum value "US/Arizona"
	NmsSettingsTimezoneUSArizona string = "US/Arizona"

	// NmsSettingsTimezoneUSCentral captures enum value "US/Central"
	NmsSettingsTimezoneUSCentral string = "US/Central"

	// NmsSettingsTimezoneUSEastIndiana captures enum value "US/East-Indiana"
	NmsSettingsTimezoneUSEastIndiana string = "US/East-Indiana"

	// NmsSettingsTimezoneUSEastern captures enum value "US/Eastern"
	NmsSettingsTimezoneUSEastern string = "US/Eastern"

	// NmsSettingsTimezoneUSHawaii captures enum value "US/Hawaii"
	NmsSettingsTimezoneUSHawaii string = "US/Hawaii"

	// NmsSettingsTimezoneUSIndianaStarke captures enum value "US/Indiana-Starke"
	NmsSettingsTimezoneUSIndianaStarke string = "US/Indiana-Starke"

	// NmsSettingsTimezoneUSMichigan captures enum value "US/Michigan"
	NmsSettingsTimezoneUSMichigan string = "US/Michigan"

	// NmsSettingsTimezoneUSMountain captures enum value "US/Mountain"
	NmsSettingsTimezoneUSMountain string = "US/Mountain"

	// NmsSettingsTimezoneUSPacific captures enum value "US/Pacific"
	NmsSettingsTimezoneUSPacific string = "US/Pacific"

	// NmsSettingsTimezoneUSPacificNew captures enum value "US/Pacific-New"
	NmsSettingsTimezoneUSPacificNew string = "US/Pacific-New"

	// NmsSettingsTimezoneUSSamoa captures enum value "US/Samoa"
	NmsSettingsTimezoneUSSamoa string = "US/Samoa"

	// NmsSettingsTimezoneUTC captures enum value "UTC"
	NmsSettingsTimezoneUTC string = "UTC"

	// NmsSettingsTimezoneUniversal captures enum value "Universal"
	NmsSettingsTimezoneUniversal string = "Universal"

	// NmsSettingsTimezoneWSU captures enum value "W-SU"
	NmsSettingsTimezoneWSU string = "W-SU"

	// NmsSettingsTimezoneWET captures enum value "WET"
	NmsSettingsTimezoneWET string = "WET"

	// NmsSettingsTimezoneZulu captures enum value "Zulu"
	NmsSettingsTimezoneZulu string = "Zulu"
)

// prop value enum
func (m *NmsSettings) validateTimezoneEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettingsTypeTimezonePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings) validateTimezone(formats strfmt.Registry) error {

	if err := validate.Required("timezone", "body", m.Timezone); err != nil {
		return err
	}

	// value enum
	if err := m.validateTimezoneEnum("timezone", "body", *m.Timezone); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateTrafficShapingAdjustment(formats strfmt.Registry) error {

	if swag.IsZero(m.TrafficShapingAdjustment) { // not required
		return nil
	}

	if err := validate.MinimumInt("trafficShapingAdjustment", "body", int64(m.TrafficShapingAdjustment), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("trafficShapingAdjustment", "body", int64(m.TrafficShapingAdjustment), 100, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateUcrmEnabled(formats strfmt.Registry) error {

	if err := validate.Required("ucrmEnabled", "body", m.UcrmEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateUpgradeGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("upgradeGracePeriod", "body", m.UpgradeGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("upgradeGracePeriod", "body", int64(*m.UpgradeGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("upgradeGracePeriod", "body", int64(*m.UpgradeGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings) validateUseLetsEncrypt(formats strfmt.Registry) error {

	if err := validate.Required("useLetsEncrypt", "body", m.UseLetsEncrypt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NmsSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NmsSettings) UnmarshalBinary(b []byte) error {
	var res NmsSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
