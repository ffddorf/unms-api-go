// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NmsSettings1 nms settings 1
// swagger:model NmsSettings 1
type NmsSettings1 struct {

	// allow auto update ubnt firmwares
	// Required: true
	AllowAutoUpdateUbntFirmwares *bool `json:"allowAutoUpdateUbntFirmwares"`

	// allow beta firmwares
	// Required: true
	AllowBetaFirmwares *bool `json:"allowBetaFirmwares"`

	// allow logging to logentries
	// Required: true
	AllowLoggingToLogentries *bool `json:"allowLoggingToLogentries"`

	// allow logging to sentry
	// Required: true
	AllowLoggingToSentry *bool `json:"allowLoggingToSentry"`

	// When true UNMS will look for latest UNMS version among beta releases.
	AllowUnmsBetaVersion bool `json:"allowUnmsBetaVersion,omitempty"`

	// auto backups
	// Required: true
	AutoBackups *bool `json:"autoBackups"`

	// country
	// Required: true
	// Enum: [XX XY AF AX AL DZ AS AD AO AI AQ AG AR AM AW AU AT AZ BS BH BD BB BY BE BZ BJ BM BT BO BQ BA BW BV BR IO BN BG BF BI CV KH CM CA KY CF TD CL CN CX CC CO KM CK CR CI HR CW CY CZ CD DK DJ DM DO EC EG SV GQ ER EE SZ ET FK FO FJ FI FR GF PF TF GA GM GE DE GH GI GR GL GD GP GU GT GG GN GW GY HT HM HN HK HU IS IN ID IQ IE IM IL IT JM JP JE JO KZ KE KI KW KG LA LV LB LS LR LY LI LT LU MO MK MG MW MY MV ML MT MH MQ MR MU YT MX FM MD MC MN ME MS MA MZ MM NA NR NP NL NC NZ NI NE NG NU NF MP NO OM PK PW PA PG PY PE PH PN PL PT PR QA KR RS SC CG RE RO RU RW BL SH KN LC MF PM VC WS SM ST SA SN SL SG SX SK SI SB SO ZA GS SS ES LK PS SR SJ SE CH TW TJ TZ TH TL TG TK TO TT TN TR TM TC TV UG UA AE GB US UY UZ VU VA VE VN VG VI WF EH YE ZM ZW]
	Country *string `json:"country"`

	// date format
	// Required: true
	// Enum: [D MMM YYYY Do MMM YYYY DD MMM YYYY MMM D, YYYY MMM Do, YYYY MMM DD, YYYY YYYY-MM-DD DD-MM-YYYY D.M.YYYY DD.MM.YYYY D/M/YYYY DD/MM/YYYY M/D/YYYY MM/DD/YYYY]
	DateFormat *string `json:"dateFormat"`

	// default grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	DefaultGracePeriod *int64 `json:"defaultGracePeriod"`

	// default qos propagation
	// Required: true
	// Enum: [all gateway]
	DefaultQosPropagation *string `json:"defaultQosPropagation"`

	// device auto backups
	// Required: true
	DeviceAutoBackups *bool `json:"deviceAutoBackups"`

	// device number of backups
	// Maximum: 100
	// Minimum: 1
	DeviceNumberOfBackups int64 `json:"deviceNumberOfBackups,omitempty"`

	// device ping address
	// Required: true
	DevicePingAddress *string `json:"devicePingAddress"`

	// device ping address mode
	// Required: true
	// Enum: [auto custom]
	DevicePingAddressMode *string `json:"devicePingAddressMode"`

	// device ping interval normal
	// Required: true
	// Maximum: 200000
	// Minimum: 10000
	DevicePingIntervalNormal *float64 `json:"devicePingIntervalNormal"`

	// device ping interval outage
	// Required: true
	// Maximum: 100000
	// Minimum: 2000
	DevicePingIntervalOutage *float64 `json:"devicePingIntervalOutage"`

	// device transmission frequencies
	DeviceTransmissionFrequencies *DeviceTransmissionFrequencies `json:"deviceTransmissionFrequencies,omitempty"`

	// device transmission profile
	// Required: true
	// Enum: [auto custom]
	DeviceTransmissionProfile *string `json:"deviceTransmissionProfile"`

	// discovery allow local scan
	// Required: true
	DiscoveryAllowLocalScan *bool `json:"discoveryAllowLocalScan"`

	// discovery allow remote scan
	// Required: true
	DiscoveryAllowRemoteScan *bool `json:"discoveryAllowRemoteScan"`

	// discovery allow unsecured channels
	// Required: true
	DiscoveryAllowUnsecuredChannels *bool `json:"discoveryAllowUnsecuredChannels"`

	// discovery auto configuration
	// Required: true
	DiscoveryAutoConfiguration *bool `json:"discoveryAutoConfiguration"`

	// discovery hide black box
	// Required: true
	DiscoveryHideBlackBox *bool `json:"discoveryHideBlackBox"`

	// discovery snmp community
	// Required: true
	DiscoverySnmpCommunity *string `json:"discoverySnmpCommunity"`

	// google maps Api key
	// Required: true
	GoogleMapsAPIKey *string `json:"googleMapsApiKey"`

	// home page
	// Required: true
	// Enum: [unms ucrm]
	HomePage *string `json:"homePage"`

	// hostname
	// Required: true
	Hostname *string `json:"hostname"`

	// instance Id
	// Required: true
	InstanceID *string `json:"instanceId"`

	// is isp
	// Required: true
	IsIsp *bool `json:"isIsp"`

	// lets encrypt error
	// Required: true
	LetsEncryptError *string `json:"letsEncryptError"`

	// lets encrypt timestamp
	// Required: true
	LetsEncryptTimestamp *float64 `json:"letsEncryptTimestamp"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowFriday bool `json:"maintenanceWindowFriday,omitempty"`

	// Hour when maintenance window start.
	// Maximum: 24
	// Minimum: 0
	MaintenanceWindowFromTime *int64 `json:"maintenanceWindowFromTime,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowMonday bool `json:"maintenanceWindowMonday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowSaturday bool `json:"maintenanceWindowSaturday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowSunday bool `json:"maintenanceWindowSunday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowThursday bool `json:"maintenanceWindowThursday,omitempty"`

	// Hour when maintenance window end.
	// Maximum: 24
	// Minimum: 0
	MaintenanceWindowToTime *int64 `json:"maintenanceWindowToTime,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowTuesday bool `json:"maintenanceWindowTuesday,omitempty"`

	// Allow automatically upgrade firmware in this day.
	MaintenanceWindowWednesday bool `json:"maintenanceWindowWednesday,omitempty"`

	// maps provider
	// Required: true
	// Enum: [GoogleMaps OpenStreetMap]
	MapsProvider *string `json:"mapsProvider"`

	// When true reachability check will be skipped.
	// Required: true
	MigrationForceModeEnabled *bool `json:"migrationForceModeEnabled"`

	// migration hostname
	// Required: true
	MigrationHostname *string `json:"migrationHostname"`

	// When true all new device connections and connected devices will change UNMS Key.
	// Required: true
	MigrationModeEnabled *bool `json:"migrationModeEnabled"`

	// UNMS port to migrate to.
	// Required: true
	// Maximum: 65535
	// Minimum: 1
	MigrationPort *int64 `json:"migrationPort"`

	// restart grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	RestartGracePeriod *int64 `json:"restartGracePeriod"`

	// time format
	// Required: true
	// Enum: [H:mm h:mm a]
	TimeFormat *string `json:"timeFormat"`

	// timezone
	// Required: true
	// Enum: [Africa/Abidjan Africa/Accra Africa/Addis_Ababa Africa/Algiers Africa/Asmara Africa/Asmera Africa/Bamako Africa/Bangui Africa/Banjul Africa/Bissau Africa/Blantyre Africa/Brazzaville Africa/Bujumbura Africa/Cairo Africa/Casablanca Africa/Ceuta Africa/Conakry Africa/Dakar Africa/Dar_es_Salaam Africa/Djibouti Africa/Douala Africa/El_Aaiun Africa/Freetown Africa/Gaborone Africa/Harare Africa/Johannesburg Africa/Juba Africa/Kampala Africa/Khartoum Africa/Kigali Africa/Kinshasa Africa/Lagos Africa/Libreville Africa/Lome Africa/Luanda Africa/Lubumbashi Africa/Lusaka Africa/Malabo Africa/Maputo Africa/Maseru Africa/Mbabane Africa/Mogadishu Africa/Monrovia Africa/Nairobi Africa/Ndjamena Africa/Niamey Africa/Nouakchott Africa/Ouagadougou Africa/Porto-Novo Africa/Sao_Tome Africa/Timbuktu Africa/Tripoli Africa/Tunis Africa/Windhoek America/Adak America/Anchorage America/Anguilla America/Antigua America/Araguaina America/Argentina/Buenos_Aires America/Argentina/Catamarca America/Argentina/ComodRivadavia America/Argentina/Cordoba America/Argentina/Jujuy America/Argentina/La_Rioja America/Argentina/Mendoza America/Argentina/Rio_Gallegos America/Argentina/Salta America/Argentina/San_Juan America/Argentina/San_Luis America/Argentina/Tucuman America/Argentina/Ushuaia America/Aruba America/Asuncion America/Atikokan America/Atka America/Bahia America/Bahia_Banderas America/Barbados America/Belem America/Belize America/Blanc-Sablon America/Boa_Vista America/Bogota America/Boise America/Buenos_Aires America/Cambridge_Bay America/Campo_Grande America/Cancun America/Caracas America/Catamarca America/Cayenne America/Cayman America/Chicago America/Chihuahua America/Coral_Harbour America/Cordoba America/Costa_Rica America/Creston America/Cuiaba America/Curacao America/Danmarkshavn America/Dawson America/Dawson_Creek America/Denver America/Detroit America/Dominica America/Edmonton America/Eirunepe America/El_Salvador America/Ensenada America/Fort_Nelson America/Fort_Wayne America/Fortaleza America/Glace_Bay America/Godthab America/Goose_Bay America/Grand_Turk America/Grenada America/Guadeloupe America/Guatemala America/Guayaquil America/Guyana America/Halifax America/Havana America/Hermosillo America/Indiana/Indianapolis America/Indiana/Knox America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Tell_City America/Indiana/Vevay America/Indiana/Vincennes America/Indiana/Winamac America/Indianapolis America/Inuvik America/Iqaluit America/Jamaica America/Jujuy America/Juneau America/Kentucky/Louisville America/Kentucky/Monticello America/Knox_IN America/Kralendijk America/La_Paz America/Lima America/Los_Angeles America/Louisville America/Lower_Princes America/Maceio America/Managua America/Manaus America/Marigot America/Martinique America/Matamoros America/Mazatlan America/Mendoza America/Menominee America/Merida America/Metlakatla America/Mexico_City America/Miquelon America/Moncton America/Monterrey America/Montevideo America/Montreal America/Montserrat America/Nassau America/New_York America/Nipigon America/Nome America/Noronha America/North_Dakota/Beulah America/North_Dakota/Center America/North_Dakota/New_Salem America/Ojinaga America/Panama America/Pangnirtung America/Paramaribo America/Phoenix America/Port-au-Prince America/Port_of_Spain America/Porto_Acre America/Porto_Velho America/Puerto_Rico America/Punta_Arenas America/Rainy_River America/Rankin_Inlet America/Recife America/Regina America/Resolute America/Rio_Branco America/Rosario America/Santa_Isabel America/Santarem America/Santiago America/Santo_Domingo America/Sao_Paulo America/Scoresbysund America/Shiprock America/Sitka America/St_Barthelemy America/St_Johns America/St_Kitts America/St_Lucia America/St_Thomas America/St_Vincent America/Swift_Current America/Tegucigalpa America/Thule America/Thunder_Bay America/Tijuana America/Toronto America/Tortola America/Vancouver America/Virgin America/Whitehorse America/Winnipeg America/Yakutat America/Yellowknife Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Macquarie Antarctica/Mawson Antarctica/McMurdo Antarctica/Palmer Antarctica/Rothera Antarctica/South_Pole Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Arctic/Longyearbyen Asia/Aden Asia/Almaty Asia/Amman Asia/Anadyr Asia/Aqtau Asia/Aqtobe Asia/Ashgabat Asia/Ashkhabad Asia/Atyrau Asia/Baghdad Asia/Bahrain Asia/Baku Asia/Bangkok Asia/Barnaul Asia/Beirut Asia/Bishkek Asia/Brunei Asia/Calcutta Asia/Chita Asia/Choibalsan Asia/Chongqing Asia/Chungking Asia/Colombo Asia/Dacca Asia/Damascus Asia/Dhaka Asia/Dili Asia/Dubai Asia/Dushanbe Asia/Famagusta Asia/Gaza Asia/Harbin Asia/Hebron Asia/Ho_Chi_Minh Asia/Hong_Kong Asia/Hovd Asia/Irkutsk Asia/Istanbul Asia/Jakarta Asia/Jayapura Asia/Jerusalem Asia/Kabul Asia/Kamchatka Asia/Karachi Asia/Kashgar Asia/Kathmandu Asia/Katmandu Asia/Khandyga Asia/Kolkata Asia/Krasnoyarsk Asia/Kuala_Lumpur Asia/Kuching Asia/Kuwait Asia/Macao Asia/Macau Asia/Magadan Asia/Makassar Asia/Manila Asia/Muscat Asia/Nicosia Asia/Novokuznetsk Asia/Novosibirsk Asia/Omsk Asia/Oral Asia/Phnom_Penh Asia/Pontianak Asia/Pyongyang Asia/Qatar Asia/Qyzylorda Asia/Rangoon Asia/Riyadh Asia/Saigon Asia/Sakhalin Asia/Samarkand Asia/Seoul Asia/Shanghai Asia/Singapore Asia/Srednekolymsk Asia/Taipei Asia/Tashkent Asia/Tbilisi Asia/Tehran Asia/Tel_Aviv Asia/Thimbu Asia/Thimphu Asia/Tokyo Asia/Tomsk Asia/Ujung_Pandang Asia/Ulaanbaatar Asia/Ulan_Bator Asia/Urumqi Asia/Ust-Nera Asia/Vientiane Asia/Vladivostok Asia/Yakutsk Asia/Yangon Asia/Yekaterinburg Asia/Yerevan Atlantic/Azores Atlantic/Bermuda Atlantic/Canary Atlantic/Cape_Verde Atlantic/Faeroe Atlantic/Faroe Atlantic/Jan_Mayen Atlantic/Madeira Atlantic/Reykjavik Atlantic/South_Georgia Atlantic/St_Helena Atlantic/Stanley Australia/ACT Australia/Adelaide Australia/Brisbane Australia/Broken_Hill Australia/Canberra Australia/Currie Australia/Darwin Australia/Eucla Australia/Hobart Australia/LHI Australia/Lindeman Australia/Lord_Howe Australia/Melbourne Australia/NSW Australia/North Australia/Perth Australia/Queensland Australia/South Australia/Sydney Australia/Tasmania Australia/Victoria Australia/West Australia/Yancowinna Brazil/Acre Brazil/DeNoronha Brazil/East Brazil/West CET CST6CDT Canada/Atlantic Canada/Central Canada/Eastern Canada/Mountain Canada/Newfoundland Canada/Pacific Canada/Saskatchewan Canada/Yukon Chile/Continental Chile/EasterIsland Cuba EET EST EST5EDT Egypt Eire Etc/GMT Etc/GMT+0 Etc/GMT+1 Etc/GMT+10 Etc/GMT+11 Etc/GMT+12 Etc/GMT+2 Etc/GMT+3 Etc/GMT+4 Etc/GMT+5 Etc/GMT+6 Etc/GMT+7 Etc/GMT+8 Etc/GMT+9 Etc/GMT-0 Etc/GMT-1 Etc/GMT-10 Etc/GMT-11 Etc/GMT-12 Etc/GMT-13 Etc/GMT-14 Etc/GMT-2 Etc/GMT-3 Etc/GMT-4 Etc/GMT-5 Etc/GMT-6 Etc/GMT-7 Etc/GMT-8 Etc/GMT-9 Etc/GMT0 Etc/Greenwich Etc/UCT Etc/UTC Etc/Universal Etc/Zulu Europe/Amsterdam Europe/Andorra Europe/Astrakhan Europe/Athens Europe/Belfast Europe/Belgrade Europe/Berlin Europe/Bratislava Europe/Brussels Europe/Bucharest Europe/Budapest Europe/Busingen Europe/Chisinau Europe/Copenhagen Europe/Dublin Europe/Gibraltar Europe/Guernsey Europe/Helsinki Europe/Isle_of_Man Europe/Istanbul Europe/Jersey Europe/Kaliningrad Europe/Kiev Europe/Kirov Europe/Lisbon Europe/Ljubljana Europe/London Europe/Luxembourg Europe/Madrid Europe/Malta Europe/Mariehamn Europe/Minsk Europe/Monaco Europe/Moscow Europe/Nicosia Europe/Oslo Europe/Paris Europe/Podgorica Europe/Prague Europe/Riga Europe/Rome Europe/Samara Europe/San_Marino Europe/Sarajevo Europe/Saratov Europe/Simferopol Europe/Skopje Europe/Sofia Europe/Stockholm Europe/Tallinn Europe/Tirane Europe/Tiraspol Europe/Ulyanovsk Europe/Uzhgorod Europe/Vaduz Europe/Vatican Europe/Vienna Europe/Vilnius Europe/Volgograd Europe/Warsaw Europe/Zagreb Europe/Zaporozhye Europe/Zurich GB GB-Eire GMT GMT+0 GMT-0 GMT0 Greenwich HST Hongkong Iceland Indian/Antananarivo Indian/Chagos Indian/Christmas Indian/Cocos Indian/Comoro Indian/Kerguelen Indian/Mahe Indian/Maldives Indian/Mauritius Indian/Mayotte Indian/Reunion Iran Israel Jamaica Japan Kwajalein Libya MET MST MST7MDT Mexico/BajaNorte Mexico/BajaSur Mexico/General NZ NZ-CHAT Navajo PRC PST8PDT Pacific/Apia Pacific/Auckland Pacific/Bougainville Pacific/Chatham Pacific/Chuuk Pacific/Easter Pacific/Efate Pacific/Enderbury Pacific/Fakaofo Pacific/Fiji Pacific/Funafuti Pacific/Galapagos Pacific/Gambier Pacific/Guadalcanal Pacific/Guam Pacific/Honolulu Pacific/Johnston Pacific/Kiritimati Pacific/Kosrae Pacific/Kwajalein Pacific/Majuro Pacific/Marquesas Pacific/Midway Pacific/Nauru Pacific/Niue Pacific/Norfolk Pacific/Noumea Pacific/Pago_Pago Pacific/Palau Pacific/Pitcairn Pacific/Pohnpei Pacific/Ponape Pacific/Port_Moresby Pacific/Rarotonga Pacific/Saipan Pacific/Samoa Pacific/Tahiti Pacific/Tarawa Pacific/Tongatapu Pacific/Truk Pacific/Wake Pacific/Wallis Pacific/Yap Poland Portugal ROC ROK Singapore Turkey UCT US/Alaska US/Aleutian US/Arizona US/Central US/East-Indiana US/Eastern US/Hawaii US/Indiana-Starke US/Michigan US/Mountain US/Pacific US/Pacific-New US/Samoa UTC Universal W-SU WET Zulu]
	Timezone *string `json:"timezone"`

	// traffic shaping adjustment
	// Maximum: 100
	// Minimum: 1
	TrafficShapingAdjustment int64 `json:"trafficShapingAdjustment,omitempty"`

	// ucrm enabled
	// Required: true
	UcrmEnabled *bool `json:"ucrmEnabled"`

	// upgrade grace period
	// Required: true
	// Maximum: 2.592e+09
	// Minimum: 30000
	UpgradeGracePeriod *int64 `json:"upgradeGracePeriod"`

	// use lets encrypt
	// Required: true
	UseLetsEncrypt *bool `json:"useLetsEncrypt"`
}

// Validate validates this nms settings 1
func (m *NmsSettings1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllowAutoUpdateUbntFirmwares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowBetaFirmwares(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowLoggingToLogentries(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAllowLoggingToSentry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAutoBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultQosPropagation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceAutoBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceNumberOfBackups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingAddressMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingIntervalNormal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDevicePingIntervalOutage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceTransmissionFrequencies(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceTransmissionProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowLocalScan(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowRemoteScan(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAllowUnsecuredChannels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryAutoConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoveryHideBlackBox(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDiscoverySnmpCommunity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGoogleMapsAPIKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHomePage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsIsp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLetsEncryptError(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLetsEncryptTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaintenanceWindowFromTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaintenanceWindowToTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMapsProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationForceModeEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationModeEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMigrationPort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestartGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimeFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimezone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrafficShapingAdjustment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUcrmEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpgradeGracePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUseLetsEncrypt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NmsSettings1) validateAllowAutoUpdateUbntFirmwares(formats strfmt.Registry) error {

	if err := validate.Required("allowAutoUpdateUbntFirmwares", "body", m.AllowAutoUpdateUbntFirmwares); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateAllowBetaFirmwares(formats strfmt.Registry) error {

	if err := validate.Required("allowBetaFirmwares", "body", m.AllowBetaFirmwares); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateAllowLoggingToLogentries(formats strfmt.Registry) error {

	if err := validate.Required("allowLoggingToLogentries", "body", m.AllowLoggingToLogentries); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateAllowLoggingToSentry(formats strfmt.Registry) error {

	if err := validate.Required("allowLoggingToSentry", "body", m.AllowLoggingToSentry); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateAutoBackups(formats strfmt.Registry) error {

	if err := validate.Required("autoBackups", "body", m.AutoBackups); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeCountryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["XX","XY","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","CV","KH","CM","CA","KY","CF","TD","CL","CN","CX","CC","CO","KM","CK","CR","CI","HR","CW","CY","CZ","CD","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","SZ","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","HN","HK","HU","IS","IN","ID","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","KR","RS","SC","CG","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","PS","SR","SJ","SE","CH","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UY","UZ","VU","VA","VE","VN","VG","VI","WF","EH","YE","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeCountryPropEnum = append(nmsSettings1TypeCountryPropEnum, v)
	}
}

const (

	// NmsSettings1CountryXX captures enum value "XX"
	NmsSettings1CountryXX string = "XX"

	// NmsSettings1CountryXY captures enum value "XY"
	NmsSettings1CountryXY string = "XY"

	// NmsSettings1CountryAF captures enum value "AF"
	NmsSettings1CountryAF string = "AF"

	// NmsSettings1CountryAX captures enum value "AX"
	NmsSettings1CountryAX string = "AX"

	// NmsSettings1CountryAL captures enum value "AL"
	NmsSettings1CountryAL string = "AL"

	// NmsSettings1CountryDZ captures enum value "DZ"
	NmsSettings1CountryDZ string = "DZ"

	// NmsSettings1CountryAS captures enum value "AS"
	NmsSettings1CountryAS string = "AS"

	// NmsSettings1CountryAD captures enum value "AD"
	NmsSettings1CountryAD string = "AD"

	// NmsSettings1CountryAO captures enum value "AO"
	NmsSettings1CountryAO string = "AO"

	// NmsSettings1CountryAI captures enum value "AI"
	NmsSettings1CountryAI string = "AI"

	// NmsSettings1CountryAQ captures enum value "AQ"
	NmsSettings1CountryAQ string = "AQ"

	// NmsSettings1CountryAG captures enum value "AG"
	NmsSettings1CountryAG string = "AG"

	// NmsSettings1CountryAR captures enum value "AR"
	NmsSettings1CountryAR string = "AR"

	// NmsSettings1CountryAM captures enum value "AM"
	NmsSettings1CountryAM string = "AM"

	// NmsSettings1CountryAW captures enum value "AW"
	NmsSettings1CountryAW string = "AW"

	// NmsSettings1CountryAU captures enum value "AU"
	NmsSettings1CountryAU string = "AU"

	// NmsSettings1CountryAT captures enum value "AT"
	NmsSettings1CountryAT string = "AT"

	// NmsSettings1CountryAZ captures enum value "AZ"
	NmsSettings1CountryAZ string = "AZ"

	// NmsSettings1CountryBS captures enum value "BS"
	NmsSettings1CountryBS string = "BS"

	// NmsSettings1CountryBH captures enum value "BH"
	NmsSettings1CountryBH string = "BH"

	// NmsSettings1CountryBD captures enum value "BD"
	NmsSettings1CountryBD string = "BD"

	// NmsSettings1CountryBB captures enum value "BB"
	NmsSettings1CountryBB string = "BB"

	// NmsSettings1CountryBY captures enum value "BY"
	NmsSettings1CountryBY string = "BY"

	// NmsSettings1CountryBE captures enum value "BE"
	NmsSettings1CountryBE string = "BE"

	// NmsSettings1CountryBZ captures enum value "BZ"
	NmsSettings1CountryBZ string = "BZ"

	// NmsSettings1CountryBJ captures enum value "BJ"
	NmsSettings1CountryBJ string = "BJ"

	// NmsSettings1CountryBM captures enum value "BM"
	NmsSettings1CountryBM string = "BM"

	// NmsSettings1CountryBT captures enum value "BT"
	NmsSettings1CountryBT string = "BT"

	// NmsSettings1CountryBO captures enum value "BO"
	NmsSettings1CountryBO string = "BO"

	// NmsSettings1CountryBQ captures enum value "BQ"
	NmsSettings1CountryBQ string = "BQ"

	// NmsSettings1CountryBA captures enum value "BA"
	NmsSettings1CountryBA string = "BA"

	// NmsSettings1CountryBW captures enum value "BW"
	NmsSettings1CountryBW string = "BW"

	// NmsSettings1CountryBV captures enum value "BV"
	NmsSettings1CountryBV string = "BV"

	// NmsSettings1CountryBR captures enum value "BR"
	NmsSettings1CountryBR string = "BR"

	// NmsSettings1CountryIO captures enum value "IO"
	NmsSettings1CountryIO string = "IO"

	// NmsSettings1CountryBN captures enum value "BN"
	NmsSettings1CountryBN string = "BN"

	// NmsSettings1CountryBG captures enum value "BG"
	NmsSettings1CountryBG string = "BG"

	// NmsSettings1CountryBF captures enum value "BF"
	NmsSettings1CountryBF string = "BF"

	// NmsSettings1CountryBI captures enum value "BI"
	NmsSettings1CountryBI string = "BI"

	// NmsSettings1CountryCV captures enum value "CV"
	NmsSettings1CountryCV string = "CV"

	// NmsSettings1CountryKH captures enum value "KH"
	NmsSettings1CountryKH string = "KH"

	// NmsSettings1CountryCM captures enum value "CM"
	NmsSettings1CountryCM string = "CM"

	// NmsSettings1CountryCA captures enum value "CA"
	NmsSettings1CountryCA string = "CA"

	// NmsSettings1CountryKY captures enum value "KY"
	NmsSettings1CountryKY string = "KY"

	// NmsSettings1CountryCF captures enum value "CF"
	NmsSettings1CountryCF string = "CF"

	// NmsSettings1CountryTD captures enum value "TD"
	NmsSettings1CountryTD string = "TD"

	// NmsSettings1CountryCL captures enum value "CL"
	NmsSettings1CountryCL string = "CL"

	// NmsSettings1CountryCN captures enum value "CN"
	NmsSettings1CountryCN string = "CN"

	// NmsSettings1CountryCX captures enum value "CX"
	NmsSettings1CountryCX string = "CX"

	// NmsSettings1CountryCC captures enum value "CC"
	NmsSettings1CountryCC string = "CC"

	// NmsSettings1CountryCO captures enum value "CO"
	NmsSettings1CountryCO string = "CO"

	// NmsSettings1CountryKM captures enum value "KM"
	NmsSettings1CountryKM string = "KM"

	// NmsSettings1CountryCK captures enum value "CK"
	NmsSettings1CountryCK string = "CK"

	// NmsSettings1CountryCR captures enum value "CR"
	NmsSettings1CountryCR string = "CR"

	// NmsSettings1CountryCI captures enum value "CI"
	NmsSettings1CountryCI string = "CI"

	// NmsSettings1CountryHR captures enum value "HR"
	NmsSettings1CountryHR string = "HR"

	// NmsSettings1CountryCW captures enum value "CW"
	NmsSettings1CountryCW string = "CW"

	// NmsSettings1CountryCY captures enum value "CY"
	NmsSettings1CountryCY string = "CY"

	// NmsSettings1CountryCZ captures enum value "CZ"
	NmsSettings1CountryCZ string = "CZ"

	// NmsSettings1CountryCD captures enum value "CD"
	NmsSettings1CountryCD string = "CD"

	// NmsSettings1CountryDK captures enum value "DK"
	NmsSettings1CountryDK string = "DK"

	// NmsSettings1CountryDJ captures enum value "DJ"
	NmsSettings1CountryDJ string = "DJ"

	// NmsSettings1CountryDM captures enum value "DM"
	NmsSettings1CountryDM string = "DM"

	// NmsSettings1CountryDO captures enum value "DO"
	NmsSettings1CountryDO string = "DO"

	// NmsSettings1CountryEC captures enum value "EC"
	NmsSettings1CountryEC string = "EC"

	// NmsSettings1CountryEG captures enum value "EG"
	NmsSettings1CountryEG string = "EG"

	// NmsSettings1CountrySV captures enum value "SV"
	NmsSettings1CountrySV string = "SV"

	// NmsSettings1CountryGQ captures enum value "GQ"
	NmsSettings1CountryGQ string = "GQ"

	// NmsSettings1CountryER captures enum value "ER"
	NmsSettings1CountryER string = "ER"

	// NmsSettings1CountryEE captures enum value "EE"
	NmsSettings1CountryEE string = "EE"

	// NmsSettings1CountrySZ captures enum value "SZ"
	NmsSettings1CountrySZ string = "SZ"

	// NmsSettings1CountryET captures enum value "ET"
	NmsSettings1CountryET string = "ET"

	// NmsSettings1CountryFK captures enum value "FK"
	NmsSettings1CountryFK string = "FK"

	// NmsSettings1CountryFO captures enum value "FO"
	NmsSettings1CountryFO string = "FO"

	// NmsSettings1CountryFJ captures enum value "FJ"
	NmsSettings1CountryFJ string = "FJ"

	// NmsSettings1CountryFI captures enum value "FI"
	NmsSettings1CountryFI string = "FI"

	// NmsSettings1CountryFR captures enum value "FR"
	NmsSettings1CountryFR string = "FR"

	// NmsSettings1CountryGF captures enum value "GF"
	NmsSettings1CountryGF string = "GF"

	// NmsSettings1CountryPF captures enum value "PF"
	NmsSettings1CountryPF string = "PF"

	// NmsSettings1CountryTF captures enum value "TF"
	NmsSettings1CountryTF string = "TF"

	// NmsSettings1CountryGA captures enum value "GA"
	NmsSettings1CountryGA string = "GA"

	// NmsSettings1CountryGM captures enum value "GM"
	NmsSettings1CountryGM string = "GM"

	// NmsSettings1CountryGE captures enum value "GE"
	NmsSettings1CountryGE string = "GE"

	// NmsSettings1CountryDE captures enum value "DE"
	NmsSettings1CountryDE string = "DE"

	// NmsSettings1CountryGH captures enum value "GH"
	NmsSettings1CountryGH string = "GH"

	// NmsSettings1CountryGI captures enum value "GI"
	NmsSettings1CountryGI string = "GI"

	// NmsSettings1CountryGR captures enum value "GR"
	NmsSettings1CountryGR string = "GR"

	// NmsSettings1CountryGL captures enum value "GL"
	NmsSettings1CountryGL string = "GL"

	// NmsSettings1CountryGD captures enum value "GD"
	NmsSettings1CountryGD string = "GD"

	// NmsSettings1CountryGP captures enum value "GP"
	NmsSettings1CountryGP string = "GP"

	// NmsSettings1CountryGU captures enum value "GU"
	NmsSettings1CountryGU string = "GU"

	// NmsSettings1CountryGT captures enum value "GT"
	NmsSettings1CountryGT string = "GT"

	// NmsSettings1CountryGG captures enum value "GG"
	NmsSettings1CountryGG string = "GG"

	// NmsSettings1CountryGN captures enum value "GN"
	NmsSettings1CountryGN string = "GN"

	// NmsSettings1CountryGW captures enum value "GW"
	NmsSettings1CountryGW string = "GW"

	// NmsSettings1CountryGY captures enum value "GY"
	NmsSettings1CountryGY string = "GY"

	// NmsSettings1CountryHT captures enum value "HT"
	NmsSettings1CountryHT string = "HT"

	// NmsSettings1CountryHM captures enum value "HM"
	NmsSettings1CountryHM string = "HM"

	// NmsSettings1CountryHN captures enum value "HN"
	NmsSettings1CountryHN string = "HN"

	// NmsSettings1CountryHK captures enum value "HK"
	NmsSettings1CountryHK string = "HK"

	// NmsSettings1CountryHU captures enum value "HU"
	NmsSettings1CountryHU string = "HU"

	// NmsSettings1CountryIS captures enum value "IS"
	NmsSettings1CountryIS string = "IS"

	// NmsSettings1CountryIN captures enum value "IN"
	NmsSettings1CountryIN string = "IN"

	// NmsSettings1CountryID captures enum value "ID"
	NmsSettings1CountryID string = "ID"

	// NmsSettings1CountryIQ captures enum value "IQ"
	NmsSettings1CountryIQ string = "IQ"

	// NmsSettings1CountryIE captures enum value "IE"
	NmsSettings1CountryIE string = "IE"

	// NmsSettings1CountryIM captures enum value "IM"
	NmsSettings1CountryIM string = "IM"

	// NmsSettings1CountryIL captures enum value "IL"
	NmsSettings1CountryIL string = "IL"

	// NmsSettings1CountryIT captures enum value "IT"
	NmsSettings1CountryIT string = "IT"

	// NmsSettings1CountryJM captures enum value "JM"
	NmsSettings1CountryJM string = "JM"

	// NmsSettings1CountryJP captures enum value "JP"
	NmsSettings1CountryJP string = "JP"

	// NmsSettings1CountryJE captures enum value "JE"
	NmsSettings1CountryJE string = "JE"

	// NmsSettings1CountryJO captures enum value "JO"
	NmsSettings1CountryJO string = "JO"

	// NmsSettings1CountryKZ captures enum value "KZ"
	NmsSettings1CountryKZ string = "KZ"

	// NmsSettings1CountryKE captures enum value "KE"
	NmsSettings1CountryKE string = "KE"

	// NmsSettings1CountryKI captures enum value "KI"
	NmsSettings1CountryKI string = "KI"

	// NmsSettings1CountryKW captures enum value "KW"
	NmsSettings1CountryKW string = "KW"

	// NmsSettings1CountryKG captures enum value "KG"
	NmsSettings1CountryKG string = "KG"

	// NmsSettings1CountryLA captures enum value "LA"
	NmsSettings1CountryLA string = "LA"

	// NmsSettings1CountryLV captures enum value "LV"
	NmsSettings1CountryLV string = "LV"

	// NmsSettings1CountryLB captures enum value "LB"
	NmsSettings1CountryLB string = "LB"

	// NmsSettings1CountryLS captures enum value "LS"
	NmsSettings1CountryLS string = "LS"

	// NmsSettings1CountryLR captures enum value "LR"
	NmsSettings1CountryLR string = "LR"

	// NmsSettings1CountryLY captures enum value "LY"
	NmsSettings1CountryLY string = "LY"

	// NmsSettings1CountryLI captures enum value "LI"
	NmsSettings1CountryLI string = "LI"

	// NmsSettings1CountryLT captures enum value "LT"
	NmsSettings1CountryLT string = "LT"

	// NmsSettings1CountryLU captures enum value "LU"
	NmsSettings1CountryLU string = "LU"

	// NmsSettings1CountryMO captures enum value "MO"
	NmsSettings1CountryMO string = "MO"

	// NmsSettings1CountryMK captures enum value "MK"
	NmsSettings1CountryMK string = "MK"

	// NmsSettings1CountryMG captures enum value "MG"
	NmsSettings1CountryMG string = "MG"

	// NmsSettings1CountryMW captures enum value "MW"
	NmsSettings1CountryMW string = "MW"

	// NmsSettings1CountryMY captures enum value "MY"
	NmsSettings1CountryMY string = "MY"

	// NmsSettings1CountryMV captures enum value "MV"
	NmsSettings1CountryMV string = "MV"

	// NmsSettings1CountryML captures enum value "ML"
	NmsSettings1CountryML string = "ML"

	// NmsSettings1CountryMT captures enum value "MT"
	NmsSettings1CountryMT string = "MT"

	// NmsSettings1CountryMH captures enum value "MH"
	NmsSettings1CountryMH string = "MH"

	// NmsSettings1CountryMQ captures enum value "MQ"
	NmsSettings1CountryMQ string = "MQ"

	// NmsSettings1CountryMR captures enum value "MR"
	NmsSettings1CountryMR string = "MR"

	// NmsSettings1CountryMU captures enum value "MU"
	NmsSettings1CountryMU string = "MU"

	// NmsSettings1CountryYT captures enum value "YT"
	NmsSettings1CountryYT string = "YT"

	// NmsSettings1CountryMX captures enum value "MX"
	NmsSettings1CountryMX string = "MX"

	// NmsSettings1CountryFM captures enum value "FM"
	NmsSettings1CountryFM string = "FM"

	// NmsSettings1CountryMD captures enum value "MD"
	NmsSettings1CountryMD string = "MD"

	// NmsSettings1CountryMC captures enum value "MC"
	NmsSettings1CountryMC string = "MC"

	// NmsSettings1CountryMN captures enum value "MN"
	NmsSettings1CountryMN string = "MN"

	// NmsSettings1CountryME captures enum value "ME"
	NmsSettings1CountryME string = "ME"

	// NmsSettings1CountryMS captures enum value "MS"
	NmsSettings1CountryMS string = "MS"

	// NmsSettings1CountryMA captures enum value "MA"
	NmsSettings1CountryMA string = "MA"

	// NmsSettings1CountryMZ captures enum value "MZ"
	NmsSettings1CountryMZ string = "MZ"

	// NmsSettings1CountryMM captures enum value "MM"
	NmsSettings1CountryMM string = "MM"

	// NmsSettings1CountryNA captures enum value "NA"
	NmsSettings1CountryNA string = "NA"

	// NmsSettings1CountryNR captures enum value "NR"
	NmsSettings1CountryNR string = "NR"

	// NmsSettings1CountryNP captures enum value "NP"
	NmsSettings1CountryNP string = "NP"

	// NmsSettings1CountryNL captures enum value "NL"
	NmsSettings1CountryNL string = "NL"

	// NmsSettings1CountryNC captures enum value "NC"
	NmsSettings1CountryNC string = "NC"

	// NmsSettings1CountryNZ captures enum value "NZ"
	NmsSettings1CountryNZ string = "NZ"

	// NmsSettings1CountryNI captures enum value "NI"
	NmsSettings1CountryNI string = "NI"

	// NmsSettings1CountryNE captures enum value "NE"
	NmsSettings1CountryNE string = "NE"

	// NmsSettings1CountryNG captures enum value "NG"
	NmsSettings1CountryNG string = "NG"

	// NmsSettings1CountryNU captures enum value "NU"
	NmsSettings1CountryNU string = "NU"

	// NmsSettings1CountryNF captures enum value "NF"
	NmsSettings1CountryNF string = "NF"

	// NmsSettings1CountryMP captures enum value "MP"
	NmsSettings1CountryMP string = "MP"

	// NmsSettings1CountryNO captures enum value "NO"
	NmsSettings1CountryNO string = "NO"

	// NmsSettings1CountryOM captures enum value "OM"
	NmsSettings1CountryOM string = "OM"

	// NmsSettings1CountryPK captures enum value "PK"
	NmsSettings1CountryPK string = "PK"

	// NmsSettings1CountryPW captures enum value "PW"
	NmsSettings1CountryPW string = "PW"

	// NmsSettings1CountryPA captures enum value "PA"
	NmsSettings1CountryPA string = "PA"

	// NmsSettings1CountryPG captures enum value "PG"
	NmsSettings1CountryPG string = "PG"

	// NmsSettings1CountryPY captures enum value "PY"
	NmsSettings1CountryPY string = "PY"

	// NmsSettings1CountryPE captures enum value "PE"
	NmsSettings1CountryPE string = "PE"

	// NmsSettings1CountryPH captures enum value "PH"
	NmsSettings1CountryPH string = "PH"

	// NmsSettings1CountryPN captures enum value "PN"
	NmsSettings1CountryPN string = "PN"

	// NmsSettings1CountryPL captures enum value "PL"
	NmsSettings1CountryPL string = "PL"

	// NmsSettings1CountryPT captures enum value "PT"
	NmsSettings1CountryPT string = "PT"

	// NmsSettings1CountryPR captures enum value "PR"
	NmsSettings1CountryPR string = "PR"

	// NmsSettings1CountryQA captures enum value "QA"
	NmsSettings1CountryQA string = "QA"

	// NmsSettings1CountryKR captures enum value "KR"
	NmsSettings1CountryKR string = "KR"

	// NmsSettings1CountryRS captures enum value "RS"
	NmsSettings1CountryRS string = "RS"

	// NmsSettings1CountrySC captures enum value "SC"
	NmsSettings1CountrySC string = "SC"

	// NmsSettings1CountryCG captures enum value "CG"
	NmsSettings1CountryCG string = "CG"

	// NmsSettings1CountryRE captures enum value "RE"
	NmsSettings1CountryRE string = "RE"

	// NmsSettings1CountryRO captures enum value "RO"
	NmsSettings1CountryRO string = "RO"

	// NmsSettings1CountryRU captures enum value "RU"
	NmsSettings1CountryRU string = "RU"

	// NmsSettings1CountryRW captures enum value "RW"
	NmsSettings1CountryRW string = "RW"

	// NmsSettings1CountryBL captures enum value "BL"
	NmsSettings1CountryBL string = "BL"

	// NmsSettings1CountrySH captures enum value "SH"
	NmsSettings1CountrySH string = "SH"

	// NmsSettings1CountryKN captures enum value "KN"
	NmsSettings1CountryKN string = "KN"

	// NmsSettings1CountryLC captures enum value "LC"
	NmsSettings1CountryLC string = "LC"

	// NmsSettings1CountryMF captures enum value "MF"
	NmsSettings1CountryMF string = "MF"

	// NmsSettings1CountryPM captures enum value "PM"
	NmsSettings1CountryPM string = "PM"

	// NmsSettings1CountryVC captures enum value "VC"
	NmsSettings1CountryVC string = "VC"

	// NmsSettings1CountryWS captures enum value "WS"
	NmsSettings1CountryWS string = "WS"

	// NmsSettings1CountrySM captures enum value "SM"
	NmsSettings1CountrySM string = "SM"

	// NmsSettings1CountryST captures enum value "ST"
	NmsSettings1CountryST string = "ST"

	// NmsSettings1CountrySA captures enum value "SA"
	NmsSettings1CountrySA string = "SA"

	// NmsSettings1CountrySN captures enum value "SN"
	NmsSettings1CountrySN string = "SN"

	// NmsSettings1CountrySL captures enum value "SL"
	NmsSettings1CountrySL string = "SL"

	// NmsSettings1CountrySG captures enum value "SG"
	NmsSettings1CountrySG string = "SG"

	// NmsSettings1CountrySX captures enum value "SX"
	NmsSettings1CountrySX string = "SX"

	// NmsSettings1CountrySK captures enum value "SK"
	NmsSettings1CountrySK string = "SK"

	// NmsSettings1CountrySI captures enum value "SI"
	NmsSettings1CountrySI string = "SI"

	// NmsSettings1CountrySB captures enum value "SB"
	NmsSettings1CountrySB string = "SB"

	// NmsSettings1CountrySO captures enum value "SO"
	NmsSettings1CountrySO string = "SO"

	// NmsSettings1CountryZA captures enum value "ZA"
	NmsSettings1CountryZA string = "ZA"

	// NmsSettings1CountryGS captures enum value "GS"
	NmsSettings1CountryGS string = "GS"

	// NmsSettings1CountrySS captures enum value "SS"
	NmsSettings1CountrySS string = "SS"

	// NmsSettings1CountryES captures enum value "ES"
	NmsSettings1CountryES string = "ES"

	// NmsSettings1CountryLK captures enum value "LK"
	NmsSettings1CountryLK string = "LK"

	// NmsSettings1CountryPS captures enum value "PS"
	NmsSettings1CountryPS string = "PS"

	// NmsSettings1CountrySR captures enum value "SR"
	NmsSettings1CountrySR string = "SR"

	// NmsSettings1CountrySJ captures enum value "SJ"
	NmsSettings1CountrySJ string = "SJ"

	// NmsSettings1CountrySE captures enum value "SE"
	NmsSettings1CountrySE string = "SE"

	// NmsSettings1CountryCH captures enum value "CH"
	NmsSettings1CountryCH string = "CH"

	// NmsSettings1CountryTW captures enum value "TW"
	NmsSettings1CountryTW string = "TW"

	// NmsSettings1CountryTJ captures enum value "TJ"
	NmsSettings1CountryTJ string = "TJ"

	// NmsSettings1CountryTZ captures enum value "TZ"
	NmsSettings1CountryTZ string = "TZ"

	// NmsSettings1CountryTH captures enum value "TH"
	NmsSettings1CountryTH string = "TH"

	// NmsSettings1CountryTL captures enum value "TL"
	NmsSettings1CountryTL string = "TL"

	// NmsSettings1CountryTG captures enum value "TG"
	NmsSettings1CountryTG string = "TG"

	// NmsSettings1CountryTK captures enum value "TK"
	NmsSettings1CountryTK string = "TK"

	// NmsSettings1CountryTO captures enum value "TO"
	NmsSettings1CountryTO string = "TO"

	// NmsSettings1CountryTT captures enum value "TT"
	NmsSettings1CountryTT string = "TT"

	// NmsSettings1CountryTN captures enum value "TN"
	NmsSettings1CountryTN string = "TN"

	// NmsSettings1CountryTR captures enum value "TR"
	NmsSettings1CountryTR string = "TR"

	// NmsSettings1CountryTM captures enum value "TM"
	NmsSettings1CountryTM string = "TM"

	// NmsSettings1CountryTC captures enum value "TC"
	NmsSettings1CountryTC string = "TC"

	// NmsSettings1CountryTV captures enum value "TV"
	NmsSettings1CountryTV string = "TV"

	// NmsSettings1CountryUG captures enum value "UG"
	NmsSettings1CountryUG string = "UG"

	// NmsSettings1CountryUA captures enum value "UA"
	NmsSettings1CountryUA string = "UA"

	// NmsSettings1CountryAE captures enum value "AE"
	NmsSettings1CountryAE string = "AE"

	// NmsSettings1CountryGB captures enum value "GB"
	NmsSettings1CountryGB string = "GB"

	// NmsSettings1CountryUS captures enum value "US"
	NmsSettings1CountryUS string = "US"

	// NmsSettings1CountryUY captures enum value "UY"
	NmsSettings1CountryUY string = "UY"

	// NmsSettings1CountryUZ captures enum value "UZ"
	NmsSettings1CountryUZ string = "UZ"

	// NmsSettings1CountryVU captures enum value "VU"
	NmsSettings1CountryVU string = "VU"

	// NmsSettings1CountryVA captures enum value "VA"
	NmsSettings1CountryVA string = "VA"

	// NmsSettings1CountryVE captures enum value "VE"
	NmsSettings1CountryVE string = "VE"

	// NmsSettings1CountryVN captures enum value "VN"
	NmsSettings1CountryVN string = "VN"

	// NmsSettings1CountryVG captures enum value "VG"
	NmsSettings1CountryVG string = "VG"

	// NmsSettings1CountryVI captures enum value "VI"
	NmsSettings1CountryVI string = "VI"

	// NmsSettings1CountryWF captures enum value "WF"
	NmsSettings1CountryWF string = "WF"

	// NmsSettings1CountryEH captures enum value "EH"
	NmsSettings1CountryEH string = "EH"

	// NmsSettings1CountryYE captures enum value "YE"
	NmsSettings1CountryYE string = "YE"

	// NmsSettings1CountryZM captures enum value "ZM"
	NmsSettings1CountryZM string = "ZM"

	// NmsSettings1CountryZW captures enum value "ZW"
	NmsSettings1CountryZW string = "ZW"
)

// prop value enum
func (m *NmsSettings1) validateCountryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	// value enum
	if err := m.validateCountryEnum("country", "body", *m.Country); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeDateFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["D MMM YYYY","Do MMM YYYY","DD MMM YYYY","MMM D, YYYY","MMM Do, YYYY","MMM DD, YYYY","YYYY-MM-DD","DD-MM-YYYY","D.M.YYYY","DD.MM.YYYY","D/M/YYYY","DD/MM/YYYY","M/D/YYYY","MM/DD/YYYY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeDateFormatPropEnum = append(nmsSettings1TypeDateFormatPropEnum, v)
	}
}

const (

	// NmsSettings1DateFormatDMMMYYYY captures enum value "D MMM YYYY"
	NmsSettings1DateFormatDMMMYYYY string = "D MMM YYYY"

	// NmsSettings1DateFormatDoMMMYYYY captures enum value "Do MMM YYYY"
	NmsSettings1DateFormatDoMMMYYYY string = "Do MMM YYYY"

	// NmsSettings1DateFormatDDMMMYYYY captures enum value "DD MMM YYYY"
	NmsSettings1DateFormatDDMMMYYYY string = "DD MMM YYYY"

	// NmsSettings1DateFormatMMMDYYYY captures enum value "MMM D, YYYY"
	NmsSettings1DateFormatMMMDYYYY string = "MMM D, YYYY"

	// NmsSettings1DateFormatMMMDoYYYY captures enum value "MMM Do, YYYY"
	NmsSettings1DateFormatMMMDoYYYY string = "MMM Do, YYYY"

	// NmsSettings1DateFormatMMMDDYYYY captures enum value "MMM DD, YYYY"
	NmsSettings1DateFormatMMMDDYYYY string = "MMM DD, YYYY"

	// NmsSettings1DateFormatYYYYMMDD captures enum value "YYYY-MM-DD"
	NmsSettings1DateFormatYYYYMMDD string = "YYYY-MM-DD"

	// NmsSettings1DateFormatDDMMYYYY captures enum value "DD-MM-YYYY"
	NmsSettings1DateFormatDDMMYYYY string = "DD-MM-YYYY"

	// NmsSettings1DateFormatDMYYYY captures enum value "D.M.YYYY"
	NmsSettings1DateFormatDMYYYY string = "D.M.YYYY"

	// NmsSettings1DateFormatDDMMYYYY captures enum value "DD.MM.YYYY"
	NmsSettings1DateFormatDDMMYYYY string = "DD.MM.YYYY"

	// NmsSettings1DateFormatDMYYYY captures enum value "D/M/YYYY"
	NmsSettings1DateFormatDMYYYY string = "D/M/YYYY"

	// NmsSettings1DateFormatDDMMYYYY captures enum value "DD/MM/YYYY"
	NmsSettings1DateFormatDDMMYYYY string = "DD/MM/YYYY"

	// NmsSettings1DateFormatMDYYYY captures enum value "M/D/YYYY"
	NmsSettings1DateFormatMDYYYY string = "M/D/YYYY"

	// NmsSettings1DateFormatMMDDYYYY captures enum value "MM/DD/YYYY"
	NmsSettings1DateFormatMMDDYYYY string = "MM/DD/YYYY"
)

// prop value enum
func (m *NmsSettings1) validateDateFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeDateFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateDateFormat(formats strfmt.Registry) error {

	if err := validate.Required("dateFormat", "body", m.DateFormat); err != nil {
		return err
	}

	// value enum
	if err := m.validateDateFormatEnum("dateFormat", "body", *m.DateFormat); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDefaultGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("defaultGracePeriod", "body", m.DefaultGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("defaultGracePeriod", "body", int64(*m.DefaultGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("defaultGracePeriod", "body", int64(*m.DefaultGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeDefaultQosPropagationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["all","gateway"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeDefaultQosPropagationPropEnum = append(nmsSettings1TypeDefaultQosPropagationPropEnum, v)
	}
}

const (

	// NmsSettings1DefaultQosPropagationAll captures enum value "all"
	NmsSettings1DefaultQosPropagationAll string = "all"

	// NmsSettings1DefaultQosPropagationGateway captures enum value "gateway"
	NmsSettings1DefaultQosPropagationGateway string = "gateway"
)

// prop value enum
func (m *NmsSettings1) validateDefaultQosPropagationEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeDefaultQosPropagationPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateDefaultQosPropagation(formats strfmt.Registry) error {

	if err := validate.Required("defaultQosPropagation", "body", m.DefaultQosPropagation); err != nil {
		return err
	}

	// value enum
	if err := m.validateDefaultQosPropagationEnum("defaultQosPropagation", "body", *m.DefaultQosPropagation); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDeviceAutoBackups(formats strfmt.Registry) error {

	if err := validate.Required("deviceAutoBackups", "body", m.DeviceAutoBackups); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDeviceNumberOfBackups(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceNumberOfBackups) { // not required
		return nil
	}

	if err := validate.MinimumInt("deviceNumberOfBackups", "body", int64(m.DeviceNumberOfBackups), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("deviceNumberOfBackups", "body", int64(m.DeviceNumberOfBackups), 100, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDevicePingAddress(formats strfmt.Registry) error {

	if err := validate.Required("devicePingAddress", "body", m.DevicePingAddress); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeDevicePingAddressModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeDevicePingAddressModePropEnum = append(nmsSettings1TypeDevicePingAddressModePropEnum, v)
	}
}

const (

	// NmsSettings1DevicePingAddressModeAuto captures enum value "auto"
	NmsSettings1DevicePingAddressModeAuto string = "auto"

	// NmsSettings1DevicePingAddressModeCustom captures enum value "custom"
	NmsSettings1DevicePingAddressModeCustom string = "custom"
)

// prop value enum
func (m *NmsSettings1) validateDevicePingAddressModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeDevicePingAddressModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateDevicePingAddressMode(formats strfmt.Registry) error {

	if err := validate.Required("devicePingAddressMode", "body", m.DevicePingAddressMode); err != nil {
		return err
	}

	// value enum
	if err := m.validateDevicePingAddressModeEnum("devicePingAddressMode", "body", *m.DevicePingAddressMode); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDevicePingIntervalNormal(formats strfmt.Registry) error {

	if err := validate.Required("devicePingIntervalNormal", "body", m.DevicePingIntervalNormal); err != nil {
		return err
	}

	if err := validate.Minimum("devicePingIntervalNormal", "body", float64(*m.DevicePingIntervalNormal), 10000, false); err != nil {
		return err
	}

	if err := validate.Maximum("devicePingIntervalNormal", "body", float64(*m.DevicePingIntervalNormal), 200000, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDevicePingIntervalOutage(formats strfmt.Registry) error {

	if err := validate.Required("devicePingIntervalOutage", "body", m.DevicePingIntervalOutage); err != nil {
		return err
	}

	if err := validate.Minimum("devicePingIntervalOutage", "body", float64(*m.DevicePingIntervalOutage), 2000, false); err != nil {
		return err
	}

	if err := validate.Maximum("devicePingIntervalOutage", "body", float64(*m.DevicePingIntervalOutage), 100000, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDeviceTransmissionFrequencies(formats strfmt.Registry) error {

	if swag.IsZero(m.DeviceTransmissionFrequencies) { // not required
		return nil
	}

	if m.DeviceTransmissionFrequencies != nil {
		if err := m.DeviceTransmissionFrequencies.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deviceTransmissionFrequencies")
			}
			return err
		}
	}

	return nil
}

var nmsSettings1TypeDeviceTransmissionProfilePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeDeviceTransmissionProfilePropEnum = append(nmsSettings1TypeDeviceTransmissionProfilePropEnum, v)
	}
}

const (

	// NmsSettings1DeviceTransmissionProfileAuto captures enum value "auto"
	NmsSettings1DeviceTransmissionProfileAuto string = "auto"

	// NmsSettings1DeviceTransmissionProfileCustom captures enum value "custom"
	NmsSettings1DeviceTransmissionProfileCustom string = "custom"
)

// prop value enum
func (m *NmsSettings1) validateDeviceTransmissionProfileEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeDeviceTransmissionProfilePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateDeviceTransmissionProfile(formats strfmt.Registry) error {

	if err := validate.Required("deviceTransmissionProfile", "body", m.DeviceTransmissionProfile); err != nil {
		return err
	}

	// value enum
	if err := m.validateDeviceTransmissionProfileEnum("deviceTransmissionProfile", "body", *m.DeviceTransmissionProfile); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoveryAllowLocalScan(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowLocalScan", "body", m.DiscoveryAllowLocalScan); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoveryAllowRemoteScan(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowRemoteScan", "body", m.DiscoveryAllowRemoteScan); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoveryAllowUnsecuredChannels(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAllowUnsecuredChannels", "body", m.DiscoveryAllowUnsecuredChannels); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoveryAutoConfiguration(formats strfmt.Registry) error {

	if err := validate.Required("discoveryAutoConfiguration", "body", m.DiscoveryAutoConfiguration); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoveryHideBlackBox(formats strfmt.Registry) error {

	if err := validate.Required("discoveryHideBlackBox", "body", m.DiscoveryHideBlackBox); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateDiscoverySnmpCommunity(formats strfmt.Registry) error {

	if err := validate.Required("discoverySnmpCommunity", "body", m.DiscoverySnmpCommunity); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateGoogleMapsAPIKey(formats strfmt.Registry) error {

	if err := validate.Required("googleMapsApiKey", "body", m.GoogleMapsAPIKey); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeHomePagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["unms","ucrm"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeHomePagePropEnum = append(nmsSettings1TypeHomePagePropEnum, v)
	}
}

const (

	// NmsSettings1HomePageUnms captures enum value "unms"
	NmsSettings1HomePageUnms string = "unms"

	// NmsSettings1HomePageUcrm captures enum value "ucrm"
	NmsSettings1HomePageUcrm string = "ucrm"
)

// prop value enum
func (m *NmsSettings1) validateHomePageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeHomePagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateHomePage(formats strfmt.Registry) error {

	if err := validate.Required("homePage", "body", m.HomePage); err != nil {
		return err
	}

	// value enum
	if err := m.validateHomePageEnum("homePage", "body", *m.HomePage); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateHostname(formats strfmt.Registry) error {

	if err := validate.Required("hostname", "body", m.Hostname); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateInstanceID(formats strfmt.Registry) error {

	if err := validate.Required("instanceId", "body", m.InstanceID); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateIsIsp(formats strfmt.Registry) error {

	if err := validate.Required("isIsp", "body", m.IsIsp); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateLetsEncryptError(formats strfmt.Registry) error {

	if err := validate.Required("letsEncryptError", "body", m.LetsEncryptError); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateLetsEncryptTimestamp(formats strfmt.Registry) error {

	if err := validate.Required("letsEncryptTimestamp", "body", m.LetsEncryptTimestamp); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMaintenanceWindowFromTime(formats strfmt.Registry) error {

	if swag.IsZero(m.MaintenanceWindowFromTime) { // not required
		return nil
	}

	if err := validate.MinimumInt("maintenanceWindowFromTime", "body", int64(*m.MaintenanceWindowFromTime), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("maintenanceWindowFromTime", "body", int64(*m.MaintenanceWindowFromTime), 24, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMaintenanceWindowToTime(formats strfmt.Registry) error {

	if swag.IsZero(m.MaintenanceWindowToTime) { // not required
		return nil
	}

	if err := validate.MinimumInt("maintenanceWindowToTime", "body", int64(*m.MaintenanceWindowToTime), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("maintenanceWindowToTime", "body", int64(*m.MaintenanceWindowToTime), 24, false); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeMapsProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GoogleMaps","OpenStreetMap"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeMapsProviderPropEnum = append(nmsSettings1TypeMapsProviderPropEnum, v)
	}
}

const (

	// NmsSettings1MapsProviderGoogleMaps captures enum value "GoogleMaps"
	NmsSettings1MapsProviderGoogleMaps string = "GoogleMaps"

	// NmsSettings1MapsProviderOpenStreetMap captures enum value "OpenStreetMap"
	NmsSettings1MapsProviderOpenStreetMap string = "OpenStreetMap"
)

// prop value enum
func (m *NmsSettings1) validateMapsProviderEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeMapsProviderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateMapsProvider(formats strfmt.Registry) error {

	if err := validate.Required("mapsProvider", "body", m.MapsProvider); err != nil {
		return err
	}

	// value enum
	if err := m.validateMapsProviderEnum("mapsProvider", "body", *m.MapsProvider); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMigrationForceModeEnabled(formats strfmt.Registry) error {

	if err := validate.Required("migrationForceModeEnabled", "body", m.MigrationForceModeEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMigrationHostname(formats strfmt.Registry) error {

	if err := validate.Required("migrationHostname", "body", m.MigrationHostname); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMigrationModeEnabled(formats strfmt.Registry) error {

	if err := validate.Required("migrationModeEnabled", "body", m.MigrationModeEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateMigrationPort(formats strfmt.Registry) error {

	if err := validate.Required("migrationPort", "body", m.MigrationPort); err != nil {
		return err
	}

	if err := validate.MinimumInt("migrationPort", "body", int64(*m.MigrationPort), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("migrationPort", "body", int64(*m.MigrationPort), 65535, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateRestartGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("restartGracePeriod", "body", m.RestartGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("restartGracePeriod", "body", int64(*m.RestartGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("restartGracePeriod", "body", int64(*m.RestartGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeTimeFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["H:mm","h:mm a"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeTimeFormatPropEnum = append(nmsSettings1TypeTimeFormatPropEnum, v)
	}
}

const (

	// NmsSettings1TimeFormatHMm captures enum value "H:mm"
	NmsSettings1TimeFormatHMm string = "H:mm"

	// NmsSettings1TimeFormatHMma captures enum value "h:mm a"
	NmsSettings1TimeFormatHMma string = "h:mm a"
)

// prop value enum
func (m *NmsSettings1) validateTimeFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeTimeFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateTimeFormat(formats strfmt.Registry) error {

	if err := validate.Required("timeFormat", "body", m.TimeFormat); err != nil {
		return err
	}

	// value enum
	if err := m.validateTimeFormatEnum("timeFormat", "body", *m.TimeFormat); err != nil {
		return err
	}

	return nil
}

var nmsSettings1TypeTimezonePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","CET","CST6CDT","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Cuba","EET","EST","EST5EDT","Egypt","Eire","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT-0","GMT0","Greenwich","HST","Hongkong","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","NZ","NZ-CHAT","Navajo","PRC","PST8PDT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","Universal","W-SU","WET","Zulu"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nmsSettings1TypeTimezonePropEnum = append(nmsSettings1TypeTimezonePropEnum, v)
	}
}

const (

	// NmsSettings1TimezoneAfricaAbidjan captures enum value "Africa/Abidjan"
	NmsSettings1TimezoneAfricaAbidjan string = "Africa/Abidjan"

	// NmsSettings1TimezoneAfricaAccra captures enum value "Africa/Accra"
	NmsSettings1TimezoneAfricaAccra string = "Africa/Accra"

	// NmsSettings1TimezoneAfricaAddisAbaba captures enum value "Africa/Addis_Ababa"
	NmsSettings1TimezoneAfricaAddisAbaba string = "Africa/Addis_Ababa"

	// NmsSettings1TimezoneAfricaAlgiers captures enum value "Africa/Algiers"
	NmsSettings1TimezoneAfricaAlgiers string = "Africa/Algiers"

	// NmsSettings1TimezoneAfricaAsmara captures enum value "Africa/Asmara"
	NmsSettings1TimezoneAfricaAsmara string = "Africa/Asmara"

	// NmsSettings1TimezoneAfricaAsmera captures enum value "Africa/Asmera"
	NmsSettings1TimezoneAfricaAsmera string = "Africa/Asmera"

	// NmsSettings1TimezoneAfricaBamako captures enum value "Africa/Bamako"
	NmsSettings1TimezoneAfricaBamako string = "Africa/Bamako"

	// NmsSettings1TimezoneAfricaBangui captures enum value "Africa/Bangui"
	NmsSettings1TimezoneAfricaBangui string = "Africa/Bangui"

	// NmsSettings1TimezoneAfricaBanjul captures enum value "Africa/Banjul"
	NmsSettings1TimezoneAfricaBanjul string = "Africa/Banjul"

	// NmsSettings1TimezoneAfricaBissau captures enum value "Africa/Bissau"
	NmsSettings1TimezoneAfricaBissau string = "Africa/Bissau"

	// NmsSettings1TimezoneAfricaBlantyre captures enum value "Africa/Blantyre"
	NmsSettings1TimezoneAfricaBlantyre string = "Africa/Blantyre"

	// NmsSettings1TimezoneAfricaBrazzaville captures enum value "Africa/Brazzaville"
	NmsSettings1TimezoneAfricaBrazzaville string = "Africa/Brazzaville"

	// NmsSettings1TimezoneAfricaBujumbura captures enum value "Africa/Bujumbura"
	NmsSettings1TimezoneAfricaBujumbura string = "Africa/Bujumbura"

	// NmsSettings1TimezoneAfricaCairo captures enum value "Africa/Cairo"
	NmsSettings1TimezoneAfricaCairo string = "Africa/Cairo"

	// NmsSettings1TimezoneAfricaCasablanca captures enum value "Africa/Casablanca"
	NmsSettings1TimezoneAfricaCasablanca string = "Africa/Casablanca"

	// NmsSettings1TimezoneAfricaCeuta captures enum value "Africa/Ceuta"
	NmsSettings1TimezoneAfricaCeuta string = "Africa/Ceuta"

	// NmsSettings1TimezoneAfricaConakry captures enum value "Africa/Conakry"
	NmsSettings1TimezoneAfricaConakry string = "Africa/Conakry"

	// NmsSettings1TimezoneAfricaDakar captures enum value "Africa/Dakar"
	NmsSettings1TimezoneAfricaDakar string = "Africa/Dakar"

	// NmsSettings1TimezoneAfricaDarEsSalaam captures enum value "Africa/Dar_es_Salaam"
	NmsSettings1TimezoneAfricaDarEsSalaam string = "Africa/Dar_es_Salaam"

	// NmsSettings1TimezoneAfricaDjibouti captures enum value "Africa/Djibouti"
	NmsSettings1TimezoneAfricaDjibouti string = "Africa/Djibouti"

	// NmsSettings1TimezoneAfricaDouala captures enum value "Africa/Douala"
	NmsSettings1TimezoneAfricaDouala string = "Africa/Douala"

	// NmsSettings1TimezoneAfricaElAaiun captures enum value "Africa/El_Aaiun"
	NmsSettings1TimezoneAfricaElAaiun string = "Africa/El_Aaiun"

	// NmsSettings1TimezoneAfricaFreetown captures enum value "Africa/Freetown"
	NmsSettings1TimezoneAfricaFreetown string = "Africa/Freetown"

	// NmsSettings1TimezoneAfricaGaborone captures enum value "Africa/Gaborone"
	NmsSettings1TimezoneAfricaGaborone string = "Africa/Gaborone"

	// NmsSettings1TimezoneAfricaHarare captures enum value "Africa/Harare"
	NmsSettings1TimezoneAfricaHarare string = "Africa/Harare"

	// NmsSettings1TimezoneAfricaJohannesburg captures enum value "Africa/Johannesburg"
	NmsSettings1TimezoneAfricaJohannesburg string = "Africa/Johannesburg"

	// NmsSettings1TimezoneAfricaJuba captures enum value "Africa/Juba"
	NmsSettings1TimezoneAfricaJuba string = "Africa/Juba"

	// NmsSettings1TimezoneAfricaKampala captures enum value "Africa/Kampala"
	NmsSettings1TimezoneAfricaKampala string = "Africa/Kampala"

	// NmsSettings1TimezoneAfricaKhartoum captures enum value "Africa/Khartoum"
	NmsSettings1TimezoneAfricaKhartoum string = "Africa/Khartoum"

	// NmsSettings1TimezoneAfricaKigali captures enum value "Africa/Kigali"
	NmsSettings1TimezoneAfricaKigali string = "Africa/Kigali"

	// NmsSettings1TimezoneAfricaKinshasa captures enum value "Africa/Kinshasa"
	NmsSettings1TimezoneAfricaKinshasa string = "Africa/Kinshasa"

	// NmsSettings1TimezoneAfricaLagos captures enum value "Africa/Lagos"
	NmsSettings1TimezoneAfricaLagos string = "Africa/Lagos"

	// NmsSettings1TimezoneAfricaLibreville captures enum value "Africa/Libreville"
	NmsSettings1TimezoneAfricaLibreville string = "Africa/Libreville"

	// NmsSettings1TimezoneAfricaLome captures enum value "Africa/Lome"
	NmsSettings1TimezoneAfricaLome string = "Africa/Lome"

	// NmsSettings1TimezoneAfricaLuanda captures enum value "Africa/Luanda"
	NmsSettings1TimezoneAfricaLuanda string = "Africa/Luanda"

	// NmsSettings1TimezoneAfricaLubumbashi captures enum value "Africa/Lubumbashi"
	NmsSettings1TimezoneAfricaLubumbashi string = "Africa/Lubumbashi"

	// NmsSettings1TimezoneAfricaLusaka captures enum value "Africa/Lusaka"
	NmsSettings1TimezoneAfricaLusaka string = "Africa/Lusaka"

	// NmsSettings1TimezoneAfricaMalabo captures enum value "Africa/Malabo"
	NmsSettings1TimezoneAfricaMalabo string = "Africa/Malabo"

	// NmsSettings1TimezoneAfricaMaputo captures enum value "Africa/Maputo"
	NmsSettings1TimezoneAfricaMaputo string = "Africa/Maputo"

	// NmsSettings1TimezoneAfricaMaseru captures enum value "Africa/Maseru"
	NmsSettings1TimezoneAfricaMaseru string = "Africa/Maseru"

	// NmsSettings1TimezoneAfricaMbabane captures enum value "Africa/Mbabane"
	NmsSettings1TimezoneAfricaMbabane string = "Africa/Mbabane"

	// NmsSettings1TimezoneAfricaMogadishu captures enum value "Africa/Mogadishu"
	NmsSettings1TimezoneAfricaMogadishu string = "Africa/Mogadishu"

	// NmsSettings1TimezoneAfricaMonrovia captures enum value "Africa/Monrovia"
	NmsSettings1TimezoneAfricaMonrovia string = "Africa/Monrovia"

	// NmsSettings1TimezoneAfricaNairobi captures enum value "Africa/Nairobi"
	NmsSettings1TimezoneAfricaNairobi string = "Africa/Nairobi"

	// NmsSettings1TimezoneAfricaNdjamena captures enum value "Africa/Ndjamena"
	NmsSettings1TimezoneAfricaNdjamena string = "Africa/Ndjamena"

	// NmsSettings1TimezoneAfricaNiamey captures enum value "Africa/Niamey"
	NmsSettings1TimezoneAfricaNiamey string = "Africa/Niamey"

	// NmsSettings1TimezoneAfricaNouakchott captures enum value "Africa/Nouakchott"
	NmsSettings1TimezoneAfricaNouakchott string = "Africa/Nouakchott"

	// NmsSettings1TimezoneAfricaOuagadougou captures enum value "Africa/Ouagadougou"
	NmsSettings1TimezoneAfricaOuagadougou string = "Africa/Ouagadougou"

	// NmsSettings1TimezoneAfricaPortoNovo captures enum value "Africa/Porto-Novo"
	NmsSettings1TimezoneAfricaPortoNovo string = "Africa/Porto-Novo"

	// NmsSettings1TimezoneAfricaSaoTome captures enum value "Africa/Sao_Tome"
	NmsSettings1TimezoneAfricaSaoTome string = "Africa/Sao_Tome"

	// NmsSettings1TimezoneAfricaTimbuktu captures enum value "Africa/Timbuktu"
	NmsSettings1TimezoneAfricaTimbuktu string = "Africa/Timbuktu"

	// NmsSettings1TimezoneAfricaTripoli captures enum value "Africa/Tripoli"
	NmsSettings1TimezoneAfricaTripoli string = "Africa/Tripoli"

	// NmsSettings1TimezoneAfricaTunis captures enum value "Africa/Tunis"
	NmsSettings1TimezoneAfricaTunis string = "Africa/Tunis"

	// NmsSettings1TimezoneAfricaWindhoek captures enum value "Africa/Windhoek"
	NmsSettings1TimezoneAfricaWindhoek string = "Africa/Windhoek"

	// NmsSettings1TimezoneAmericaAdak captures enum value "America/Adak"
	NmsSettings1TimezoneAmericaAdak string = "America/Adak"

	// NmsSettings1TimezoneAmericaAnchorage captures enum value "America/Anchorage"
	NmsSettings1TimezoneAmericaAnchorage string = "America/Anchorage"

	// NmsSettings1TimezoneAmericaAnguilla captures enum value "America/Anguilla"
	NmsSettings1TimezoneAmericaAnguilla string = "America/Anguilla"

	// NmsSettings1TimezoneAmericaAntigua captures enum value "America/Antigua"
	NmsSettings1TimezoneAmericaAntigua string = "America/Antigua"

	// NmsSettings1TimezoneAmericaAraguaina captures enum value "America/Araguaina"
	NmsSettings1TimezoneAmericaAraguaina string = "America/Araguaina"

	// NmsSettings1TimezoneAmericaArgentinaBuenosAires captures enum value "America/Argentina/Buenos_Aires"
	NmsSettings1TimezoneAmericaArgentinaBuenosAires string = "America/Argentina/Buenos_Aires"

	// NmsSettings1TimezoneAmericaArgentinaCatamarca captures enum value "America/Argentina/Catamarca"
	NmsSettings1TimezoneAmericaArgentinaCatamarca string = "America/Argentina/Catamarca"

	// NmsSettings1TimezoneAmericaArgentinaComodRivadavia captures enum value "America/Argentina/ComodRivadavia"
	NmsSettings1TimezoneAmericaArgentinaComodRivadavia string = "America/Argentina/ComodRivadavia"

	// NmsSettings1TimezoneAmericaArgentinaCordoba captures enum value "America/Argentina/Cordoba"
	NmsSettings1TimezoneAmericaArgentinaCordoba string = "America/Argentina/Cordoba"

	// NmsSettings1TimezoneAmericaArgentinaJujuy captures enum value "America/Argentina/Jujuy"
	NmsSettings1TimezoneAmericaArgentinaJujuy string = "America/Argentina/Jujuy"

	// NmsSettings1TimezoneAmericaArgentinaLaRioja captures enum value "America/Argentina/La_Rioja"
	NmsSettings1TimezoneAmericaArgentinaLaRioja string = "America/Argentina/La_Rioja"

	// NmsSettings1TimezoneAmericaArgentinaMendoza captures enum value "America/Argentina/Mendoza"
	NmsSettings1TimezoneAmericaArgentinaMendoza string = "America/Argentina/Mendoza"

	// NmsSettings1TimezoneAmericaArgentinaRioGallegos captures enum value "America/Argentina/Rio_Gallegos"
	NmsSettings1TimezoneAmericaArgentinaRioGallegos string = "America/Argentina/Rio_Gallegos"

	// NmsSettings1TimezoneAmericaArgentinaSalta captures enum value "America/Argentina/Salta"
	NmsSettings1TimezoneAmericaArgentinaSalta string = "America/Argentina/Salta"

	// NmsSettings1TimezoneAmericaArgentinaSanJuan captures enum value "America/Argentina/San_Juan"
	NmsSettings1TimezoneAmericaArgentinaSanJuan string = "America/Argentina/San_Juan"

	// NmsSettings1TimezoneAmericaArgentinaSanLuis captures enum value "America/Argentina/San_Luis"
	NmsSettings1TimezoneAmericaArgentinaSanLuis string = "America/Argentina/San_Luis"

	// NmsSettings1TimezoneAmericaArgentinaTucuman captures enum value "America/Argentina/Tucuman"
	NmsSettings1TimezoneAmericaArgentinaTucuman string = "America/Argentina/Tucuman"

	// NmsSettings1TimezoneAmericaArgentinaUshuaia captures enum value "America/Argentina/Ushuaia"
	NmsSettings1TimezoneAmericaArgentinaUshuaia string = "America/Argentina/Ushuaia"

	// NmsSettings1TimezoneAmericaAruba captures enum value "America/Aruba"
	NmsSettings1TimezoneAmericaAruba string = "America/Aruba"

	// NmsSettings1TimezoneAmericaAsuncion captures enum value "America/Asuncion"
	NmsSettings1TimezoneAmericaAsuncion string = "America/Asuncion"

	// NmsSettings1TimezoneAmericaAtikokan captures enum value "America/Atikokan"
	NmsSettings1TimezoneAmericaAtikokan string = "America/Atikokan"

	// NmsSettings1TimezoneAmericaAtka captures enum value "America/Atka"
	NmsSettings1TimezoneAmericaAtka string = "America/Atka"

	// NmsSettings1TimezoneAmericaBahia captures enum value "America/Bahia"
	NmsSettings1TimezoneAmericaBahia string = "America/Bahia"

	// NmsSettings1TimezoneAmericaBahiaBanderas captures enum value "America/Bahia_Banderas"
	NmsSettings1TimezoneAmericaBahiaBanderas string = "America/Bahia_Banderas"

	// NmsSettings1TimezoneAmericaBarbados captures enum value "America/Barbados"
	NmsSettings1TimezoneAmericaBarbados string = "America/Barbados"

	// NmsSettings1TimezoneAmericaBelem captures enum value "America/Belem"
	NmsSettings1TimezoneAmericaBelem string = "America/Belem"

	// NmsSettings1TimezoneAmericaBelize captures enum value "America/Belize"
	NmsSettings1TimezoneAmericaBelize string = "America/Belize"

	// NmsSettings1TimezoneAmericaBlancSablon captures enum value "America/Blanc-Sablon"
	NmsSettings1TimezoneAmericaBlancSablon string = "America/Blanc-Sablon"

	// NmsSettings1TimezoneAmericaBoaVista captures enum value "America/Boa_Vista"
	NmsSettings1TimezoneAmericaBoaVista string = "America/Boa_Vista"

	// NmsSettings1TimezoneAmericaBogota captures enum value "America/Bogota"
	NmsSettings1TimezoneAmericaBogota string = "America/Bogota"

	// NmsSettings1TimezoneAmericaBoise captures enum value "America/Boise"
	NmsSettings1TimezoneAmericaBoise string = "America/Boise"

	// NmsSettings1TimezoneAmericaBuenosAires captures enum value "America/Buenos_Aires"
	NmsSettings1TimezoneAmericaBuenosAires string = "America/Buenos_Aires"

	// NmsSettings1TimezoneAmericaCambridgeBay captures enum value "America/Cambridge_Bay"
	NmsSettings1TimezoneAmericaCambridgeBay string = "America/Cambridge_Bay"

	// NmsSettings1TimezoneAmericaCampoGrande captures enum value "America/Campo_Grande"
	NmsSettings1TimezoneAmericaCampoGrande string = "America/Campo_Grande"

	// NmsSettings1TimezoneAmericaCancun captures enum value "America/Cancun"
	NmsSettings1TimezoneAmericaCancun string = "America/Cancun"

	// NmsSettings1TimezoneAmericaCaracas captures enum value "America/Caracas"
	NmsSettings1TimezoneAmericaCaracas string = "America/Caracas"

	// NmsSettings1TimezoneAmericaCatamarca captures enum value "America/Catamarca"
	NmsSettings1TimezoneAmericaCatamarca string = "America/Catamarca"

	// NmsSettings1TimezoneAmericaCayenne captures enum value "America/Cayenne"
	NmsSettings1TimezoneAmericaCayenne string = "America/Cayenne"

	// NmsSettings1TimezoneAmericaCayman captures enum value "America/Cayman"
	NmsSettings1TimezoneAmericaCayman string = "America/Cayman"

	// NmsSettings1TimezoneAmericaChicago captures enum value "America/Chicago"
	NmsSettings1TimezoneAmericaChicago string = "America/Chicago"

	// NmsSettings1TimezoneAmericaChihuahua captures enum value "America/Chihuahua"
	NmsSettings1TimezoneAmericaChihuahua string = "America/Chihuahua"

	// NmsSettings1TimezoneAmericaCoralHarbour captures enum value "America/Coral_Harbour"
	NmsSettings1TimezoneAmericaCoralHarbour string = "America/Coral_Harbour"

	// NmsSettings1TimezoneAmericaCordoba captures enum value "America/Cordoba"
	NmsSettings1TimezoneAmericaCordoba string = "America/Cordoba"

	// NmsSettings1TimezoneAmericaCostaRica captures enum value "America/Costa_Rica"
	NmsSettings1TimezoneAmericaCostaRica string = "America/Costa_Rica"

	// NmsSettings1TimezoneAmericaCreston captures enum value "America/Creston"
	NmsSettings1TimezoneAmericaCreston string = "America/Creston"

	// NmsSettings1TimezoneAmericaCuiaba captures enum value "America/Cuiaba"
	NmsSettings1TimezoneAmericaCuiaba string = "America/Cuiaba"

	// NmsSettings1TimezoneAmericaCuracao captures enum value "America/Curacao"
	NmsSettings1TimezoneAmericaCuracao string = "America/Curacao"

	// NmsSettings1TimezoneAmericaDanmarkshavn captures enum value "America/Danmarkshavn"
	NmsSettings1TimezoneAmericaDanmarkshavn string = "America/Danmarkshavn"

	// NmsSettings1TimezoneAmericaDawson captures enum value "America/Dawson"
	NmsSettings1TimezoneAmericaDawson string = "America/Dawson"

	// NmsSettings1TimezoneAmericaDawsonCreek captures enum value "America/Dawson_Creek"
	NmsSettings1TimezoneAmericaDawsonCreek string = "America/Dawson_Creek"

	// NmsSettings1TimezoneAmericaDenver captures enum value "America/Denver"
	NmsSettings1TimezoneAmericaDenver string = "America/Denver"

	// NmsSettings1TimezoneAmericaDetroit captures enum value "America/Detroit"
	NmsSettings1TimezoneAmericaDetroit string = "America/Detroit"

	// NmsSettings1TimezoneAmericaDominica captures enum value "America/Dominica"
	NmsSettings1TimezoneAmericaDominica string = "America/Dominica"

	// NmsSettings1TimezoneAmericaEdmonton captures enum value "America/Edmonton"
	NmsSettings1TimezoneAmericaEdmonton string = "America/Edmonton"

	// NmsSettings1TimezoneAmericaEirunepe captures enum value "America/Eirunepe"
	NmsSettings1TimezoneAmericaEirunepe string = "America/Eirunepe"

	// NmsSettings1TimezoneAmericaElSalvador captures enum value "America/El_Salvador"
	NmsSettings1TimezoneAmericaElSalvador string = "America/El_Salvador"

	// NmsSettings1TimezoneAmericaEnsenada captures enum value "America/Ensenada"
	NmsSettings1TimezoneAmericaEnsenada string = "America/Ensenada"

	// NmsSettings1TimezoneAmericaFortNelson captures enum value "America/Fort_Nelson"
	NmsSettings1TimezoneAmericaFortNelson string = "America/Fort_Nelson"

	// NmsSettings1TimezoneAmericaFortWayne captures enum value "America/Fort_Wayne"
	NmsSettings1TimezoneAmericaFortWayne string = "America/Fort_Wayne"

	// NmsSettings1TimezoneAmericaFortaleza captures enum value "America/Fortaleza"
	NmsSettings1TimezoneAmericaFortaleza string = "America/Fortaleza"

	// NmsSettings1TimezoneAmericaGlaceBay captures enum value "America/Glace_Bay"
	NmsSettings1TimezoneAmericaGlaceBay string = "America/Glace_Bay"

	// NmsSettings1TimezoneAmericaGodthab captures enum value "America/Godthab"
	NmsSettings1TimezoneAmericaGodthab string = "America/Godthab"

	// NmsSettings1TimezoneAmericaGooseBay captures enum value "America/Goose_Bay"
	NmsSettings1TimezoneAmericaGooseBay string = "America/Goose_Bay"

	// NmsSettings1TimezoneAmericaGrandTurk captures enum value "America/Grand_Turk"
	NmsSettings1TimezoneAmericaGrandTurk string = "America/Grand_Turk"

	// NmsSettings1TimezoneAmericaGrenada captures enum value "America/Grenada"
	NmsSettings1TimezoneAmericaGrenada string = "America/Grenada"

	// NmsSettings1TimezoneAmericaGuadeloupe captures enum value "America/Guadeloupe"
	NmsSettings1TimezoneAmericaGuadeloupe string = "America/Guadeloupe"

	// NmsSettings1TimezoneAmericaGuatemala captures enum value "America/Guatemala"
	NmsSettings1TimezoneAmericaGuatemala string = "America/Guatemala"

	// NmsSettings1TimezoneAmericaGuayaquil captures enum value "America/Guayaquil"
	NmsSettings1TimezoneAmericaGuayaquil string = "America/Guayaquil"

	// NmsSettings1TimezoneAmericaGuyana captures enum value "America/Guyana"
	NmsSettings1TimezoneAmericaGuyana string = "America/Guyana"

	// NmsSettings1TimezoneAmericaHalifax captures enum value "America/Halifax"
	NmsSettings1TimezoneAmericaHalifax string = "America/Halifax"

	// NmsSettings1TimezoneAmericaHavana captures enum value "America/Havana"
	NmsSettings1TimezoneAmericaHavana string = "America/Havana"

	// NmsSettings1TimezoneAmericaHermosillo captures enum value "America/Hermosillo"
	NmsSettings1TimezoneAmericaHermosillo string = "America/Hermosillo"

	// NmsSettings1TimezoneAmericaIndianaIndianapolis captures enum value "America/Indiana/Indianapolis"
	NmsSettings1TimezoneAmericaIndianaIndianapolis string = "America/Indiana/Indianapolis"

	// NmsSettings1TimezoneAmericaIndianaKnox captures enum value "America/Indiana/Knox"
	NmsSettings1TimezoneAmericaIndianaKnox string = "America/Indiana/Knox"

	// NmsSettings1TimezoneAmericaIndianaMarengo captures enum value "America/Indiana/Marengo"
	NmsSettings1TimezoneAmericaIndianaMarengo string = "America/Indiana/Marengo"

	// NmsSettings1TimezoneAmericaIndianaPetersburg captures enum value "America/Indiana/Petersburg"
	NmsSettings1TimezoneAmericaIndianaPetersburg string = "America/Indiana/Petersburg"

	// NmsSettings1TimezoneAmericaIndianaTellCity captures enum value "America/Indiana/Tell_City"
	NmsSettings1TimezoneAmericaIndianaTellCity string = "America/Indiana/Tell_City"

	// NmsSettings1TimezoneAmericaIndianaVevay captures enum value "America/Indiana/Vevay"
	NmsSettings1TimezoneAmericaIndianaVevay string = "America/Indiana/Vevay"

	// NmsSettings1TimezoneAmericaIndianaVincennes captures enum value "America/Indiana/Vincennes"
	NmsSettings1TimezoneAmericaIndianaVincennes string = "America/Indiana/Vincennes"

	// NmsSettings1TimezoneAmericaIndianaWinamac captures enum value "America/Indiana/Winamac"
	NmsSettings1TimezoneAmericaIndianaWinamac string = "America/Indiana/Winamac"

	// NmsSettings1TimezoneAmericaIndianapolis captures enum value "America/Indianapolis"
	NmsSettings1TimezoneAmericaIndianapolis string = "America/Indianapolis"

	// NmsSettings1TimezoneAmericaInuvik captures enum value "America/Inuvik"
	NmsSettings1TimezoneAmericaInuvik string = "America/Inuvik"

	// NmsSettings1TimezoneAmericaIqaluit captures enum value "America/Iqaluit"
	NmsSettings1TimezoneAmericaIqaluit string = "America/Iqaluit"

	// NmsSettings1TimezoneAmericaJamaica captures enum value "America/Jamaica"
	NmsSettings1TimezoneAmericaJamaica string = "America/Jamaica"

	// NmsSettings1TimezoneAmericaJujuy captures enum value "America/Jujuy"
	NmsSettings1TimezoneAmericaJujuy string = "America/Jujuy"

	// NmsSettings1TimezoneAmericaJuneau captures enum value "America/Juneau"
	NmsSettings1TimezoneAmericaJuneau string = "America/Juneau"

	// NmsSettings1TimezoneAmericaKentuckyLouisville captures enum value "America/Kentucky/Louisville"
	NmsSettings1TimezoneAmericaKentuckyLouisville string = "America/Kentucky/Louisville"

	// NmsSettings1TimezoneAmericaKentuckyMonticello captures enum value "America/Kentucky/Monticello"
	NmsSettings1TimezoneAmericaKentuckyMonticello string = "America/Kentucky/Monticello"

	// NmsSettings1TimezoneAmericaKnoxIN captures enum value "America/Knox_IN"
	NmsSettings1TimezoneAmericaKnoxIN string = "America/Knox_IN"

	// NmsSettings1TimezoneAmericaKralendijk captures enum value "America/Kralendijk"
	NmsSettings1TimezoneAmericaKralendijk string = "America/Kralendijk"

	// NmsSettings1TimezoneAmericaLaPaz captures enum value "America/La_Paz"
	NmsSettings1TimezoneAmericaLaPaz string = "America/La_Paz"

	// NmsSettings1TimezoneAmericaLima captures enum value "America/Lima"
	NmsSettings1TimezoneAmericaLima string = "America/Lima"

	// NmsSettings1TimezoneAmericaLosAngeles captures enum value "America/Los_Angeles"
	NmsSettings1TimezoneAmericaLosAngeles string = "America/Los_Angeles"

	// NmsSettings1TimezoneAmericaLouisville captures enum value "America/Louisville"
	NmsSettings1TimezoneAmericaLouisville string = "America/Louisville"

	// NmsSettings1TimezoneAmericaLowerPrinces captures enum value "America/Lower_Princes"
	NmsSettings1TimezoneAmericaLowerPrinces string = "America/Lower_Princes"

	// NmsSettings1TimezoneAmericaMaceio captures enum value "America/Maceio"
	NmsSettings1TimezoneAmericaMaceio string = "America/Maceio"

	// NmsSettings1TimezoneAmericaManagua captures enum value "America/Managua"
	NmsSettings1TimezoneAmericaManagua string = "America/Managua"

	// NmsSettings1TimezoneAmericaManaus captures enum value "America/Manaus"
	NmsSettings1TimezoneAmericaManaus string = "America/Manaus"

	// NmsSettings1TimezoneAmericaMarigot captures enum value "America/Marigot"
	NmsSettings1TimezoneAmericaMarigot string = "America/Marigot"

	// NmsSettings1TimezoneAmericaMartinique captures enum value "America/Martinique"
	NmsSettings1TimezoneAmericaMartinique string = "America/Martinique"

	// NmsSettings1TimezoneAmericaMatamoros captures enum value "America/Matamoros"
	NmsSettings1TimezoneAmericaMatamoros string = "America/Matamoros"

	// NmsSettings1TimezoneAmericaMazatlan captures enum value "America/Mazatlan"
	NmsSettings1TimezoneAmericaMazatlan string = "America/Mazatlan"

	// NmsSettings1TimezoneAmericaMendoza captures enum value "America/Mendoza"
	NmsSettings1TimezoneAmericaMendoza string = "America/Mendoza"

	// NmsSettings1TimezoneAmericaMenominee captures enum value "America/Menominee"
	NmsSettings1TimezoneAmericaMenominee string = "America/Menominee"

	// NmsSettings1TimezoneAmericaMerida captures enum value "America/Merida"
	NmsSettings1TimezoneAmericaMerida string = "America/Merida"

	// NmsSettings1TimezoneAmericaMetlakatla captures enum value "America/Metlakatla"
	NmsSettings1TimezoneAmericaMetlakatla string = "America/Metlakatla"

	// NmsSettings1TimezoneAmericaMexicoCity captures enum value "America/Mexico_City"
	NmsSettings1TimezoneAmericaMexicoCity string = "America/Mexico_City"

	// NmsSettings1TimezoneAmericaMiquelon captures enum value "America/Miquelon"
	NmsSettings1TimezoneAmericaMiquelon string = "America/Miquelon"

	// NmsSettings1TimezoneAmericaMoncton captures enum value "America/Moncton"
	NmsSettings1TimezoneAmericaMoncton string = "America/Moncton"

	// NmsSettings1TimezoneAmericaMonterrey captures enum value "America/Monterrey"
	NmsSettings1TimezoneAmericaMonterrey string = "America/Monterrey"

	// NmsSettings1TimezoneAmericaMontevideo captures enum value "America/Montevideo"
	NmsSettings1TimezoneAmericaMontevideo string = "America/Montevideo"

	// NmsSettings1TimezoneAmericaMontreal captures enum value "America/Montreal"
	NmsSettings1TimezoneAmericaMontreal string = "America/Montreal"

	// NmsSettings1TimezoneAmericaMontserrat captures enum value "America/Montserrat"
	NmsSettings1TimezoneAmericaMontserrat string = "America/Montserrat"

	// NmsSettings1TimezoneAmericaNassau captures enum value "America/Nassau"
	NmsSettings1TimezoneAmericaNassau string = "America/Nassau"

	// NmsSettings1TimezoneAmericaNewYork captures enum value "America/New_York"
	NmsSettings1TimezoneAmericaNewYork string = "America/New_York"

	// NmsSettings1TimezoneAmericaNipigon captures enum value "America/Nipigon"
	NmsSettings1TimezoneAmericaNipigon string = "America/Nipigon"

	// NmsSettings1TimezoneAmericaNome captures enum value "America/Nome"
	NmsSettings1TimezoneAmericaNome string = "America/Nome"

	// NmsSettings1TimezoneAmericaNoronha captures enum value "America/Noronha"
	NmsSettings1TimezoneAmericaNoronha string = "America/Noronha"

	// NmsSettings1TimezoneAmericaNorthDakotaBeulah captures enum value "America/North_Dakota/Beulah"
	NmsSettings1TimezoneAmericaNorthDakotaBeulah string = "America/North_Dakota/Beulah"

	// NmsSettings1TimezoneAmericaNorthDakotaCenter captures enum value "America/North_Dakota/Center"
	NmsSettings1TimezoneAmericaNorthDakotaCenter string = "America/North_Dakota/Center"

	// NmsSettings1TimezoneAmericaNorthDakotaNewSalem captures enum value "America/North_Dakota/New_Salem"
	NmsSettings1TimezoneAmericaNorthDakotaNewSalem string = "America/North_Dakota/New_Salem"

	// NmsSettings1TimezoneAmericaOjinaga captures enum value "America/Ojinaga"
	NmsSettings1TimezoneAmericaOjinaga string = "America/Ojinaga"

	// NmsSettings1TimezoneAmericaPanama captures enum value "America/Panama"
	NmsSettings1TimezoneAmericaPanama string = "America/Panama"

	// NmsSettings1TimezoneAmericaPangnirtung captures enum value "America/Pangnirtung"
	NmsSettings1TimezoneAmericaPangnirtung string = "America/Pangnirtung"

	// NmsSettings1TimezoneAmericaParamaribo captures enum value "America/Paramaribo"
	NmsSettings1TimezoneAmericaParamaribo string = "America/Paramaribo"

	// NmsSettings1TimezoneAmericaPhoenix captures enum value "America/Phoenix"
	NmsSettings1TimezoneAmericaPhoenix string = "America/Phoenix"

	// NmsSettings1TimezoneAmericaPortAuPrince captures enum value "America/Port-au-Prince"
	NmsSettings1TimezoneAmericaPortAuPrince string = "America/Port-au-Prince"

	// NmsSettings1TimezoneAmericaPortOfSpain captures enum value "America/Port_of_Spain"
	NmsSettings1TimezoneAmericaPortOfSpain string = "America/Port_of_Spain"

	// NmsSettings1TimezoneAmericaPortoAcre captures enum value "America/Porto_Acre"
	NmsSettings1TimezoneAmericaPortoAcre string = "America/Porto_Acre"

	// NmsSettings1TimezoneAmericaPortoVelho captures enum value "America/Porto_Velho"
	NmsSettings1TimezoneAmericaPortoVelho string = "America/Porto_Velho"

	// NmsSettings1TimezoneAmericaPuertoRico captures enum value "America/Puerto_Rico"
	NmsSettings1TimezoneAmericaPuertoRico string = "America/Puerto_Rico"

	// NmsSettings1TimezoneAmericaPuntaArenas captures enum value "America/Punta_Arenas"
	NmsSettings1TimezoneAmericaPuntaArenas string = "America/Punta_Arenas"

	// NmsSettings1TimezoneAmericaRainyRiver captures enum value "America/Rainy_River"
	NmsSettings1TimezoneAmericaRainyRiver string = "America/Rainy_River"

	// NmsSettings1TimezoneAmericaRankinInlet captures enum value "America/Rankin_Inlet"
	NmsSettings1TimezoneAmericaRankinInlet string = "America/Rankin_Inlet"

	// NmsSettings1TimezoneAmericaRecife captures enum value "America/Recife"
	NmsSettings1TimezoneAmericaRecife string = "America/Recife"

	// NmsSettings1TimezoneAmericaRegina captures enum value "America/Regina"
	NmsSettings1TimezoneAmericaRegina string = "America/Regina"

	// NmsSettings1TimezoneAmericaResolute captures enum value "America/Resolute"
	NmsSettings1TimezoneAmericaResolute string = "America/Resolute"

	// NmsSettings1TimezoneAmericaRioBranco captures enum value "America/Rio_Branco"
	NmsSettings1TimezoneAmericaRioBranco string = "America/Rio_Branco"

	// NmsSettings1TimezoneAmericaRosario captures enum value "America/Rosario"
	NmsSettings1TimezoneAmericaRosario string = "America/Rosario"

	// NmsSettings1TimezoneAmericaSantaIsabel captures enum value "America/Santa_Isabel"
	NmsSettings1TimezoneAmericaSantaIsabel string = "America/Santa_Isabel"

	// NmsSettings1TimezoneAmericaSantarem captures enum value "America/Santarem"
	NmsSettings1TimezoneAmericaSantarem string = "America/Santarem"

	// NmsSettings1TimezoneAmericaSantiago captures enum value "America/Santiago"
	NmsSettings1TimezoneAmericaSantiago string = "America/Santiago"

	// NmsSettings1TimezoneAmericaSantoDomingo captures enum value "America/Santo_Domingo"
	NmsSettings1TimezoneAmericaSantoDomingo string = "America/Santo_Domingo"

	// NmsSettings1TimezoneAmericaSaoPaulo captures enum value "America/Sao_Paulo"
	NmsSettings1TimezoneAmericaSaoPaulo string = "America/Sao_Paulo"

	// NmsSettings1TimezoneAmericaScoresbysund captures enum value "America/Scoresbysund"
	NmsSettings1TimezoneAmericaScoresbysund string = "America/Scoresbysund"

	// NmsSettings1TimezoneAmericaShiprock captures enum value "America/Shiprock"
	NmsSettings1TimezoneAmericaShiprock string = "America/Shiprock"

	// NmsSettings1TimezoneAmericaSitka captures enum value "America/Sitka"
	NmsSettings1TimezoneAmericaSitka string = "America/Sitka"

	// NmsSettings1TimezoneAmericaStBarthelemy captures enum value "America/St_Barthelemy"
	NmsSettings1TimezoneAmericaStBarthelemy string = "America/St_Barthelemy"

	// NmsSettings1TimezoneAmericaStJohns captures enum value "America/St_Johns"
	NmsSettings1TimezoneAmericaStJohns string = "America/St_Johns"

	// NmsSettings1TimezoneAmericaStKitts captures enum value "America/St_Kitts"
	NmsSettings1TimezoneAmericaStKitts string = "America/St_Kitts"

	// NmsSettings1TimezoneAmericaStLucia captures enum value "America/St_Lucia"
	NmsSettings1TimezoneAmericaStLucia string = "America/St_Lucia"

	// NmsSettings1TimezoneAmericaStThomas captures enum value "America/St_Thomas"
	NmsSettings1TimezoneAmericaStThomas string = "America/St_Thomas"

	// NmsSettings1TimezoneAmericaStVincent captures enum value "America/St_Vincent"
	NmsSettings1TimezoneAmericaStVincent string = "America/St_Vincent"

	// NmsSettings1TimezoneAmericaSwiftCurrent captures enum value "America/Swift_Current"
	NmsSettings1TimezoneAmericaSwiftCurrent string = "America/Swift_Current"

	// NmsSettings1TimezoneAmericaTegucigalpa captures enum value "America/Tegucigalpa"
	NmsSettings1TimezoneAmericaTegucigalpa string = "America/Tegucigalpa"

	// NmsSettings1TimezoneAmericaThule captures enum value "America/Thule"
	NmsSettings1TimezoneAmericaThule string = "America/Thule"

	// NmsSettings1TimezoneAmericaThunderBay captures enum value "America/Thunder_Bay"
	NmsSettings1TimezoneAmericaThunderBay string = "America/Thunder_Bay"

	// NmsSettings1TimezoneAmericaTijuana captures enum value "America/Tijuana"
	NmsSettings1TimezoneAmericaTijuana string = "America/Tijuana"

	// NmsSettings1TimezoneAmericaToronto captures enum value "America/Toronto"
	NmsSettings1TimezoneAmericaToronto string = "America/Toronto"

	// NmsSettings1TimezoneAmericaTortola captures enum value "America/Tortola"
	NmsSettings1TimezoneAmericaTortola string = "America/Tortola"

	// NmsSettings1TimezoneAmericaVancouver captures enum value "America/Vancouver"
	NmsSettings1TimezoneAmericaVancouver string = "America/Vancouver"

	// NmsSettings1TimezoneAmericaVirgin captures enum value "America/Virgin"
	NmsSettings1TimezoneAmericaVirgin string = "America/Virgin"

	// NmsSettings1TimezoneAmericaWhitehorse captures enum value "America/Whitehorse"
	NmsSettings1TimezoneAmericaWhitehorse string = "America/Whitehorse"

	// NmsSettings1TimezoneAmericaWinnipeg captures enum value "America/Winnipeg"
	NmsSettings1TimezoneAmericaWinnipeg string = "America/Winnipeg"

	// NmsSettings1TimezoneAmericaYakutat captures enum value "America/Yakutat"
	NmsSettings1TimezoneAmericaYakutat string = "America/Yakutat"

	// NmsSettings1TimezoneAmericaYellowknife captures enum value "America/Yellowknife"
	NmsSettings1TimezoneAmericaYellowknife string = "America/Yellowknife"

	// NmsSettings1TimezoneAntarcticaCasey captures enum value "Antarctica/Casey"
	NmsSettings1TimezoneAntarcticaCasey string = "Antarctica/Casey"

	// NmsSettings1TimezoneAntarcticaDavis captures enum value "Antarctica/Davis"
	NmsSettings1TimezoneAntarcticaDavis string = "Antarctica/Davis"

	// NmsSettings1TimezoneAntarcticaDumontDUrville captures enum value "Antarctica/DumontDUrville"
	NmsSettings1TimezoneAntarcticaDumontDUrville string = "Antarctica/DumontDUrville"

	// NmsSettings1TimezoneAntarcticaMacquarie captures enum value "Antarctica/Macquarie"
	NmsSettings1TimezoneAntarcticaMacquarie string = "Antarctica/Macquarie"

	// NmsSettings1TimezoneAntarcticaMawson captures enum value "Antarctica/Mawson"
	NmsSettings1TimezoneAntarcticaMawson string = "Antarctica/Mawson"

	// NmsSettings1TimezoneAntarcticaMcMurdo captures enum value "Antarctica/McMurdo"
	NmsSettings1TimezoneAntarcticaMcMurdo string = "Antarctica/McMurdo"

	// NmsSettings1TimezoneAntarcticaPalmer captures enum value "Antarctica/Palmer"
	NmsSettings1TimezoneAntarcticaPalmer string = "Antarctica/Palmer"

	// NmsSettings1TimezoneAntarcticaRothera captures enum value "Antarctica/Rothera"
	NmsSettings1TimezoneAntarcticaRothera string = "Antarctica/Rothera"

	// NmsSettings1TimezoneAntarcticaSouthPole captures enum value "Antarctica/South_Pole"
	NmsSettings1TimezoneAntarcticaSouthPole string = "Antarctica/South_Pole"

	// NmsSettings1TimezoneAntarcticaSyowa captures enum value "Antarctica/Syowa"
	NmsSettings1TimezoneAntarcticaSyowa string = "Antarctica/Syowa"

	// NmsSettings1TimezoneAntarcticaTroll captures enum value "Antarctica/Troll"
	NmsSettings1TimezoneAntarcticaTroll string = "Antarctica/Troll"

	// NmsSettings1TimezoneAntarcticaVostok captures enum value "Antarctica/Vostok"
	NmsSettings1TimezoneAntarcticaVostok string = "Antarctica/Vostok"

	// NmsSettings1TimezoneArcticLongyearbyen captures enum value "Arctic/Longyearbyen"
	NmsSettings1TimezoneArcticLongyearbyen string = "Arctic/Longyearbyen"

	// NmsSettings1TimezoneAsiaAden captures enum value "Asia/Aden"
	NmsSettings1TimezoneAsiaAden string = "Asia/Aden"

	// NmsSettings1TimezoneAsiaAlmaty captures enum value "Asia/Almaty"
	NmsSettings1TimezoneAsiaAlmaty string = "Asia/Almaty"

	// NmsSettings1TimezoneAsiaAmman captures enum value "Asia/Amman"
	NmsSettings1TimezoneAsiaAmman string = "Asia/Amman"

	// NmsSettings1TimezoneAsiaAnadyr captures enum value "Asia/Anadyr"
	NmsSettings1TimezoneAsiaAnadyr string = "Asia/Anadyr"

	// NmsSettings1TimezoneAsiaAqtau captures enum value "Asia/Aqtau"
	NmsSettings1TimezoneAsiaAqtau string = "Asia/Aqtau"

	// NmsSettings1TimezoneAsiaAqtobe captures enum value "Asia/Aqtobe"
	NmsSettings1TimezoneAsiaAqtobe string = "Asia/Aqtobe"

	// NmsSettings1TimezoneAsiaAshgabat captures enum value "Asia/Ashgabat"
	NmsSettings1TimezoneAsiaAshgabat string = "Asia/Ashgabat"

	// NmsSettings1TimezoneAsiaAshkhabad captures enum value "Asia/Ashkhabad"
	NmsSettings1TimezoneAsiaAshkhabad string = "Asia/Ashkhabad"

	// NmsSettings1TimezoneAsiaAtyrau captures enum value "Asia/Atyrau"
	NmsSettings1TimezoneAsiaAtyrau string = "Asia/Atyrau"

	// NmsSettings1TimezoneAsiaBaghdad captures enum value "Asia/Baghdad"
	NmsSettings1TimezoneAsiaBaghdad string = "Asia/Baghdad"

	// NmsSettings1TimezoneAsiaBahrain captures enum value "Asia/Bahrain"
	NmsSettings1TimezoneAsiaBahrain string = "Asia/Bahrain"

	// NmsSettings1TimezoneAsiaBaku captures enum value "Asia/Baku"
	NmsSettings1TimezoneAsiaBaku string = "Asia/Baku"

	// NmsSettings1TimezoneAsiaBangkok captures enum value "Asia/Bangkok"
	NmsSettings1TimezoneAsiaBangkok string = "Asia/Bangkok"

	// NmsSettings1TimezoneAsiaBarnaul captures enum value "Asia/Barnaul"
	NmsSettings1TimezoneAsiaBarnaul string = "Asia/Barnaul"

	// NmsSettings1TimezoneAsiaBeirut captures enum value "Asia/Beirut"
	NmsSettings1TimezoneAsiaBeirut string = "Asia/Beirut"

	// NmsSettings1TimezoneAsiaBishkek captures enum value "Asia/Bishkek"
	NmsSettings1TimezoneAsiaBishkek string = "Asia/Bishkek"

	// NmsSettings1TimezoneAsiaBrunei captures enum value "Asia/Brunei"
	NmsSettings1TimezoneAsiaBrunei string = "Asia/Brunei"

	// NmsSettings1TimezoneAsiaCalcutta captures enum value "Asia/Calcutta"
	NmsSettings1TimezoneAsiaCalcutta string = "Asia/Calcutta"

	// NmsSettings1TimezoneAsiaChita captures enum value "Asia/Chita"
	NmsSettings1TimezoneAsiaChita string = "Asia/Chita"

	// NmsSettings1TimezoneAsiaChoibalsan captures enum value "Asia/Choibalsan"
	NmsSettings1TimezoneAsiaChoibalsan string = "Asia/Choibalsan"

	// NmsSettings1TimezoneAsiaChongqing captures enum value "Asia/Chongqing"
	NmsSettings1TimezoneAsiaChongqing string = "Asia/Chongqing"

	// NmsSettings1TimezoneAsiaChungking captures enum value "Asia/Chungking"
	NmsSettings1TimezoneAsiaChungking string = "Asia/Chungking"

	// NmsSettings1TimezoneAsiaColombo captures enum value "Asia/Colombo"
	NmsSettings1TimezoneAsiaColombo string = "Asia/Colombo"

	// NmsSettings1TimezoneAsiaDacca captures enum value "Asia/Dacca"
	NmsSettings1TimezoneAsiaDacca string = "Asia/Dacca"

	// NmsSettings1TimezoneAsiaDamascus captures enum value "Asia/Damascus"
	NmsSettings1TimezoneAsiaDamascus string = "Asia/Damascus"

	// NmsSettings1TimezoneAsiaDhaka captures enum value "Asia/Dhaka"
	NmsSettings1TimezoneAsiaDhaka string = "Asia/Dhaka"

	// NmsSettings1TimezoneAsiaDili captures enum value "Asia/Dili"
	NmsSettings1TimezoneAsiaDili string = "Asia/Dili"

	// NmsSettings1TimezoneAsiaDubai captures enum value "Asia/Dubai"
	NmsSettings1TimezoneAsiaDubai string = "Asia/Dubai"

	// NmsSettings1TimezoneAsiaDushanbe captures enum value "Asia/Dushanbe"
	NmsSettings1TimezoneAsiaDushanbe string = "Asia/Dushanbe"

	// NmsSettings1TimezoneAsiaFamagusta captures enum value "Asia/Famagusta"
	NmsSettings1TimezoneAsiaFamagusta string = "Asia/Famagusta"

	// NmsSettings1TimezoneAsiaGaza captures enum value "Asia/Gaza"
	NmsSettings1TimezoneAsiaGaza string = "Asia/Gaza"

	// NmsSettings1TimezoneAsiaHarbin captures enum value "Asia/Harbin"
	NmsSettings1TimezoneAsiaHarbin string = "Asia/Harbin"

	// NmsSettings1TimezoneAsiaHebron captures enum value "Asia/Hebron"
	NmsSettings1TimezoneAsiaHebron string = "Asia/Hebron"

	// NmsSettings1TimezoneAsiaHoChiMinh captures enum value "Asia/Ho_Chi_Minh"
	NmsSettings1TimezoneAsiaHoChiMinh string = "Asia/Ho_Chi_Minh"

	// NmsSettings1TimezoneAsiaHongKong captures enum value "Asia/Hong_Kong"
	NmsSettings1TimezoneAsiaHongKong string = "Asia/Hong_Kong"

	// NmsSettings1TimezoneAsiaHovd captures enum value "Asia/Hovd"
	NmsSettings1TimezoneAsiaHovd string = "Asia/Hovd"

	// NmsSettings1TimezoneAsiaIrkutsk captures enum value "Asia/Irkutsk"
	NmsSettings1TimezoneAsiaIrkutsk string = "Asia/Irkutsk"

	// NmsSettings1TimezoneAsiaIstanbul captures enum value "Asia/Istanbul"
	NmsSettings1TimezoneAsiaIstanbul string = "Asia/Istanbul"

	// NmsSettings1TimezoneAsiaJakarta captures enum value "Asia/Jakarta"
	NmsSettings1TimezoneAsiaJakarta string = "Asia/Jakarta"

	// NmsSettings1TimezoneAsiaJayapura captures enum value "Asia/Jayapura"
	NmsSettings1TimezoneAsiaJayapura string = "Asia/Jayapura"

	// NmsSettings1TimezoneAsiaJerusalem captures enum value "Asia/Jerusalem"
	NmsSettings1TimezoneAsiaJerusalem string = "Asia/Jerusalem"

	// NmsSettings1TimezoneAsiaKabul captures enum value "Asia/Kabul"
	NmsSettings1TimezoneAsiaKabul string = "Asia/Kabul"

	// NmsSettings1TimezoneAsiaKamchatka captures enum value "Asia/Kamchatka"
	NmsSettings1TimezoneAsiaKamchatka string = "Asia/Kamchatka"

	// NmsSettings1TimezoneAsiaKarachi captures enum value "Asia/Karachi"
	NmsSettings1TimezoneAsiaKarachi string = "Asia/Karachi"

	// NmsSettings1TimezoneAsiaKashgar captures enum value "Asia/Kashgar"
	NmsSettings1TimezoneAsiaKashgar string = "Asia/Kashgar"

	// NmsSettings1TimezoneAsiaKathmandu captures enum value "Asia/Kathmandu"
	NmsSettings1TimezoneAsiaKathmandu string = "Asia/Kathmandu"

	// NmsSettings1TimezoneAsiaKatmandu captures enum value "Asia/Katmandu"
	NmsSettings1TimezoneAsiaKatmandu string = "Asia/Katmandu"

	// NmsSettings1TimezoneAsiaKhandyga captures enum value "Asia/Khandyga"
	NmsSettings1TimezoneAsiaKhandyga string = "Asia/Khandyga"

	// NmsSettings1TimezoneAsiaKolkata captures enum value "Asia/Kolkata"
	NmsSettings1TimezoneAsiaKolkata string = "Asia/Kolkata"

	// NmsSettings1TimezoneAsiaKrasnoyarsk captures enum value "Asia/Krasnoyarsk"
	NmsSettings1TimezoneAsiaKrasnoyarsk string = "Asia/Krasnoyarsk"

	// NmsSettings1TimezoneAsiaKualaLumpur captures enum value "Asia/Kuala_Lumpur"
	NmsSettings1TimezoneAsiaKualaLumpur string = "Asia/Kuala_Lumpur"

	// NmsSettings1TimezoneAsiaKuching captures enum value "Asia/Kuching"
	NmsSettings1TimezoneAsiaKuching string = "Asia/Kuching"

	// NmsSettings1TimezoneAsiaKuwait captures enum value "Asia/Kuwait"
	NmsSettings1TimezoneAsiaKuwait string = "Asia/Kuwait"

	// NmsSettings1TimezoneAsiaMacao captures enum value "Asia/Macao"
	NmsSettings1TimezoneAsiaMacao string = "Asia/Macao"

	// NmsSettings1TimezoneAsiaMacau captures enum value "Asia/Macau"
	NmsSettings1TimezoneAsiaMacau string = "Asia/Macau"

	// NmsSettings1TimezoneAsiaMagadan captures enum value "Asia/Magadan"
	NmsSettings1TimezoneAsiaMagadan string = "Asia/Magadan"

	// NmsSettings1TimezoneAsiaMakassar captures enum value "Asia/Makassar"
	NmsSettings1TimezoneAsiaMakassar string = "Asia/Makassar"

	// NmsSettings1TimezoneAsiaManila captures enum value "Asia/Manila"
	NmsSettings1TimezoneAsiaManila string = "Asia/Manila"

	// NmsSettings1TimezoneAsiaMuscat captures enum value "Asia/Muscat"
	NmsSettings1TimezoneAsiaMuscat string = "Asia/Muscat"

	// NmsSettings1TimezoneAsiaNicosia captures enum value "Asia/Nicosia"
	NmsSettings1TimezoneAsiaNicosia string = "Asia/Nicosia"

	// NmsSettings1TimezoneAsiaNovokuznetsk captures enum value "Asia/Novokuznetsk"
	NmsSettings1TimezoneAsiaNovokuznetsk string = "Asia/Novokuznetsk"

	// NmsSettings1TimezoneAsiaNovosibirsk captures enum value "Asia/Novosibirsk"
	NmsSettings1TimezoneAsiaNovosibirsk string = "Asia/Novosibirsk"

	// NmsSettings1TimezoneAsiaOmsk captures enum value "Asia/Omsk"
	NmsSettings1TimezoneAsiaOmsk string = "Asia/Omsk"

	// NmsSettings1TimezoneAsiaOral captures enum value "Asia/Oral"
	NmsSettings1TimezoneAsiaOral string = "Asia/Oral"

	// NmsSettings1TimezoneAsiaPhnomPenh captures enum value "Asia/Phnom_Penh"
	NmsSettings1TimezoneAsiaPhnomPenh string = "Asia/Phnom_Penh"

	// NmsSettings1TimezoneAsiaPontianak captures enum value "Asia/Pontianak"
	NmsSettings1TimezoneAsiaPontianak string = "Asia/Pontianak"

	// NmsSettings1TimezoneAsiaPyongyang captures enum value "Asia/Pyongyang"
	NmsSettings1TimezoneAsiaPyongyang string = "Asia/Pyongyang"

	// NmsSettings1TimezoneAsiaQatar captures enum value "Asia/Qatar"
	NmsSettings1TimezoneAsiaQatar string = "Asia/Qatar"

	// NmsSettings1TimezoneAsiaQyzylorda captures enum value "Asia/Qyzylorda"
	NmsSettings1TimezoneAsiaQyzylorda string = "Asia/Qyzylorda"

	// NmsSettings1TimezoneAsiaRangoon captures enum value "Asia/Rangoon"
	NmsSettings1TimezoneAsiaRangoon string = "Asia/Rangoon"

	// NmsSettings1TimezoneAsiaRiyadh captures enum value "Asia/Riyadh"
	NmsSettings1TimezoneAsiaRiyadh string = "Asia/Riyadh"

	// NmsSettings1TimezoneAsiaSaigon captures enum value "Asia/Saigon"
	NmsSettings1TimezoneAsiaSaigon string = "Asia/Saigon"

	// NmsSettings1TimezoneAsiaSakhalin captures enum value "Asia/Sakhalin"
	NmsSettings1TimezoneAsiaSakhalin string = "Asia/Sakhalin"

	// NmsSettings1TimezoneAsiaSamarkand captures enum value "Asia/Samarkand"
	NmsSettings1TimezoneAsiaSamarkand string = "Asia/Samarkand"

	// NmsSettings1TimezoneAsiaSeoul captures enum value "Asia/Seoul"
	NmsSettings1TimezoneAsiaSeoul string = "Asia/Seoul"

	// NmsSettings1TimezoneAsiaShanghai captures enum value "Asia/Shanghai"
	NmsSettings1TimezoneAsiaShanghai string = "Asia/Shanghai"

	// NmsSettings1TimezoneAsiaSingapore captures enum value "Asia/Singapore"
	NmsSettings1TimezoneAsiaSingapore string = "Asia/Singapore"

	// NmsSettings1TimezoneAsiaSrednekolymsk captures enum value "Asia/Srednekolymsk"
	NmsSettings1TimezoneAsiaSrednekolymsk string = "Asia/Srednekolymsk"

	// NmsSettings1TimezoneAsiaTaipei captures enum value "Asia/Taipei"
	NmsSettings1TimezoneAsiaTaipei string = "Asia/Taipei"

	// NmsSettings1TimezoneAsiaTashkent captures enum value "Asia/Tashkent"
	NmsSettings1TimezoneAsiaTashkent string = "Asia/Tashkent"

	// NmsSettings1TimezoneAsiaTbilisi captures enum value "Asia/Tbilisi"
	NmsSettings1TimezoneAsiaTbilisi string = "Asia/Tbilisi"

	// NmsSettings1TimezoneAsiaTehran captures enum value "Asia/Tehran"
	NmsSettings1TimezoneAsiaTehran string = "Asia/Tehran"

	// NmsSettings1TimezoneAsiaTelAviv captures enum value "Asia/Tel_Aviv"
	NmsSettings1TimezoneAsiaTelAviv string = "Asia/Tel_Aviv"

	// NmsSettings1TimezoneAsiaThimbu captures enum value "Asia/Thimbu"
	NmsSettings1TimezoneAsiaThimbu string = "Asia/Thimbu"

	// NmsSettings1TimezoneAsiaThimphu captures enum value "Asia/Thimphu"
	NmsSettings1TimezoneAsiaThimphu string = "Asia/Thimphu"

	// NmsSettings1TimezoneAsiaTokyo captures enum value "Asia/Tokyo"
	NmsSettings1TimezoneAsiaTokyo string = "Asia/Tokyo"

	// NmsSettings1TimezoneAsiaTomsk captures enum value "Asia/Tomsk"
	NmsSettings1TimezoneAsiaTomsk string = "Asia/Tomsk"

	// NmsSettings1TimezoneAsiaUjungPandang captures enum value "Asia/Ujung_Pandang"
	NmsSettings1TimezoneAsiaUjungPandang string = "Asia/Ujung_Pandang"

	// NmsSettings1TimezoneAsiaUlaanbaatar captures enum value "Asia/Ulaanbaatar"
	NmsSettings1TimezoneAsiaUlaanbaatar string = "Asia/Ulaanbaatar"

	// NmsSettings1TimezoneAsiaUlanBator captures enum value "Asia/Ulan_Bator"
	NmsSettings1TimezoneAsiaUlanBator string = "Asia/Ulan_Bator"

	// NmsSettings1TimezoneAsiaUrumqi captures enum value "Asia/Urumqi"
	NmsSettings1TimezoneAsiaUrumqi string = "Asia/Urumqi"

	// NmsSettings1TimezoneAsiaUstNera captures enum value "Asia/Ust-Nera"
	NmsSettings1TimezoneAsiaUstNera string = "Asia/Ust-Nera"

	// NmsSettings1TimezoneAsiaVientiane captures enum value "Asia/Vientiane"
	NmsSettings1TimezoneAsiaVientiane string = "Asia/Vientiane"

	// NmsSettings1TimezoneAsiaVladivostok captures enum value "Asia/Vladivostok"
	NmsSettings1TimezoneAsiaVladivostok string = "Asia/Vladivostok"

	// NmsSettings1TimezoneAsiaYakutsk captures enum value "Asia/Yakutsk"
	NmsSettings1TimezoneAsiaYakutsk string = "Asia/Yakutsk"

	// NmsSettings1TimezoneAsiaYangon captures enum value "Asia/Yangon"
	NmsSettings1TimezoneAsiaYangon string = "Asia/Yangon"

	// NmsSettings1TimezoneAsiaYekaterinburg captures enum value "Asia/Yekaterinburg"
	NmsSettings1TimezoneAsiaYekaterinburg string = "Asia/Yekaterinburg"

	// NmsSettings1TimezoneAsiaYerevan captures enum value "Asia/Yerevan"
	NmsSettings1TimezoneAsiaYerevan string = "Asia/Yerevan"

	// NmsSettings1TimezoneAtlanticAzores captures enum value "Atlantic/Azores"
	NmsSettings1TimezoneAtlanticAzores string = "Atlantic/Azores"

	// NmsSettings1TimezoneAtlanticBermuda captures enum value "Atlantic/Bermuda"
	NmsSettings1TimezoneAtlanticBermuda string = "Atlantic/Bermuda"

	// NmsSettings1TimezoneAtlanticCanary captures enum value "Atlantic/Canary"
	NmsSettings1TimezoneAtlanticCanary string = "Atlantic/Canary"

	// NmsSettings1TimezoneAtlanticCapeVerde captures enum value "Atlantic/Cape_Verde"
	NmsSettings1TimezoneAtlanticCapeVerde string = "Atlantic/Cape_Verde"

	// NmsSettings1TimezoneAtlanticFaeroe captures enum value "Atlantic/Faeroe"
	NmsSettings1TimezoneAtlanticFaeroe string = "Atlantic/Faeroe"

	// NmsSettings1TimezoneAtlanticFaroe captures enum value "Atlantic/Faroe"
	NmsSettings1TimezoneAtlanticFaroe string = "Atlantic/Faroe"

	// NmsSettings1TimezoneAtlanticJanMayen captures enum value "Atlantic/Jan_Mayen"
	NmsSettings1TimezoneAtlanticJanMayen string = "Atlantic/Jan_Mayen"

	// NmsSettings1TimezoneAtlanticMadeira captures enum value "Atlantic/Madeira"
	NmsSettings1TimezoneAtlanticMadeira string = "Atlantic/Madeira"

	// NmsSettings1TimezoneAtlanticReykjavik captures enum value "Atlantic/Reykjavik"
	NmsSettings1TimezoneAtlanticReykjavik string = "Atlantic/Reykjavik"

	// NmsSettings1TimezoneAtlanticSouthGeorgia captures enum value "Atlantic/South_Georgia"
	NmsSettings1TimezoneAtlanticSouthGeorgia string = "Atlantic/South_Georgia"

	// NmsSettings1TimezoneAtlanticStHelena captures enum value "Atlantic/St_Helena"
	NmsSettings1TimezoneAtlanticStHelena string = "Atlantic/St_Helena"

	// NmsSettings1TimezoneAtlanticStanley captures enum value "Atlantic/Stanley"
	NmsSettings1TimezoneAtlanticStanley string = "Atlantic/Stanley"

	// NmsSettings1TimezoneAustraliaACT captures enum value "Australia/ACT"
	NmsSettings1TimezoneAustraliaACT string = "Australia/ACT"

	// NmsSettings1TimezoneAustraliaAdelaide captures enum value "Australia/Adelaide"
	NmsSettings1TimezoneAustraliaAdelaide string = "Australia/Adelaide"

	// NmsSettings1TimezoneAustraliaBrisbane captures enum value "Australia/Brisbane"
	NmsSettings1TimezoneAustraliaBrisbane string = "Australia/Brisbane"

	// NmsSettings1TimezoneAustraliaBrokenHill captures enum value "Australia/Broken_Hill"
	NmsSettings1TimezoneAustraliaBrokenHill string = "Australia/Broken_Hill"

	// NmsSettings1TimezoneAustraliaCanberra captures enum value "Australia/Canberra"
	NmsSettings1TimezoneAustraliaCanberra string = "Australia/Canberra"

	// NmsSettings1TimezoneAustraliaCurrie captures enum value "Australia/Currie"
	NmsSettings1TimezoneAustraliaCurrie string = "Australia/Currie"

	// NmsSettings1TimezoneAustraliaDarwin captures enum value "Australia/Darwin"
	NmsSettings1TimezoneAustraliaDarwin string = "Australia/Darwin"

	// NmsSettings1TimezoneAustraliaEucla captures enum value "Australia/Eucla"
	NmsSettings1TimezoneAustraliaEucla string = "Australia/Eucla"

	// NmsSettings1TimezoneAustraliaHobart captures enum value "Australia/Hobart"
	NmsSettings1TimezoneAustraliaHobart string = "Australia/Hobart"

	// NmsSettings1TimezoneAustraliaLHI captures enum value "Australia/LHI"
	NmsSettings1TimezoneAustraliaLHI string = "Australia/LHI"

	// NmsSettings1TimezoneAustraliaLindeman captures enum value "Australia/Lindeman"
	NmsSettings1TimezoneAustraliaLindeman string = "Australia/Lindeman"

	// NmsSettings1TimezoneAustraliaLordHowe captures enum value "Australia/Lord_Howe"
	NmsSettings1TimezoneAustraliaLordHowe string = "Australia/Lord_Howe"

	// NmsSettings1TimezoneAustraliaMelbourne captures enum value "Australia/Melbourne"
	NmsSettings1TimezoneAustraliaMelbourne string = "Australia/Melbourne"

	// NmsSettings1TimezoneAustraliaNSW captures enum value "Australia/NSW"
	NmsSettings1TimezoneAustraliaNSW string = "Australia/NSW"

	// NmsSettings1TimezoneAustraliaNorth captures enum value "Australia/North"
	NmsSettings1TimezoneAustraliaNorth string = "Australia/North"

	// NmsSettings1TimezoneAustraliaPerth captures enum value "Australia/Perth"
	NmsSettings1TimezoneAustraliaPerth string = "Australia/Perth"

	// NmsSettings1TimezoneAustraliaQueensland captures enum value "Australia/Queensland"
	NmsSettings1TimezoneAustraliaQueensland string = "Australia/Queensland"

	// NmsSettings1TimezoneAustraliaSouth captures enum value "Australia/South"
	NmsSettings1TimezoneAustraliaSouth string = "Australia/South"

	// NmsSettings1TimezoneAustraliaSydney captures enum value "Australia/Sydney"
	NmsSettings1TimezoneAustraliaSydney string = "Australia/Sydney"

	// NmsSettings1TimezoneAustraliaTasmania captures enum value "Australia/Tasmania"
	NmsSettings1TimezoneAustraliaTasmania string = "Australia/Tasmania"

	// NmsSettings1TimezoneAustraliaVictoria captures enum value "Australia/Victoria"
	NmsSettings1TimezoneAustraliaVictoria string = "Australia/Victoria"

	// NmsSettings1TimezoneAustraliaWest captures enum value "Australia/West"
	NmsSettings1TimezoneAustraliaWest string = "Australia/West"

	// NmsSettings1TimezoneAustraliaYancowinna captures enum value "Australia/Yancowinna"
	NmsSettings1TimezoneAustraliaYancowinna string = "Australia/Yancowinna"

	// NmsSettings1TimezoneBrazilAcre captures enum value "Brazil/Acre"
	NmsSettings1TimezoneBrazilAcre string = "Brazil/Acre"

	// NmsSettings1TimezoneBrazilDeNoronha captures enum value "Brazil/DeNoronha"
	NmsSettings1TimezoneBrazilDeNoronha string = "Brazil/DeNoronha"

	// NmsSettings1TimezoneBrazilEast captures enum value "Brazil/East"
	NmsSettings1TimezoneBrazilEast string = "Brazil/East"

	// NmsSettings1TimezoneBrazilWest captures enum value "Brazil/West"
	NmsSettings1TimezoneBrazilWest string = "Brazil/West"

	// NmsSettings1TimezoneCET captures enum value "CET"
	NmsSettings1TimezoneCET string = "CET"

	// NmsSettings1TimezoneCST6CDT captures enum value "CST6CDT"
	NmsSettings1TimezoneCST6CDT string = "CST6CDT"

	// NmsSettings1TimezoneCanadaAtlantic captures enum value "Canada/Atlantic"
	NmsSettings1TimezoneCanadaAtlantic string = "Canada/Atlantic"

	// NmsSettings1TimezoneCanadaCentral captures enum value "Canada/Central"
	NmsSettings1TimezoneCanadaCentral string = "Canada/Central"

	// NmsSettings1TimezoneCanadaEastern captures enum value "Canada/Eastern"
	NmsSettings1TimezoneCanadaEastern string = "Canada/Eastern"

	// NmsSettings1TimezoneCanadaMountain captures enum value "Canada/Mountain"
	NmsSettings1TimezoneCanadaMountain string = "Canada/Mountain"

	// NmsSettings1TimezoneCanadaNewfoundland captures enum value "Canada/Newfoundland"
	NmsSettings1TimezoneCanadaNewfoundland string = "Canada/Newfoundland"

	// NmsSettings1TimezoneCanadaPacific captures enum value "Canada/Pacific"
	NmsSettings1TimezoneCanadaPacific string = "Canada/Pacific"

	// NmsSettings1TimezoneCanadaSaskatchewan captures enum value "Canada/Saskatchewan"
	NmsSettings1TimezoneCanadaSaskatchewan string = "Canada/Saskatchewan"

	// NmsSettings1TimezoneCanadaYukon captures enum value "Canada/Yukon"
	NmsSettings1TimezoneCanadaYukon string = "Canada/Yukon"

	// NmsSettings1TimezoneChileContinental captures enum value "Chile/Continental"
	NmsSettings1TimezoneChileContinental string = "Chile/Continental"

	// NmsSettings1TimezoneChileEasterIsland captures enum value "Chile/EasterIsland"
	NmsSettings1TimezoneChileEasterIsland string = "Chile/EasterIsland"

	// NmsSettings1TimezoneCuba captures enum value "Cuba"
	NmsSettings1TimezoneCuba string = "Cuba"

	// NmsSettings1TimezoneEET captures enum value "EET"
	NmsSettings1TimezoneEET string = "EET"

	// NmsSettings1TimezoneEST captures enum value "EST"
	NmsSettings1TimezoneEST string = "EST"

	// NmsSettings1TimezoneEST5EDT captures enum value "EST5EDT"
	NmsSettings1TimezoneEST5EDT string = "EST5EDT"

	// NmsSettings1TimezoneEgypt captures enum value "Egypt"
	NmsSettings1TimezoneEgypt string = "Egypt"

	// NmsSettings1TimezoneEire captures enum value "Eire"
	NmsSettings1TimezoneEire string = "Eire"

	// NmsSettings1TimezoneEtcGMT captures enum value "Etc/GMT"
	NmsSettings1TimezoneEtcGMT string = "Etc/GMT"

	// NmsSettings1TimezoneEtcGMT0 captures enum value "Etc/GMT+0"
	NmsSettings1TimezoneEtcGMT0 string = "Etc/GMT+0"

	// NmsSettings1TimezoneEtcGMT1 captures enum value "Etc/GMT+1"
	NmsSettings1TimezoneEtcGMT1 string = "Etc/GMT+1"

	// NmsSettings1TimezoneEtcGMT10 captures enum value "Etc/GMT+10"
	NmsSettings1TimezoneEtcGMT10 string = "Etc/GMT+10"

	// NmsSettings1TimezoneEtcGMT11 captures enum value "Etc/GMT+11"
	NmsSettings1TimezoneEtcGMT11 string = "Etc/GMT+11"

	// NmsSettings1TimezoneEtcGMT12 captures enum value "Etc/GMT+12"
	NmsSettings1TimezoneEtcGMT12 string = "Etc/GMT+12"

	// NmsSettings1TimezoneEtcGMT2 captures enum value "Etc/GMT+2"
	NmsSettings1TimezoneEtcGMT2 string = "Etc/GMT+2"

	// NmsSettings1TimezoneEtcGMT3 captures enum value "Etc/GMT+3"
	NmsSettings1TimezoneEtcGMT3 string = "Etc/GMT+3"

	// NmsSettings1TimezoneEtcGMT4 captures enum value "Etc/GMT+4"
	NmsSettings1TimezoneEtcGMT4 string = "Etc/GMT+4"

	// NmsSettings1TimezoneEtcGMT5 captures enum value "Etc/GMT+5"
	NmsSettings1TimezoneEtcGMT5 string = "Etc/GMT+5"

	// NmsSettings1TimezoneEtcGMT6 captures enum value "Etc/GMT+6"
	NmsSettings1TimezoneEtcGMT6 string = "Etc/GMT+6"

	// NmsSettings1TimezoneEtcGMT7 captures enum value "Etc/GMT+7"
	NmsSettings1TimezoneEtcGMT7 string = "Etc/GMT+7"

	// NmsSettings1TimezoneEtcGMT8 captures enum value "Etc/GMT+8"
	NmsSettings1TimezoneEtcGMT8 string = "Etc/GMT+8"

	// NmsSettings1TimezoneEtcGMT9 captures enum value "Etc/GMT+9"
	NmsSettings1TimezoneEtcGMT9 string = "Etc/GMT+9"

	// NmsSettings1TimezoneEtcGMT0 captures enum value "Etc/GMT-0"
	NmsSettings1TimezoneEtcGMT0 string = "Etc/GMT-0"

	// NmsSettings1TimezoneEtcGMT1 captures enum value "Etc/GMT-1"
	NmsSettings1TimezoneEtcGMT1 string = "Etc/GMT-1"

	// NmsSettings1TimezoneEtcGMT10 captures enum value "Etc/GMT-10"
	NmsSettings1TimezoneEtcGMT10 string = "Etc/GMT-10"

	// NmsSettings1TimezoneEtcGMT11 captures enum value "Etc/GMT-11"
	NmsSettings1TimezoneEtcGMT11 string = "Etc/GMT-11"

	// NmsSettings1TimezoneEtcGMT12 captures enum value "Etc/GMT-12"
	NmsSettings1TimezoneEtcGMT12 string = "Etc/GMT-12"

	// NmsSettings1TimezoneEtcGMT13 captures enum value "Etc/GMT-13"
	NmsSettings1TimezoneEtcGMT13 string = "Etc/GMT-13"

	// NmsSettings1TimezoneEtcGMT14 captures enum value "Etc/GMT-14"
	NmsSettings1TimezoneEtcGMT14 string = "Etc/GMT-14"

	// NmsSettings1TimezoneEtcGMT2 captures enum value "Etc/GMT-2"
	NmsSettings1TimezoneEtcGMT2 string = "Etc/GMT-2"

	// NmsSettings1TimezoneEtcGMT3 captures enum value "Etc/GMT-3"
	NmsSettings1TimezoneEtcGMT3 string = "Etc/GMT-3"

	// NmsSettings1TimezoneEtcGMT4 captures enum value "Etc/GMT-4"
	NmsSettings1TimezoneEtcGMT4 string = "Etc/GMT-4"

	// NmsSettings1TimezoneEtcGMT5 captures enum value "Etc/GMT-5"
	NmsSettings1TimezoneEtcGMT5 string = "Etc/GMT-5"

	// NmsSettings1TimezoneEtcGMT6 captures enum value "Etc/GMT-6"
	NmsSettings1TimezoneEtcGMT6 string = "Etc/GMT-6"

	// NmsSettings1TimezoneEtcGMT7 captures enum value "Etc/GMT-7"
	NmsSettings1TimezoneEtcGMT7 string = "Etc/GMT-7"

	// NmsSettings1TimezoneEtcGMT8 captures enum value "Etc/GMT-8"
	NmsSettings1TimezoneEtcGMT8 string = "Etc/GMT-8"

	// NmsSettings1TimezoneEtcGMT9 captures enum value "Etc/GMT-9"
	NmsSettings1TimezoneEtcGMT9 string = "Etc/GMT-9"

	// NmsSettings1TimezoneEtcGMT0 captures enum value "Etc/GMT0"
	NmsSettings1TimezoneEtcGMT0 string = "Etc/GMT0"

	// NmsSettings1TimezoneEtcGreenwich captures enum value "Etc/Greenwich"
	NmsSettings1TimezoneEtcGreenwich string = "Etc/Greenwich"

	// NmsSettings1TimezoneEtcUCT captures enum value "Etc/UCT"
	NmsSettings1TimezoneEtcUCT string = "Etc/UCT"

	// NmsSettings1TimezoneEtcUTC captures enum value "Etc/UTC"
	NmsSettings1TimezoneEtcUTC string = "Etc/UTC"

	// NmsSettings1TimezoneEtcUniversal captures enum value "Etc/Universal"
	NmsSettings1TimezoneEtcUniversal string = "Etc/Universal"

	// NmsSettings1TimezoneEtcZulu captures enum value "Etc/Zulu"
	NmsSettings1TimezoneEtcZulu string = "Etc/Zulu"

	// NmsSettings1TimezoneEuropeAmsterdam captures enum value "Europe/Amsterdam"
	NmsSettings1TimezoneEuropeAmsterdam string = "Europe/Amsterdam"

	// NmsSettings1TimezoneEuropeAndorra captures enum value "Europe/Andorra"
	NmsSettings1TimezoneEuropeAndorra string = "Europe/Andorra"

	// NmsSettings1TimezoneEuropeAstrakhan captures enum value "Europe/Astrakhan"
	NmsSettings1TimezoneEuropeAstrakhan string = "Europe/Astrakhan"

	// NmsSettings1TimezoneEuropeAthens captures enum value "Europe/Athens"
	NmsSettings1TimezoneEuropeAthens string = "Europe/Athens"

	// NmsSettings1TimezoneEuropeBelfast captures enum value "Europe/Belfast"
	NmsSettings1TimezoneEuropeBelfast string = "Europe/Belfast"

	// NmsSettings1TimezoneEuropeBelgrade captures enum value "Europe/Belgrade"
	NmsSettings1TimezoneEuropeBelgrade string = "Europe/Belgrade"

	// NmsSettings1TimezoneEuropeBerlin captures enum value "Europe/Berlin"
	NmsSettings1TimezoneEuropeBerlin string = "Europe/Berlin"

	// NmsSettings1TimezoneEuropeBratislava captures enum value "Europe/Bratislava"
	NmsSettings1TimezoneEuropeBratislava string = "Europe/Bratislava"

	// NmsSettings1TimezoneEuropeBrussels captures enum value "Europe/Brussels"
	NmsSettings1TimezoneEuropeBrussels string = "Europe/Brussels"

	// NmsSettings1TimezoneEuropeBucharest captures enum value "Europe/Bucharest"
	NmsSettings1TimezoneEuropeBucharest string = "Europe/Bucharest"

	// NmsSettings1TimezoneEuropeBudapest captures enum value "Europe/Budapest"
	NmsSettings1TimezoneEuropeBudapest string = "Europe/Budapest"

	// NmsSettings1TimezoneEuropeBusingen captures enum value "Europe/Busingen"
	NmsSettings1TimezoneEuropeBusingen string = "Europe/Busingen"

	// NmsSettings1TimezoneEuropeChisinau captures enum value "Europe/Chisinau"
	NmsSettings1TimezoneEuropeChisinau string = "Europe/Chisinau"

	// NmsSettings1TimezoneEuropeCopenhagen captures enum value "Europe/Copenhagen"
	NmsSettings1TimezoneEuropeCopenhagen string = "Europe/Copenhagen"

	// NmsSettings1TimezoneEuropeDublin captures enum value "Europe/Dublin"
	NmsSettings1TimezoneEuropeDublin string = "Europe/Dublin"

	// NmsSettings1TimezoneEuropeGibraltar captures enum value "Europe/Gibraltar"
	NmsSettings1TimezoneEuropeGibraltar string = "Europe/Gibraltar"

	// NmsSettings1TimezoneEuropeGuernsey captures enum value "Europe/Guernsey"
	NmsSettings1TimezoneEuropeGuernsey string = "Europe/Guernsey"

	// NmsSettings1TimezoneEuropeHelsinki captures enum value "Europe/Helsinki"
	NmsSettings1TimezoneEuropeHelsinki string = "Europe/Helsinki"

	// NmsSettings1TimezoneEuropeIsleOfMan captures enum value "Europe/Isle_of_Man"
	NmsSettings1TimezoneEuropeIsleOfMan string = "Europe/Isle_of_Man"

	// NmsSettings1TimezoneEuropeIstanbul captures enum value "Europe/Istanbul"
	NmsSettings1TimezoneEuropeIstanbul string = "Europe/Istanbul"

	// NmsSettings1TimezoneEuropeJersey captures enum value "Europe/Jersey"
	NmsSettings1TimezoneEuropeJersey string = "Europe/Jersey"

	// NmsSettings1TimezoneEuropeKaliningrad captures enum value "Europe/Kaliningrad"
	NmsSettings1TimezoneEuropeKaliningrad string = "Europe/Kaliningrad"

	// NmsSettings1TimezoneEuropeKiev captures enum value "Europe/Kiev"
	NmsSettings1TimezoneEuropeKiev string = "Europe/Kiev"

	// NmsSettings1TimezoneEuropeKirov captures enum value "Europe/Kirov"
	NmsSettings1TimezoneEuropeKirov string = "Europe/Kirov"

	// NmsSettings1TimezoneEuropeLisbon captures enum value "Europe/Lisbon"
	NmsSettings1TimezoneEuropeLisbon string = "Europe/Lisbon"

	// NmsSettings1TimezoneEuropeLjubljana captures enum value "Europe/Ljubljana"
	NmsSettings1TimezoneEuropeLjubljana string = "Europe/Ljubljana"

	// NmsSettings1TimezoneEuropeLondon captures enum value "Europe/London"
	NmsSettings1TimezoneEuropeLondon string = "Europe/London"

	// NmsSettings1TimezoneEuropeLuxembourg captures enum value "Europe/Luxembourg"
	NmsSettings1TimezoneEuropeLuxembourg string = "Europe/Luxembourg"

	// NmsSettings1TimezoneEuropeMadrid captures enum value "Europe/Madrid"
	NmsSettings1TimezoneEuropeMadrid string = "Europe/Madrid"

	// NmsSettings1TimezoneEuropeMalta captures enum value "Europe/Malta"
	NmsSettings1TimezoneEuropeMalta string = "Europe/Malta"

	// NmsSettings1TimezoneEuropeMariehamn captures enum value "Europe/Mariehamn"
	NmsSettings1TimezoneEuropeMariehamn string = "Europe/Mariehamn"

	// NmsSettings1TimezoneEuropeMinsk captures enum value "Europe/Minsk"
	NmsSettings1TimezoneEuropeMinsk string = "Europe/Minsk"

	// NmsSettings1TimezoneEuropeMonaco captures enum value "Europe/Monaco"
	NmsSettings1TimezoneEuropeMonaco string = "Europe/Monaco"

	// NmsSettings1TimezoneEuropeMoscow captures enum value "Europe/Moscow"
	NmsSettings1TimezoneEuropeMoscow string = "Europe/Moscow"

	// NmsSettings1TimezoneEuropeNicosia captures enum value "Europe/Nicosia"
	NmsSettings1TimezoneEuropeNicosia string = "Europe/Nicosia"

	// NmsSettings1TimezoneEuropeOslo captures enum value "Europe/Oslo"
	NmsSettings1TimezoneEuropeOslo string = "Europe/Oslo"

	// NmsSettings1TimezoneEuropeParis captures enum value "Europe/Paris"
	NmsSettings1TimezoneEuropeParis string = "Europe/Paris"

	// NmsSettings1TimezoneEuropePodgorica captures enum value "Europe/Podgorica"
	NmsSettings1TimezoneEuropePodgorica string = "Europe/Podgorica"

	// NmsSettings1TimezoneEuropePrague captures enum value "Europe/Prague"
	NmsSettings1TimezoneEuropePrague string = "Europe/Prague"

	// NmsSettings1TimezoneEuropeRiga captures enum value "Europe/Riga"
	NmsSettings1TimezoneEuropeRiga string = "Europe/Riga"

	// NmsSettings1TimezoneEuropeRome captures enum value "Europe/Rome"
	NmsSettings1TimezoneEuropeRome string = "Europe/Rome"

	// NmsSettings1TimezoneEuropeSamara captures enum value "Europe/Samara"
	NmsSettings1TimezoneEuropeSamara string = "Europe/Samara"

	// NmsSettings1TimezoneEuropeSanMarino captures enum value "Europe/San_Marino"
	NmsSettings1TimezoneEuropeSanMarino string = "Europe/San_Marino"

	// NmsSettings1TimezoneEuropeSarajevo captures enum value "Europe/Sarajevo"
	NmsSettings1TimezoneEuropeSarajevo string = "Europe/Sarajevo"

	// NmsSettings1TimezoneEuropeSaratov captures enum value "Europe/Saratov"
	NmsSettings1TimezoneEuropeSaratov string = "Europe/Saratov"

	// NmsSettings1TimezoneEuropeSimferopol captures enum value "Europe/Simferopol"
	NmsSettings1TimezoneEuropeSimferopol string = "Europe/Simferopol"

	// NmsSettings1TimezoneEuropeSkopje captures enum value "Europe/Skopje"
	NmsSettings1TimezoneEuropeSkopje string = "Europe/Skopje"

	// NmsSettings1TimezoneEuropeSofia captures enum value "Europe/Sofia"
	NmsSettings1TimezoneEuropeSofia string = "Europe/Sofia"

	// NmsSettings1TimezoneEuropeStockholm captures enum value "Europe/Stockholm"
	NmsSettings1TimezoneEuropeStockholm string = "Europe/Stockholm"

	// NmsSettings1TimezoneEuropeTallinn captures enum value "Europe/Tallinn"
	NmsSettings1TimezoneEuropeTallinn string = "Europe/Tallinn"

	// NmsSettings1TimezoneEuropeTirane captures enum value "Europe/Tirane"
	NmsSettings1TimezoneEuropeTirane string = "Europe/Tirane"

	// NmsSettings1TimezoneEuropeTiraspol captures enum value "Europe/Tiraspol"
	NmsSettings1TimezoneEuropeTiraspol string = "Europe/Tiraspol"

	// NmsSettings1TimezoneEuropeUlyanovsk captures enum value "Europe/Ulyanovsk"
	NmsSettings1TimezoneEuropeUlyanovsk string = "Europe/Ulyanovsk"

	// NmsSettings1TimezoneEuropeUzhgorod captures enum value "Europe/Uzhgorod"
	NmsSettings1TimezoneEuropeUzhgorod string = "Europe/Uzhgorod"

	// NmsSettings1TimezoneEuropeVaduz captures enum value "Europe/Vaduz"
	NmsSettings1TimezoneEuropeVaduz string = "Europe/Vaduz"

	// NmsSettings1TimezoneEuropeVatican captures enum value "Europe/Vatican"
	NmsSettings1TimezoneEuropeVatican string = "Europe/Vatican"

	// NmsSettings1TimezoneEuropeVienna captures enum value "Europe/Vienna"
	NmsSettings1TimezoneEuropeVienna string = "Europe/Vienna"

	// NmsSettings1TimezoneEuropeVilnius captures enum value "Europe/Vilnius"
	NmsSettings1TimezoneEuropeVilnius string = "Europe/Vilnius"

	// NmsSettings1TimezoneEuropeVolgograd captures enum value "Europe/Volgograd"
	NmsSettings1TimezoneEuropeVolgograd string = "Europe/Volgograd"

	// NmsSettings1TimezoneEuropeWarsaw captures enum value "Europe/Warsaw"
	NmsSettings1TimezoneEuropeWarsaw string = "Europe/Warsaw"

	// NmsSettings1TimezoneEuropeZagreb captures enum value "Europe/Zagreb"
	NmsSettings1TimezoneEuropeZagreb string = "Europe/Zagreb"

	// NmsSettings1TimezoneEuropeZaporozhye captures enum value "Europe/Zaporozhye"
	NmsSettings1TimezoneEuropeZaporozhye string = "Europe/Zaporozhye"

	// NmsSettings1TimezoneEuropeZurich captures enum value "Europe/Zurich"
	NmsSettings1TimezoneEuropeZurich string = "Europe/Zurich"

	// NmsSettings1TimezoneGB captures enum value "GB"
	NmsSettings1TimezoneGB string = "GB"

	// NmsSettings1TimezoneGBEire captures enum value "GB-Eire"
	NmsSettings1TimezoneGBEire string = "GB-Eire"

	// NmsSettings1TimezoneGMT captures enum value "GMT"
	NmsSettings1TimezoneGMT string = "GMT"

	// NmsSettings1TimezoneGMT0 captures enum value "GMT+0"
	NmsSettings1TimezoneGMT0 string = "GMT+0"

	// NmsSettings1TimezoneGMT0 captures enum value "GMT-0"
	NmsSettings1TimezoneGMT0 string = "GMT-0"

	// NmsSettings1TimezoneGMT0 captures enum value "GMT0"
	NmsSettings1TimezoneGMT0 string = "GMT0"

	// NmsSettings1TimezoneGreenwich captures enum value "Greenwich"
	NmsSettings1TimezoneGreenwich string = "Greenwich"

	// NmsSettings1TimezoneHST captures enum value "HST"
	NmsSettings1TimezoneHST string = "HST"

	// NmsSettings1TimezoneHongkong captures enum value "Hongkong"
	NmsSettings1TimezoneHongkong string = "Hongkong"

	// NmsSettings1TimezoneIceland captures enum value "Iceland"
	NmsSettings1TimezoneIceland string = "Iceland"

	// NmsSettings1TimezoneIndianAntananarivo captures enum value "Indian/Antananarivo"
	NmsSettings1TimezoneIndianAntananarivo string = "Indian/Antananarivo"

	// NmsSettings1TimezoneIndianChagos captures enum value "Indian/Chagos"
	NmsSettings1TimezoneIndianChagos string = "Indian/Chagos"

	// NmsSettings1TimezoneIndianChristmas captures enum value "Indian/Christmas"
	NmsSettings1TimezoneIndianChristmas string = "Indian/Christmas"

	// NmsSettings1TimezoneIndianCocos captures enum value "Indian/Cocos"
	NmsSettings1TimezoneIndianCocos string = "Indian/Cocos"

	// NmsSettings1TimezoneIndianComoro captures enum value "Indian/Comoro"
	NmsSettings1TimezoneIndianComoro string = "Indian/Comoro"

	// NmsSettings1TimezoneIndianKerguelen captures enum value "Indian/Kerguelen"
	NmsSettings1TimezoneIndianKerguelen string = "Indian/Kerguelen"

	// NmsSettings1TimezoneIndianMahe captures enum value "Indian/Mahe"
	NmsSettings1TimezoneIndianMahe string = "Indian/Mahe"

	// NmsSettings1TimezoneIndianMaldives captures enum value "Indian/Maldives"
	NmsSettings1TimezoneIndianMaldives string = "Indian/Maldives"

	// NmsSettings1TimezoneIndianMauritius captures enum value "Indian/Mauritius"
	NmsSettings1TimezoneIndianMauritius string = "Indian/Mauritius"

	// NmsSettings1TimezoneIndianMayotte captures enum value "Indian/Mayotte"
	NmsSettings1TimezoneIndianMayotte string = "Indian/Mayotte"

	// NmsSettings1TimezoneIndianReunion captures enum value "Indian/Reunion"
	NmsSettings1TimezoneIndianReunion string = "Indian/Reunion"

	// NmsSettings1TimezoneIran captures enum value "Iran"
	NmsSettings1TimezoneIran string = "Iran"

	// NmsSettings1TimezoneIsrael captures enum value "Israel"
	NmsSettings1TimezoneIsrael string = "Israel"

	// NmsSettings1TimezoneJamaica captures enum value "Jamaica"
	NmsSettings1TimezoneJamaica string = "Jamaica"

	// NmsSettings1TimezoneJapan captures enum value "Japan"
	NmsSettings1TimezoneJapan string = "Japan"

	// NmsSettings1TimezoneKwajalein captures enum value "Kwajalein"
	NmsSettings1TimezoneKwajalein string = "Kwajalein"

	// NmsSettings1TimezoneLibya captures enum value "Libya"
	NmsSettings1TimezoneLibya string = "Libya"

	// NmsSettings1TimezoneMET captures enum value "MET"
	NmsSettings1TimezoneMET string = "MET"

	// NmsSettings1TimezoneMST captures enum value "MST"
	NmsSettings1TimezoneMST string = "MST"

	// NmsSettings1TimezoneMST7MDT captures enum value "MST7MDT"
	NmsSettings1TimezoneMST7MDT string = "MST7MDT"

	// NmsSettings1TimezoneMexicoBajaNorte captures enum value "Mexico/BajaNorte"
	NmsSettings1TimezoneMexicoBajaNorte string = "Mexico/BajaNorte"

	// NmsSettings1TimezoneMexicoBajaSur captures enum value "Mexico/BajaSur"
	NmsSettings1TimezoneMexicoBajaSur string = "Mexico/BajaSur"

	// NmsSettings1TimezoneMexicoGeneral captures enum value "Mexico/General"
	NmsSettings1TimezoneMexicoGeneral string = "Mexico/General"

	// NmsSettings1TimezoneNZ captures enum value "NZ"
	NmsSettings1TimezoneNZ string = "NZ"

	// NmsSettings1TimezoneNZCHAT captures enum value "NZ-CHAT"
	NmsSettings1TimezoneNZCHAT string = "NZ-CHAT"

	// NmsSettings1TimezoneNavajo captures enum value "Navajo"
	NmsSettings1TimezoneNavajo string = "Navajo"

	// NmsSettings1TimezonePRC captures enum value "PRC"
	NmsSettings1TimezonePRC string = "PRC"

	// NmsSettings1TimezonePST8PDT captures enum value "PST8PDT"
	NmsSettings1TimezonePST8PDT string = "PST8PDT"

	// NmsSettings1TimezonePacificApia captures enum value "Pacific/Apia"
	NmsSettings1TimezonePacificApia string = "Pacific/Apia"

	// NmsSettings1TimezonePacificAuckland captures enum value "Pacific/Auckland"
	NmsSettings1TimezonePacificAuckland string = "Pacific/Auckland"

	// NmsSettings1TimezonePacificBougainville captures enum value "Pacific/Bougainville"
	NmsSettings1TimezonePacificBougainville string = "Pacific/Bougainville"

	// NmsSettings1TimezonePacificChatham captures enum value "Pacific/Chatham"
	NmsSettings1TimezonePacificChatham string = "Pacific/Chatham"

	// NmsSettings1TimezonePacificChuuk captures enum value "Pacific/Chuuk"
	NmsSettings1TimezonePacificChuuk string = "Pacific/Chuuk"

	// NmsSettings1TimezonePacificEaster captures enum value "Pacific/Easter"
	NmsSettings1TimezonePacificEaster string = "Pacific/Easter"

	// NmsSettings1TimezonePacificEfate captures enum value "Pacific/Efate"
	NmsSettings1TimezonePacificEfate string = "Pacific/Efate"

	// NmsSettings1TimezonePacificEnderbury captures enum value "Pacific/Enderbury"
	NmsSettings1TimezonePacificEnderbury string = "Pacific/Enderbury"

	// NmsSettings1TimezonePacificFakaofo captures enum value "Pacific/Fakaofo"
	NmsSettings1TimezonePacificFakaofo string = "Pacific/Fakaofo"

	// NmsSettings1TimezonePacificFiji captures enum value "Pacific/Fiji"
	NmsSettings1TimezonePacificFiji string = "Pacific/Fiji"

	// NmsSettings1TimezonePacificFunafuti captures enum value "Pacific/Funafuti"
	NmsSettings1TimezonePacificFunafuti string = "Pacific/Funafuti"

	// NmsSettings1TimezonePacificGalapagos captures enum value "Pacific/Galapagos"
	NmsSettings1TimezonePacificGalapagos string = "Pacific/Galapagos"

	// NmsSettings1TimezonePacificGambier captures enum value "Pacific/Gambier"
	NmsSettings1TimezonePacificGambier string = "Pacific/Gambier"

	// NmsSettings1TimezonePacificGuadalcanal captures enum value "Pacific/Guadalcanal"
	NmsSettings1TimezonePacificGuadalcanal string = "Pacific/Guadalcanal"

	// NmsSettings1TimezonePacificGuam captures enum value "Pacific/Guam"
	NmsSettings1TimezonePacificGuam string = "Pacific/Guam"

	// NmsSettings1TimezonePacificHonolulu captures enum value "Pacific/Honolulu"
	NmsSettings1TimezonePacificHonolulu string = "Pacific/Honolulu"

	// NmsSettings1TimezonePacificJohnston captures enum value "Pacific/Johnston"
	NmsSettings1TimezonePacificJohnston string = "Pacific/Johnston"

	// NmsSettings1TimezonePacificKiritimati captures enum value "Pacific/Kiritimati"
	NmsSettings1TimezonePacificKiritimati string = "Pacific/Kiritimati"

	// NmsSettings1TimezonePacificKosrae captures enum value "Pacific/Kosrae"
	NmsSettings1TimezonePacificKosrae string = "Pacific/Kosrae"

	// NmsSettings1TimezonePacificKwajalein captures enum value "Pacific/Kwajalein"
	NmsSettings1TimezonePacificKwajalein string = "Pacific/Kwajalein"

	// NmsSettings1TimezonePacificMajuro captures enum value "Pacific/Majuro"
	NmsSettings1TimezonePacificMajuro string = "Pacific/Majuro"

	// NmsSettings1TimezonePacificMarquesas captures enum value "Pacific/Marquesas"
	NmsSettings1TimezonePacificMarquesas string = "Pacific/Marquesas"

	// NmsSettings1TimezonePacificMidway captures enum value "Pacific/Midway"
	NmsSettings1TimezonePacificMidway string = "Pacific/Midway"

	// NmsSettings1TimezonePacificNauru captures enum value "Pacific/Nauru"
	NmsSettings1TimezonePacificNauru string = "Pacific/Nauru"

	// NmsSettings1TimezonePacificNiue captures enum value "Pacific/Niue"
	NmsSettings1TimezonePacificNiue string = "Pacific/Niue"

	// NmsSettings1TimezonePacificNorfolk captures enum value "Pacific/Norfolk"
	NmsSettings1TimezonePacificNorfolk string = "Pacific/Norfolk"

	// NmsSettings1TimezonePacificNoumea captures enum value "Pacific/Noumea"
	NmsSettings1TimezonePacificNoumea string = "Pacific/Noumea"

	// NmsSettings1TimezonePacificPagoPago captures enum value "Pacific/Pago_Pago"
	NmsSettings1TimezonePacificPagoPago string = "Pacific/Pago_Pago"

	// NmsSettings1TimezonePacificPalau captures enum value "Pacific/Palau"
	NmsSettings1TimezonePacificPalau string = "Pacific/Palau"

	// NmsSettings1TimezonePacificPitcairn captures enum value "Pacific/Pitcairn"
	NmsSettings1TimezonePacificPitcairn string = "Pacific/Pitcairn"

	// NmsSettings1TimezonePacificPohnpei captures enum value "Pacific/Pohnpei"
	NmsSettings1TimezonePacificPohnpei string = "Pacific/Pohnpei"

	// NmsSettings1TimezonePacificPonape captures enum value "Pacific/Ponape"
	NmsSettings1TimezonePacificPonape string = "Pacific/Ponape"

	// NmsSettings1TimezonePacificPortMoresby captures enum value "Pacific/Port_Moresby"
	NmsSettings1TimezonePacificPortMoresby string = "Pacific/Port_Moresby"

	// NmsSettings1TimezonePacificRarotonga captures enum value "Pacific/Rarotonga"
	NmsSettings1TimezonePacificRarotonga string = "Pacific/Rarotonga"

	// NmsSettings1TimezonePacificSaipan captures enum value "Pacific/Saipan"
	NmsSettings1TimezonePacificSaipan string = "Pacific/Saipan"

	// NmsSettings1TimezonePacificSamoa captures enum value "Pacific/Samoa"
	NmsSettings1TimezonePacificSamoa string = "Pacific/Samoa"

	// NmsSettings1TimezonePacificTahiti captures enum value "Pacific/Tahiti"
	NmsSettings1TimezonePacificTahiti string = "Pacific/Tahiti"

	// NmsSettings1TimezonePacificTarawa captures enum value "Pacific/Tarawa"
	NmsSettings1TimezonePacificTarawa string = "Pacific/Tarawa"

	// NmsSettings1TimezonePacificTongatapu captures enum value "Pacific/Tongatapu"
	NmsSettings1TimezonePacificTongatapu string = "Pacific/Tongatapu"

	// NmsSettings1TimezonePacificTruk captures enum value "Pacific/Truk"
	NmsSettings1TimezonePacificTruk string = "Pacific/Truk"

	// NmsSettings1TimezonePacificWake captures enum value "Pacific/Wake"
	NmsSettings1TimezonePacificWake string = "Pacific/Wake"

	// NmsSettings1TimezonePacificWallis captures enum value "Pacific/Wallis"
	NmsSettings1TimezonePacificWallis string = "Pacific/Wallis"

	// NmsSettings1TimezonePacificYap captures enum value "Pacific/Yap"
	NmsSettings1TimezonePacificYap string = "Pacific/Yap"

	// NmsSettings1TimezonePoland captures enum value "Poland"
	NmsSettings1TimezonePoland string = "Poland"

	// NmsSettings1TimezonePortugal captures enum value "Portugal"
	NmsSettings1TimezonePortugal string = "Portugal"

	// NmsSettings1TimezoneROC captures enum value "ROC"
	NmsSettings1TimezoneROC string = "ROC"

	// NmsSettings1TimezoneROK captures enum value "ROK"
	NmsSettings1TimezoneROK string = "ROK"

	// NmsSettings1TimezoneSingapore captures enum value "Singapore"
	NmsSettings1TimezoneSingapore string = "Singapore"

	// NmsSettings1TimezoneTurkey captures enum value "Turkey"
	NmsSettings1TimezoneTurkey string = "Turkey"

	// NmsSettings1TimezoneUCT captures enum value "UCT"
	NmsSettings1TimezoneUCT string = "UCT"

	// NmsSettings1TimezoneUSAlaska captures enum value "US/Alaska"
	NmsSettings1TimezoneUSAlaska string = "US/Alaska"

	// NmsSettings1TimezoneUSAleutian captures enum value "US/Aleutian"
	NmsSettings1TimezoneUSAleutian string = "US/Aleutian"

	// NmsSettings1TimezoneUSArizona captures enum value "US/Arizona"
	NmsSettings1TimezoneUSArizona string = "US/Arizona"

	// NmsSettings1TimezoneUSCentral captures enum value "US/Central"
	NmsSettings1TimezoneUSCentral string = "US/Central"

	// NmsSettings1TimezoneUSEastIndiana captures enum value "US/East-Indiana"
	NmsSettings1TimezoneUSEastIndiana string = "US/East-Indiana"

	// NmsSettings1TimezoneUSEastern captures enum value "US/Eastern"
	NmsSettings1TimezoneUSEastern string = "US/Eastern"

	// NmsSettings1TimezoneUSHawaii captures enum value "US/Hawaii"
	NmsSettings1TimezoneUSHawaii string = "US/Hawaii"

	// NmsSettings1TimezoneUSIndianaStarke captures enum value "US/Indiana-Starke"
	NmsSettings1TimezoneUSIndianaStarke string = "US/Indiana-Starke"

	// NmsSettings1TimezoneUSMichigan captures enum value "US/Michigan"
	NmsSettings1TimezoneUSMichigan string = "US/Michigan"

	// NmsSettings1TimezoneUSMountain captures enum value "US/Mountain"
	NmsSettings1TimezoneUSMountain string = "US/Mountain"

	// NmsSettings1TimezoneUSPacific captures enum value "US/Pacific"
	NmsSettings1TimezoneUSPacific string = "US/Pacific"

	// NmsSettings1TimezoneUSPacificNew captures enum value "US/Pacific-New"
	NmsSettings1TimezoneUSPacificNew string = "US/Pacific-New"

	// NmsSettings1TimezoneUSSamoa captures enum value "US/Samoa"
	NmsSettings1TimezoneUSSamoa string = "US/Samoa"

	// NmsSettings1TimezoneUTC captures enum value "UTC"
	NmsSettings1TimezoneUTC string = "UTC"

	// NmsSettings1TimezoneUniversal captures enum value "Universal"
	NmsSettings1TimezoneUniversal string = "Universal"

	// NmsSettings1TimezoneWSU captures enum value "W-SU"
	NmsSettings1TimezoneWSU string = "W-SU"

	// NmsSettings1TimezoneWET captures enum value "WET"
	NmsSettings1TimezoneWET string = "WET"

	// NmsSettings1TimezoneZulu captures enum value "Zulu"
	NmsSettings1TimezoneZulu string = "Zulu"
)

// prop value enum
func (m *NmsSettings1) validateTimezoneEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, nmsSettings1TypeTimezonePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NmsSettings1) validateTimezone(formats strfmt.Registry) error {

	if err := validate.Required("timezone", "body", m.Timezone); err != nil {
		return err
	}

	// value enum
	if err := m.validateTimezoneEnum("timezone", "body", *m.Timezone); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateTrafficShapingAdjustment(formats strfmt.Registry) error {

	if swag.IsZero(m.TrafficShapingAdjustment) { // not required
		return nil
	}

	if err := validate.MinimumInt("trafficShapingAdjustment", "body", int64(m.TrafficShapingAdjustment), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("trafficShapingAdjustment", "body", int64(m.TrafficShapingAdjustment), 100, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateUcrmEnabled(formats strfmt.Registry) error {

	if err := validate.Required("ucrmEnabled", "body", m.UcrmEnabled); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateUpgradeGracePeriod(formats strfmt.Registry) error {

	if err := validate.Required("upgradeGracePeriod", "body", m.UpgradeGracePeriod); err != nil {
		return err
	}

	if err := validate.MinimumInt("upgradeGracePeriod", "body", int64(*m.UpgradeGracePeriod), 30000, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("upgradeGracePeriod", "body", int64(*m.UpgradeGracePeriod), 2.592e+09, false); err != nil {
		return err
	}

	return nil
}

func (m *NmsSettings1) validateUseLetsEncrypt(formats strfmt.Registry) error {

	if err := validate.Required("useLetsEncrypt", "body", m.UseLetsEncrypt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NmsSettings1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NmsSettings1) UnmarshalBinary(b []byte) error {
	var res NmsSettings1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
