// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Interface1 interface 1
// swagger:model interface 1
type Interface1 struct {

	// sfp 1
	SfpPlus1 *Sfp1 `json:"sfp+1,omitempty"`

	// sfp 2
	SfpPlus2 *Sfp2 `json:"sfp+2,omitempty"`

	// sfp1
	Sfp1 *Sfp1 `json:"sfp1,omitempty"`

	// sfp2
	Sfp2 *Sfp2 `json:"sfp2,omitempty"`
}

// Validate validates this interface 1
func (m *Interface1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSfp1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSfp2(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSfp1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSfp2(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Interface1) validateSfpPlus1(formats strfmt.Registry) error {

	if swag.IsZero(m.SfpPlus1) { // not required
		return nil
	}

	if m.Sfp1 != nil {
		if err := m.Sfp1.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfp+1")
			}
			return err
		}
	}

	return nil
}

func (m *Interface1) validateSfpPlus2(formats strfmt.Registry) error {

	if swag.IsZero(m.SfpPlus2) { // not required
		return nil
	}

	if m.Sfp2 != nil {
		if err := m.Sfp2.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfp+2")
			}
			return err
		}
	}

	return nil
}

func (m *Interface1) validateSfp1(formats strfmt.Registry) error {

	if swag.IsZero(m.Sfp1) { // not required
		return nil
	}

	if m.Sfp1 != nil {
		if err := m.Sfp1.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfp1")
			}
			return err
		}
	}

	return nil
}

func (m *Interface1) validateSfp2(formats strfmt.Registry) error {

	if swag.IsZero(m.Sfp2) { // not required
		return nil
	}

	if m.Sfp2 != nil {
		if err := m.Sfp2.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sfp2")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Interface1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Interface1) UnmarshalBinary(b []byte) error {
	var res Interface1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
